/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/peft/utils/save_and_load.py:154: UserWarning: Could not find a config file in /mnt/petrelfs/liaoyusheng/oss/download_models/Qwen1.5-7B-Chat - will assume that the vocabulary was not modified.
  warnings.warn(
  0%|          | 0/3107 [00:00<?, ?it/s]/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
  0%|          | 1/3107 [00:35<30:53:31, 35.81s/it]

  0%|          | 2/3107 [00:52<21:14:59, 24.64s/it]

  0%|          | 3/3107 [01:06<16:52:28, 19.57s/it]

  0%|          | 4/3107 [01:25<16:55:40, 19.64s/it]

  0%|          | 5/3107 [01:48<17:49:24, 20.68s/it]

  0%|          | 6/3107 [02:02<15:54:16, 18.46s/it]

  0%|          | 7/3107 [02:19<15:34:34, 18.09s/it]

  0%|          | 8/3107 [02:42<16:53:35, 19.62s/it]

  0%|          | 9/3107 [03:03<17:13:14, 20.01s/it]

  0%|          | 10/3107 [03:33<19:45:25, 22.97s/it]

  0%|          | 11/3107 [03:54<19:14:39, 22.38s/it]

  0%|          | 12/3107 [04:09<17:15:55, 20.08s/it]
{'loss': 1.2615, 'grad_norm': 0.42394488215602555, 'learning_rate': 2.5531914893617022e-05, 'epoch': 0.0}


  0%|          | 14/3107 [04:41<15:34:54, 18.14s/it]

  0%|          | 15/3107 [04:52<13:44:45, 16.00s/it]

  1%|          | 16/3107 [05:13<15:01:18, 17.50s/it]

  1%|          | 17/3107 [05:29<14:37:39, 17.04s/it]
{'loss': 1.2781, 'grad_norm': 0.33634102027728646, 'learning_rate': 3.617021276595745e-05, 'epoch': 0.01}


  1%|          | 19/3107 [06:01<13:51:53, 16.16s/it]
{'loss': 1.2782, 'grad_norm': 0.32067831485962506, 'learning_rate': 4.0425531914893614e-05, 'epoch': 0.01}


  1%|          | 21/3107 [06:34<14:06:01, 16.45s/it]

  1%|          | 22/3107 [06:52<14:25:24, 16.83s/it]
{'loss': 1.182, 'grad_norm': 0.2680544636899323, 'learning_rate': 4.680851063829788e-05, 'epoch': 0.01}


  1%|          | 24/3107 [07:38<17:26:17, 20.36s/it]

  1%|          | 25/3107 [07:50<15:19:53, 17.91s/it]

  1%|          | 26/3107 [08:05<14:23:41, 16.82s/it]
{'loss': 1.1639, 'grad_norm': 0.19514687750647358, 'learning_rate': 5.531914893617022e-05, 'epoch': 0.01}


  1%|          | 28/3107 [08:39<14:29:40, 16.95s/it]

  1%|          | 29/3107 [09:06<17:07:14, 20.02s/it]
{'loss': 1.1206, 'grad_norm': 0.20627475667036993, 'learning_rate': 6.170212765957447e-05, 'epoch': 0.01}


  1%|          | 31/3107 [09:47<17:26:48, 20.42s/it]
{'loss': 1.0287, 'grad_norm': 0.17511133013316293, 'learning_rate': 6.595744680851063e-05, 'epoch': 0.01}

  1%|          | 32/3107 [10:08<17:30:01, 20.49s/it]

  1%|          | 33/3107 [10:26<16:50:53, 19.73s/it]


  1%|          | 35/3107 [11:07<16:59:59, 19.92s/it]

  1%|          | 36/3107 [11:23<16:10:46, 18.97s/it]
{'loss': 1.0334, 'grad_norm': 0.16237416984721215, 'learning_rate': 7.659574468085106e-05, 'epoch': 0.01}


  1%|          | 38/3107 [12:00<16:16:46, 19.10s/it]

  1%|▏         | 39/3107 [12:15<15:04:37, 17.69s/it]
{'loss': 1.099, 'grad_norm': 0.15599642248991363, 'learning_rate': 8.297872340425533e-05, 'epoch': 0.01}


  1%|▏         | 41/3107 [13:02<17:40:42, 20.76s/it]

  1%|▏         | 42/3107 [13:21<17:06:40, 20.10s/it]
{'loss': 1.087, 'grad_norm': 0.15326658112359198, 'learning_rate': 8.936170212765958e-05, 'epoch': 0.01}


  1%|▏         | 44/3107 [13:45<13:39:54, 16.06s/it]

  1%|▏         | 45/3107 [14:07<14:57:48, 17.59s/it]

  1%|▏         | 46/3107 [14:25<15:13:34, 17.91s/it]

  2%|▏         | 47/3107 [14:47<16:17:36, 19.17s/it]

  2%|▏         | 48/3107 [15:07<16:21:11, 19.25s/it]

  2%|▏         | 49/3107 [15:21<15:08:31, 17.83s/it]

  2%|▏         | 50/3107 [15:48<17:28:31, 20.58s/it]

  2%|▏         | 51/3107 [16:01<15:28:11, 18.22s/it]
{'loss': 1.0756, 'grad_norm': 0.14004880543239012, 'learning_rate': 0.00010851063829787234, 'epoch': 0.02}

  2%|▏         | 52/3107 [16:24<16:36:00, 19.56s/it]

  2%|▏         | 53/3107 [16:40<15:47:47, 18.62s/it]

  2%|▏         | 54/3107 [17:02<16:38:45, 19.63s/it]


  2%|▏         | 56/3107 [17:31<14:29:49, 17.11s/it]
{'loss': 0.9823, 'grad_norm': 0.15040916556425052, 'learning_rate': 0.00011914893617021277, 'epoch': 0.02}

  2%|▏         | 57/3107 [17:54<16:10:56, 19.10s/it]


  2%|▏         | 59/3107 [18:33<16:07:23, 19.04s/it]

  2%|▏         | 60/3107 [18:43<14:01:13, 16.56s/it]

  2%|▏         | 61/3107 [18:57<13:23:31, 15.83s/it]

  2%|▏         | 62/3107 [19:13<13:18:22, 15.73s/it]

  2%|▏         | 63/3107 [19:31<13:57:41, 16.51s/it]

  2%|▏         | 64/3107 [19:59<16:45:28, 19.83s/it]

  2%|▏         | 65/3107 [20:11<14:47:19, 17.50s/it]

  2%|▏         | 66/3107 [20:23<13:29:31, 15.97s/it]
{'loss': 0.9767, 'grad_norm': 0.1672532677112917, 'learning_rate': 0.00014042553191489363, 'epoch': 0.02}


  2%|▏         | 68/3107 [21:07<15:51:53, 18.79s/it]

  2%|▏         | 69/3107 [21:21<14:47:10, 17.52s/it]

  2%|▏         | 70/3107 [21:35<13:49:37, 16.39s/it]

  2%|▏         | 71/3107 [21:51<13:46:27, 16.33s/it]

  2%|▏         | 72/3107 [22:17<16:07:10, 19.12s/it]

  2%|▏         | 73/3107 [22:42<17:31:35, 20.80s/it]

  2%|▏         | 74/3107 [23:17<21:08:44, 25.10s/it]

  2%|▏         | 75/3107 [23:38<20:02:26, 23.80s/it]
{'loss': 1.0241, 'grad_norm': 0.16273347482989475, 'learning_rate': 0.00015957446808510637, 'epoch': 0.02}


  2%|▏         | 77/3107 [24:09<16:33:31, 19.67s/it]

  3%|▎         | 78/3107 [24:23<14:59:06, 17.81s/it]

  3%|▎         | 79/3107 [24:35<13:35:15, 16.15s/it]
{'loss': 1.0127, 'grad_norm': 0.16783154211810908, 'learning_rate': 0.00016808510638297873, 'epoch': 0.03}


  3%|▎         | 81/3107 [25:14<15:01:38, 17.88s/it]
{'loss': 0.955, 'grad_norm': 0.16007884210419263, 'learning_rate': 0.0001723404255319149, 'epoch': 0.03}


  3%|▎         | 83/3107 [25:42<13:32:04, 16.11s/it]

  3%|▎         | 84/3107 [25:56<13:01:17, 15.51s/it]

  3%|▎         | 85/3107 [26:11<12:58:56, 15.47s/it]

  3%|▎         | 86/3107 [26:36<15:09:16, 18.06s/it]

  3%|▎         | 87/3107 [26:50<14:13:21, 16.95s/it]

  3%|▎         | 88/3107 [27:09<14:48:18, 17.65s/it]

  3%|▎         | 89/3107 [27:23<13:55:09, 16.60s/it]
{'loss': 1.0661, 'grad_norm': 0.16862847970070005, 'learning_rate': 0.00018936170212765957, 'epoch': 0.03}


  3%|▎         | 91/3107 [27:58<13:46:16, 16.44s/it]

  3%|▎         | 92/3107 [28:24<16:17:39, 19.46s/it]
{'loss': 0.8562, 'grad_norm': 0.14673213615996009, 'learning_rate': 0.00019574468085106384, 'epoch': 0.03}

  3%|▎         | 93/3107 [28:37<14:37:26, 17.47s/it]

  3%|▎         | 94/3107 [29:01<16:12:08, 19.36s/it]


  3%|▎         | 96/3107 [29:32<14:21:48, 17.17s/it]

  3%|▎         | 97/3107 [29:45<13:29:36, 16.14s/it]
{'loss': 1.0076, 'grad_norm': 0.13836221182128275, 'learning_rate': 0.0001999995107693678, 'epoch': 0.03}


  3%|▎         | 99/3107 [30:36<17:47:54, 21.30s/it]

  3%|▎         | 100/3107 [30:57<17:42:02, 21.19s/it]

  3%|▎         | 101/3107 [31:10<15:36:48, 18.70s/it]

  3%|▎         | 102/3107 [31:26<14:54:59, 17.87s/it]

  3%|▎         | 103/3107 [31:42<14:23:55, 17.26s/it]

  3%|▎         | 104/3107 [31:58<14:04:35, 16.88s/it]

  3%|▎         | 105/3107 [32:16<14:18:34, 17.16s/it]
{'loss': 0.9638, 'grad_norm': 0.15110513286338775, 'learning_rate': 0.00019999342263268594, 'epoch': 0.03}


  3%|▎         | 107/3107 [32:50<14:09:42, 16.99s/it]

  3%|▎         | 108/3107 [33:10<14:54:06, 17.89s/it]

  4%|▎         | 109/3107 [33:38<17:33:27, 21.08s/it]

  4%|▎         | 110/3107 [33:54<16:13:31, 19.49s/it]

  4%|▎         | 111/3107 [34:10<15:28:44, 18.60s/it]
{'loss': 0.8819, 'grad_norm': 0.1485466160444515, 'learning_rate': 0.00019998429065932381, 'epoch': 0.04}


  4%|▎         | 113/3107 [34:48<15:35:06, 18.74s/it]

  4%|▎         | 114/3107 [35:02<14:19:37, 17.23s/it]

  4%|▎         | 115/3107 [35:20<14:28:24, 17.41s/it]

  4%|▎         | 116/3107 [35:37<14:21:40, 17.29s/it]

  4%|▍         | 117/3107 [35:59<15:30:21, 18.67s/it]
{'loss': 0.9031, 'grad_norm': 0.16287153201344298, 'learning_rate': 0.0001999712454653157, 'epoch': 0.04}


  4%|▍         | 119/3107 [36:32<14:37:44, 17.63s/it]
{'loss': 0.8874, 'grad_norm': 0.15777330245523313, 'learning_rate': 0.0001999660275465596, 'epoch': 0.04}

  4%|▍         | 120/3107 [36:43<12:54:36, 15.56s/it]


  4%|▍         | 122/3107 [37:13<12:18:57, 14.85s/it]

  4%|▍         | 123/3107 [37:30<12:59:58, 15.68s/it]

  4%|▍         | 124/3107 [37:54<15:01:05, 18.12s/it]
[2024-05-28 13:58:56,393] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

  4%|▍         | 125/3107 [38:07<13:38:09, 16.46s/it]

  4%|▍         | 126/3107 [38:24<13:49:58, 16.71s/it]

  4%|▍         | 127/3107 [38:46<15:10:45, 18.34s/it]

  4%|▍         | 128/3107 [39:09<16:14:07, 19.62s/it]

  4%|▍         | 129/3107 [39:25<15:24:18, 18.62s/it]

  4%|▍         | 130/3107 [39:38<14:05:38, 17.04s/it]

  4%|▍         | 131/3107 [39:56<14:18:29, 17.31s/it]
{'loss': 0.8981, 'grad_norm': 0.1466255383426734, 'learning_rate': 0.00019992559175374393, 'epoch': 0.04}


  4%|▍         | 133/3107 [40:28<13:50:07, 16.75s/it]

  4%|▍         | 134/3107 [40:46<14:11:15, 17.18s/it]

  4%|▍         | 135/3107 [41:03<14:04:58, 17.06s/it]

  4%|▍         | 136/3107 [41:29<16:19:12, 19.78s/it]
{'loss': 0.9571, 'grad_norm': 0.1470940501807142, 'learning_rate': 0.0001999041260415129, 'epoch': 0.04}


  4%|▍         | 138/3107 [42:06<15:48:57, 19.18s/it]

  4%|▍         | 139/3107 [42:21<14:38:52, 17.77s/it]
{'loss': 0.9175, 'grad_norm': 0.15738071939576334, 'learning_rate': 0.00019988994321142088, 'epoch': 0.04}

  5%|▍         | 140/3107 [42:36<13:59:35, 16.98s/it]

  5%|▍         | 141/3107 [43:02<16:10:20, 19.63s/it]


  5%|▍         | 143/3107 [43:30<14:06:19, 17.13s/it]

  5%|▍         | 144/3107 [43:46<13:48:03, 16.77s/it]

  5%|▍         | 145/3107 [44:04<14:07:15, 17.16s/it]

  5%|▍         | 146/3107 [44:23<14:34:18, 17.72s/it]

  5%|▍         | 147/3107 [44:39<14:11:55, 17.27s/it]
{'loss': 0.9235, 'grad_norm': 0.1452132485132703, 'learning_rate': 0.00019984734441465406, 'epoch': 0.05}


  5%|▍         | 149/3107 [45:20<15:16:11, 18.58s/it]
{'loss': 0.9366, 'grad_norm': 0.15983801464575126, 'learning_rate': 0.00019983560907492476, 'epoch': 0.05}

  5%|▍         | 150/3107 [45:40<15:25:33, 18.78s/it]


  5%|▍         | 152/3107 [46:13<14:38:57, 17.85s/it]
{'loss': 0.7865, 'grad_norm': 0.151691503294192, 'learning_rate': 0.0001998171920374572, 'epoch': 0.05}


  5%|▍         | 154/3107 [46:45<13:52:08, 16.91s/it]

  5%|▍         | 155/3107 [47:04<14:33:58, 17.76s/it]

  5%|▌         | 156/3107 [47:23<14:50:51, 18.11s/it]

  5%|▌         | 157/3107 [47:37<13:44:24, 16.77s/it]

  5%|▌         | 158/3107 [47:53<13:32:39, 16.53s/it]

  5%|▌         | 159/3107 [48:07<12:50:33, 15.68s/it]

  5%|▌         | 160/3107 [48:25<13:21:45, 16.32s/it]

  5%|▌         | 161/3107 [48:39<12:56:46, 15.82s/it]

  5%|▌         | 162/3107 [48:54<12:35:29, 15.39s/it]

  5%|▌         | 163/3107 [49:11<13:07:11, 16.04s/it]

  5%|▌         | 164/3107 [49:28<13:11:34, 16.14s/it]
{'loss': 0.9598, 'grad_norm': 0.1509671013677431, 'learning_rate': 0.00019973375910736408, 'epoch': 0.05}


  5%|▌         | 166/3107 [50:01<13:38:58, 16.71s/it]

  5%|▌         | 167/3107 [50:30<16:30:49, 20.22s/it]

  5%|▌         | 168/3107 [50:49<16:23:00, 20.07s/it]

  5%|▌         | 169/3107 [51:10<16:25:56, 20.13s/it]
{'loss': 0.8448, 'grad_norm': 0.14248205541165657, 'learning_rate': 0.00019969438639866436, 'epoch': 0.05}

  5%|▌         | 170/3107 [51:32<17:01:50, 20.88s/it]

  6%|▌         | 171/3107 [51:52<16:43:48, 20.51s/it]


  6%|▌         | 173/3107 [52:29<16:21:07, 20.06s/it]

  6%|▌         | 174/3107 [52:51<16:46:41, 20.59s/it]
{'loss': 0.9357, 'grad_norm': 0.14218707807211645, 'learning_rate': 0.00019965230405235443, 'epoch': 0.06}


  6%|▌         | 176/3107 [53:38<17:57:06, 22.05s/it]

  6%|▌         | 177/3107 [53:51<15:47:36, 19.41s/it]

  6%|▌         | 178/3107 [54:05<14:29:19, 17.81s/it]
{'loss': 0.9422, 'grad_norm': 0.17725820965427783, 'learning_rate': 0.00019961668800236993, 'epoch': 0.06}


  6%|▌         | 180/3107 [54:40<14:35:53, 17.95s/it]

  6%|▌         | 181/3107 [54:58<14:36:24, 17.97s/it]

  6%|▌         | 182/3107 [55:09<12:59:51, 16.00s/it]

  6%|▌         | 183/3107 [55:27<13:32:35, 16.67s/it]

  6%|▌         | 184/3107 [55:48<14:27:11, 17.80s/it]

  6%|▌         | 185/3107 [56:09<15:14:00, 18.77s/it]

  6%|▌         | 186/3107 [56:23<14:05:13, 17.36s/it]

  6%|▌         | 187/3107 [56:36<12:59:33, 16.02s/it]

  6%|▌         | 188/3107 [56:53<13:17:28, 16.39s/it]
{'loss': 0.8344, 'grad_norm': 0.1373170096543998, 'learning_rate': 0.00019952006822836573, 'epoch': 0.06}


  6%|▌         | 190/3107 [57:24<12:49:20, 15.82s/it]

  6%|▌         | 191/3107 [57:49<15:06:44, 18.66s/it]
{'loss': 0.96, 'grad_norm': 0.1394296390346005, 'learning_rate': 0.00019948897197997667, 'epoch': 0.06}

  6%|▌         | 192/3107 [58:02<13:38:59, 16.86s/it]


  6%|▌         | 194/3107 [58:35<13:41:26, 16.92s/it]

  6%|▋         | 195/3107 [59:00<15:31:41, 19.20s/it]

  6%|▋         | 196/3107 [59:22<16:08:55, 19.97s/it]
{'loss': 0.7931, 'grad_norm': 0.1375247200876934, 'learning_rate': 0.00019943498180710937, 'epoch': 0.06}

  6%|▋         | 197/3107 [59:37<14:59:43, 18.55s/it]

  6%|▋         | 198/3107 [59:57<15:20:04, 18.98s/it]

  6%|▋         | 199/3107 [1:00:15<15:03:25, 18.64s/it]


  6%|▋         | 201/3107 [1:00:49<14:27:50, 17.92s/it]

  7%|▋         | 202/3107 [1:01:04<13:33:48, 16.81s/it]

  7%|▋         | 203/3107 [1:01:27<15:14:32, 18.90s/it]

  7%|▋         | 204/3107 [1:01:40<13:50:16, 17.16s/it]

  7%|▋         | 205/3107 [1:02:04<15:21:38, 19.06s/it]

  7%|▋         | 206/3107 [1:02:22<15:11:54, 18.86s/it]

  7%|▋         | 207/3107 [1:02:42<15:19:18, 19.02s/it]

  7%|▋         | 208/3107 [1:02:54<13:36:05, 16.89s/it]
{'loss': 1.0157, 'grad_norm': 0.14634820175359847, 'learning_rate': 0.00019929438178451175, 'epoch': 0.07}


  7%|▋         | 210/3107 [1:03:29<13:55:07, 17.30s/it]
{'loss': 0.9712, 'grad_norm': 0.1451993875563056, 'learning_rate': 0.00019926943652485223, 'epoch': 0.07}

  7%|▋         | 211/3107 [1:03:49<14:23:38, 17.89s/it]


  7%|▋         | 213/3107 [1:04:18<13:01:03, 16.19s/it]
{'loss': 0.8434, 'grad_norm': 0.14514810841337256, 'learning_rate': 0.00019923120924192307, 'epoch': 0.07}

  7%|▋         | 214/3107 [1:04:37<13:40:43, 17.02s/it]

  7%|▋         | 215/3107 [1:04:57<14:24:16, 17.93s/it]


  7%|▋         | 217/3107 [1:05:33<13:57:42, 17.39s/it]

  7%|▋         | 218/3107 [1:05:59<16:03:17, 20.01s/it]

  7%|▋         | 219/3107 [1:06:18<15:53:21, 19.81s/it]
{'loss': 0.9782, 'grad_norm': 0.1412541685716247, 'learning_rate': 0.00019915184224277032, 'epoch': 0.07}


  7%|▋         | 221/3107 [1:06:46<13:25:26, 16.75s/it]

  7%|▋         | 222/3107 [1:06:58<12:23:47, 15.47s/it]

  7%|▋         | 223/3107 [1:07:12<11:57:42, 14.93s/it]
{'loss': 0.871, 'grad_norm': 0.1476237490648926, 'learning_rate': 0.00019909677480090115, 'epoch': 0.07}


  7%|▋         | 225/3107 [1:07:47<12:56:31, 16.17s/it]

  7%|▋         | 226/3107 [1:08:07<13:51:04, 17.31s/it]
[2024-05-28 14:29:08,946] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.8895, 'grad_norm': 0.13903258298719381, 'learning_rate': 0.00019905434293922286, 'epoch': 0.07}

  7%|▋         | 227/3107 [1:08:29<15:05:29, 18.86s/it]


  7%|▋         | 229/3107 [1:09:14<16:38:37, 20.82s/it]

  7%|▋         | 230/3107 [1:09:28<15:05:24, 18.88s/it]

  7%|▋         | 231/3107 [1:09:52<16:21:30, 20.48s/it]

  7%|▋         | 232/3107 [1:10:11<15:49:33, 19.82s/it]

  7%|▋         | 233/3107 [1:10:24<14:18:13, 17.92s/it]
{'loss': 0.9515, 'grad_norm': 0.1519558119542418, 'learning_rate': 0.00019895156685363795, 'epoch': 0.07}


  8%|▊         | 235/3107 [1:10:58<14:00:39, 17.56s/it]

  8%|▊         | 236/3107 [1:11:13<13:24:36, 16.82s/it]

  8%|▊         | 237/3107 [1:11:26<12:29:59, 15.68s/it]
{'loss': 1.007, 'grad_norm': 0.14689575372391847, 'learning_rate': 0.00019889047058986204, 'epoch': 0.08}


  8%|▊         | 239/3107 [1:12:06<13:59:10, 17.56s/it]

  8%|▊         | 240/3107 [1:12:27<14:46:19, 18.55s/it]
{'loss': 0.7177, 'grad_norm': 0.1545644032714464, 'learning_rate': 0.00019884351946106073, 'epoch': 0.08}

  8%|▊         | 241/3107 [1:12:49<15:42:03, 19.72s/it]


  8%|▊         | 243/3107 [1:13:27<15:35:03, 19.59s/it]

  8%|▊         | 244/3107 [1:13:53<17:08:06, 21.55s/it]
{'loss': 0.9736, 'grad_norm': 0.14455340869115163, 'learning_rate': 0.00019877941358812382, 'epoch': 0.08}


  8%|▊         | 246/3107 [1:14:40<18:06:11, 22.78s/it]

  8%|▊         | 247/3107 [1:15:01<17:33:06, 22.09s/it]

  8%|▊         | 248/3107 [1:15:21<17:02:07, 21.45s/it]
{'loss': 0.9434, 'grad_norm': 0.1560866082197648, 'learning_rate': 0.00019871358946152255, 'epoch': 0.08}

  8%|▊         | 249/3107 [1:15:38<15:59:25, 20.14s/it]


  8%|▊         | 251/3107 [1:16:12<14:25:32, 18.18s/it]
{'loss': 0.8329, 'grad_norm': 0.1492224864539943, 'learning_rate': 0.00019866309445027095, 'epoch': 0.08}

  8%|▊         | 252/3107 [1:16:34<15:16:14, 19.26s/it]


  8%|▊         | 254/3107 [1:17:12<15:18:03, 19.31s/it]

  8%|▊         | 255/3107 [1:17:32<15:22:50, 19.41s/it]

  8%|▊         | 256/3107 [1:17:57<16:48:19, 21.22s/it]

  8%|▊         | 257/3107 [1:18:17<16:24:12, 20.72s/it]
{'loss': 0.8507, 'grad_norm': 0.15707518715624424, 'learning_rate': 0.0001985592087908033, 'epoch': 0.08}

  8%|▊         | 258/3107 [1:18:34<15:26:12, 19.51s/it]


  8%|▊         | 260/3107 [1:19:09<14:27:56, 18.29s/it]
{'loss': 0.9434, 'grad_norm': 0.15556148925911506, 'learning_rate': 0.00019850581915906824, 'epoch': 0.08}


  8%|▊         | 262/3107 [1:19:37<12:38:21, 15.99s/it]

  8%|▊         | 263/3107 [1:20:02<14:49:31, 18.77s/it]

  8%|▊         | 264/3107 [1:20:15<13:26:50, 17.03s/it]

  9%|▊         | 265/3107 [1:20:31<13:10:46, 16.69s/it]

  9%|▊         | 266/3107 [1:20:54<14:42:03, 18.63s/it]
{'loss': 0.9344, 'grad_norm': 0.15485794133152525, 'learning_rate': 0.00019839614890357487, 'epoch': 0.09}

  9%|▊         | 267/3107 [1:21:16<15:27:20, 19.59s/it]


  9%|▊         | 269/3107 [1:21:49<14:01:31, 17.79s/it]

  9%|▊         | 270/3107 [1:22:07<14:03:57, 17.85s/it]
{'loss': 0.849, 'grad_norm': 0.131104663134319, 'learning_rate': 0.00019832089564908914, 'epoch': 0.09}


  9%|▉         | 272/3107 [1:22:42<13:51:34, 17.60s/it]

  9%|▉         | 273/3107 [1:23:07<15:36:33, 19.83s/it]
{'loss': 0.9465, 'grad_norm': 0.1446397689718857, 'learning_rate': 0.00019826333326570565, 'epoch': 0.09}
[2024-05-28 14:44:42,726] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


  9%|▉         | 275/3107 [1:24:00<17:46:51, 22.60s/it]

  9%|▉         | 276/3107 [1:24:21<17:27:11, 22.19s/it]

  9%|▉         | 277/3107 [1:24:41<16:52:00, 21.46s/it]
{'loss': 0.9308, 'grad_norm': 0.1528726900855336, 'learning_rate': 0.00019818508790199225, 'epoch': 0.09}


  9%|▉         | 279/3107 [1:25:16<15:34:18, 19.82s/it]

  9%|▉         | 280/3107 [1:25:34<15:08:22, 19.28s/it]

  9%|▉         | 281/3107 [1:25:54<15:17:17, 19.48s/it]

  9%|▉         | 282/3107 [1:26:16<15:56:13, 20.31s/it]
{'loss': 0.9367, 'grad_norm': 0.1402232786631725, 'learning_rate': 0.00019808487960357144, 'epoch': 0.09}


  9%|▉         | 284/3107 [1:26:48<14:08:22, 18.03s/it]

  9%|▉         | 285/3107 [1:27:08<14:38:47, 18.68s/it]

  9%|▉         | 286/3107 [1:27:21<13:20:51, 17.03s/it]

  9%|▉         | 287/3107 [1:27:40<13:45:00, 17.55s/it]
{'loss': 1.0742, 'grad_norm': 0.14195345864068898, 'learning_rate': 0.000197982005413034, 'epoch': 0.09}


  9%|▉         | 289/3107 [1:28:23<15:12:12, 19.42s/it]
{'loss': 0.8461, 'grad_norm': 0.13904418485212414, 'learning_rate': 0.00019794010991091164, 'epoch': 0.09}


  9%|▉         | 291/3107 [1:29:13<17:34:50, 22.48s/it]
{'loss': 0.7457, 'grad_norm': 0.1365713595816868, 'learning_rate': 0.00019789778849480175, 'epoch': 0.09}


  9%|▉         | 293/3107 [1:30:04<18:14:47, 23.34s/it]
{'loss': 0.918, 'grad_norm': 0.14675987969030105, 'learning_rate': 0.0001978550413487483, 'epoch': 0.09}


  9%|▉         | 295/3107 [1:30:31<14:43:10, 18.84s/it]

 10%|▉         | 296/3107 [1:30:45<13:39:12, 17.49s/it]
{'loss': 0.8953, 'grad_norm': 0.14979965685304175, 'learning_rate': 0.00019779012279317595, 'epoch': 0.1}

 10%|▉         | 297/3107 [1:31:01<13:09:07, 16.85s/it]

 10%|▉         | 298/3107 [1:31:23<14:19:54, 18.37s/it]


 10%|▉         | 300/3107 [1:31:53<13:05:32, 16.79s/it]
 10%|▉         | 300/3107 [1:31:53<13:05:32, 16.79s/it]/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/nn/modules/module.py:1879: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
 10%|▉         | 301/3107 [1:32:53<23:07:48, 29.68s/it]

 10%|▉         | 302/3107 [1:33:16<21:34:23, 27.69s/it]
{'loss': 0.8232, 'grad_norm': 0.1492897599717308, 'learning_rate': 0.00019765741581118063, 'epoch': 0.1}

 10%|▉         | 303/3107 [1:33:37<19:53:10, 25.53s/it]

 10%|▉         | 304/3107 [1:33:59<19:01:13, 24.43s/it]

 10%|▉         | 305/3107 [1:34:17<17:38:07, 22.66s/it]

 10%|▉         | 306/3107 [1:34:31<15:33:12, 19.99s/it]

 10%|▉         | 307/3107 [1:34:53<16:03:48, 20.65s/it]


 10%|▉         | 309/3107 [1:35:30<15:17:21, 19.67s/it]
{'loss': 0.8673, 'grad_norm': 0.15368661154826077, 'learning_rate': 0.0001974977605982021, 'epoch': 0.1}

 10%|▉         | 310/3107 [1:35:55<16:21:41, 21.06s/it]


 10%|█         | 312/3107 [1:36:25<13:42:29, 17.66s/it]

 10%|█         | 313/3107 [1:36:42<13:36:45, 17.54s/it]
{'loss': 0.8279, 'grad_norm': 0.13736164720818667, 'learning_rate': 0.00019740419655366482, 'epoch': 0.1}


 10%|█         | 315/3107 [1:37:16<13:33:56, 17.49s/it]
{'loss': 0.8896, 'grad_norm': 0.13909427877533864, 'learning_rate': 0.0001973567790540379, 'epoch': 0.1}


 10%|█         | 317/3107 [1:37:51<13:35:25, 17.54s/it]

 10%|█         | 318/3107 [1:38:06<13:10:01, 17.00s/it]
{'loss': 0.8901, 'grad_norm': 0.14424860503101145, 'learning_rate': 0.00019728485903720445, 'epoch': 0.1}


 10%|█         | 320/3107 [1:38:42<13:34:35, 17.54s/it]
{'loss': 0.9032, 'grad_norm': 0.1517644918359758, 'learning_rate': 0.00019723638348512562, 'epoch': 0.1}


 10%|█         | 322/3107 [1:39:21<14:14:59, 18.42s/it]

 10%|█         | 323/3107 [1:39:38<13:55:16, 18.00s/it]

 10%|█         | 324/3107 [1:39:53<13:12:26, 17.08s/it]

 10%|█         | 325/3107 [1:40:12<13:41:55, 17.73s/it]
{'loss': 0.9516, 'grad_norm': 0.14021969812817245, 'learning_rate': 0.00019711334508574623, 'epoch': 0.1}


 11%|█         | 327/3107 [1:40:55<14:45:08, 19.10s/it]
{'loss': 0.9277, 'grad_norm': 0.14825381050295208, 'learning_rate': 0.000197063390480134, 'epoch': 0.11}


 11%|█         | 329/3107 [1:41:23<12:41:01, 16.44s/it]
{'loss': 0.9049, 'grad_norm': 0.14143719563531537, 'learning_rate': 0.00019701301377314038, 'epoch': 0.11}


 11%|█         | 331/3107 [1:42:03<14:09:50, 18.37s/it]

 11%|█         | 332/3107 [1:42:20<14:00:03, 18.16s/it]

 11%|█         | 333/3107 [1:42:38<13:55:04, 18.06s/it]
{'loss': 0.9155, 'grad_norm': 0.1524589362120587, 'learning_rate': 0.0001969109949331404, 'epoch': 0.11}


 11%|█         | 335/3107 [1:43:11<13:23:04, 17.38s/it]

 11%|█         | 336/3107 [1:43:30<13:52:35, 18.03s/it]

 11%|█         | 337/3107 [1:43:49<14:00:33, 18.21s/it]
{'loss': 0.7617, 'grad_norm': 0.1421339909641085, 'learning_rate': 0.00019680729034034927, 'epoch': 0.11}


 11%|█         | 339/3107 [1:44:20<13:15:25, 17.24s/it]

 11%|█         | 340/3107 [1:44:39<13:33:43, 17.64s/it]

 11%|█         | 341/3107 [1:44:52<12:29:55, 16.27s/it]

 11%|█         | 342/3107 [1:45:14<13:49:50, 18.01s/it]

 11%|█         | 343/3107 [1:45:39<15:26:54, 20.12s/it]
{'loss': 0.9952, 'grad_norm': 0.14335576969449884, 'learning_rate': 0.00019664857661877874, 'epoch': 0.11}

 11%|█         | 344/3107 [1:45:54<14:12:06, 18.50s/it]


 11%|█         | 346/3107 [1:46:25<12:46:57, 16.67s/it]

 11%|█         | 347/3107 [1:46:39<12:06:02, 15.78s/it]

 11%|█         | 348/3107 [1:46:59<13:01:27, 16.99s/it]

 11%|█         | 349/3107 [1:47:25<15:10:01, 19.80s/it]
[2024-05-28 15:08:27,269] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.8845, 'grad_norm': 0.13755003606388735, 'learning_rate': 0.00019648608023092195, 'epoch': 0.11}


 11%|█▏        | 351/3107 [1:47:59<14:06:12, 18.42s/it]

 11%|█▏        | 352/3107 [1:48:17<13:58:40, 18.26s/it]

 11%|█▏        | 353/3107 [1:48:35<13:52:36, 18.14s/it]
{'loss': 0.9152, 'grad_norm': 0.13533275174074966, 'learning_rate': 0.00019637565095899132, 'epoch': 0.11}


 11%|█▏        | 355/3107 [1:49:09<13:17:52, 17.40s/it]

 11%|█▏        | 356/3107 [1:49:25<12:58:20, 16.98s/it]

 11%|█▏        | 357/3107 [1:49:51<14:57:49, 19.59s/it]

 12%|█▏        | 358/3107 [1:50:07<14:16:12, 18.69s/it]

 12%|█▏        | 359/3107 [1:50:21<13:04:29, 17.13s/it]

 12%|█▏        | 360/3107 [1:50:35<12:25:29, 16.28s/it]
{'loss': 0.8345, 'grad_norm': 0.147703452203888, 'learning_rate': 0.00019617836697000474, 'epoch': 0.12}

 12%|█▏        | 361/3107 [1:51:00<14:23:32, 18.87s/it]

 12%|█▏        | 362/3107 [1:51:32<17:27:35, 22.90s/it]


 12%|█▏        | 364/3107 [1:52:15<16:46:47, 22.02s/it]
{'loss': 0.7837, 'grad_norm': 0.14938099374803598, 'learning_rate': 0.00019606333219639624, 'epoch': 0.12}


 12%|█▏        | 366/3107 [1:52:52<15:50:14, 20.80s/it]

 12%|█▏        | 367/3107 [1:53:03<13:26:16, 17.66s/it]
{'loss': 0.9163, 'grad_norm': 0.15360492773823076, 'learning_rate': 0.00019597595940678444, 'epoch': 0.12}


 12%|█▏        | 369/3107 [1:53:35<12:52:14, 16.92s/it]

 12%|█▏        | 370/3107 [1:53:54<13:16:19, 17.46s/it]
{'loss': 0.8807, 'grad_norm': 0.12620954506915874, 'learning_rate': 0.00019588764752958668, 'epoch': 0.12}

 12%|█▏        | 371/3107 [1:54:20<15:17:06, 20.11s/it]


 12%|█▏        | 373/3107 [1:55:00<14:59:18, 19.74s/it]

 12%|█▏        | 374/3107 [1:55:20<15:05:53, 19.89s/it]
{'loss': 0.8651, 'grad_norm': 0.13819790451024408, 'learning_rate': 0.00019576843905190253, 'epoch': 0.12}


 12%|█▏        | 376/3107 [1:55:45<12:20:45, 16.27s/it]
{'loss': 0.902, 'grad_norm': 0.14007962108418043, 'learning_rate': 0.00019570820997800358, 'epoch': 0.12}


 12%|█▏        | 378/3107 [1:56:27<13:50:29, 18.26s/it]
{'loss': 0.8707, 'grad_norm': 0.14128663930468954, 'learning_rate': 0.0001956475646960221, 'epoch': 0.12}


 12%|█▏        | 380/3107 [1:57:09<14:26:37, 19.07s/it]

 12%|█▏        | 381/3107 [1:57:29<14:41:00, 19.39s/it]

 12%|█▏        | 382/3107 [1:57:52<15:20:57, 20.28s/it]

 12%|█▏        | 383/3107 [1:58:08<14:23:15, 19.01s/it]

 12%|█▏        | 384/3107 [1:58:32<15:29:42, 20.49s/it]
[2024-05-28 15:19:33,871] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.848, 'grad_norm': 0.14664878914708, 'learning_rate': 0.0001954631342479182, 'epoch': 0.12}


 12%|█▏        | 386/3107 [1:59:03<13:23:23, 17.72s/it]

 12%|█▏        | 387/3107 [1:59:22<13:36:39, 18.01s/it]

 12%|█▏        | 388/3107 [1:59:35<12:38:39, 16.74s/it]
{'loss': 0.9402, 'grad_norm': 0.15743170072713708, 'learning_rate': 0.00019533810445868585, 'epoch': 0.12}

 13%|█▎        | 389/3107 [1:59:48<11:50:27, 15.68s/it]

 13%|█▎        | 390/3107 [2:00:02<11:26:01, 15.15s/it]


 13%|█▎        | 392/3107 [2:00:43<13:45:23, 18.24s/it]
{'loss': 0.7787, 'grad_norm': 0.14352668226155682, 'learning_rate': 0.0001952114162768655, 'epoch': 0.13}


 13%|█▎        | 394/3107 [2:01:20<13:52:55, 18.42s/it]

 13%|█▎        | 395/3107 [2:01:36<13:21:54, 17.74s/it]

 13%|█▎        | 396/3107 [2:01:48<12:11:00, 16.18s/it]

 13%|█▎        | 397/3107 [2:02:10<13:21:58, 17.76s/it]
{'loss': 0.8279, 'grad_norm': 0.14136581083210853, 'learning_rate': 0.0001950507272949906, 'epoch': 0.13}


 13%|█▎        | 399/3107 [2:02:50<14:17:26, 19.00s/it]

 13%|█▎        | 400/3107 [2:03:03<13:05:17, 17.41s/it]
{'loss': 0.8793, 'grad_norm': 0.15568326997278445, 'learning_rate': 0.0001949530735791607, 'epoch': 0.13}


 13%|█▎        | 402/3107 [2:03:40<13:21:40, 17.78s/it]

 13%|█▎        | 403/3107 [2:03:52<11:59:15, 15.96s/it]

 13%|█▎        | 404/3107 [2:04:16<13:56:37, 18.57s/it]
{'loss': 0.835, 'grad_norm': 0.143580812856165, 'learning_rate': 0.00019482142355711023, 'epoch': 0.13}

 13%|█▎        | 405/3107 [2:04:33<13:31:14, 18.01s/it]


 13%|█▎        | 407/3107 [2:05:06<12:56:42, 17.26s/it]
{'loss': 0.9209, 'grad_norm': 0.15598615180233594, 'learning_rate': 0.00019472160349222702, 'epoch': 0.13}


 13%|█▎        | 409/3107 [2:05:46<13:44:17, 18.33s/it]

 13%|█▎        | 410/3107 [2:05:56<11:54:32, 15.90s/it]

 13%|█▎        | 411/3107 [2:06:14<12:20:37, 16.48s/it]

 13%|█▎        | 412/3107 [2:06:34<13:09:44, 17.58s/it]
{'loss': 0.8989, 'grad_norm': 0.13989093313115217, 'learning_rate': 0.0001945531776167391, 'epoch': 0.13}


 13%|█▎        | 414/3107 [2:07:04<12:11:06, 16.29s/it]
{'loss': 0.8624, 'grad_norm': 0.14804421668090065, 'learning_rate': 0.00019448508743516186, 'epoch': 0.13}

 13%|█▎        | 415/3107 [2:07:17<11:25:05, 15.27s/it]


 13%|█▎        | 417/3107 [2:07:56<12:59:43, 17.39s/it]

 13%|█▎        | 418/3107 [2:08:16<13:27:16, 18.01s/it]

 13%|█▎        | 419/3107 [2:08:36<13:49:49, 18.52s/it]
{'loss': 0.7985, 'grad_norm': 0.14036618292213518, 'learning_rate': 0.00019431306499367886, 'epoch': 0.13}

 14%|█▎        | 420/3107 [2:08:59<14:54:47, 19.98s/it]


 14%|█▎        | 422/3107 [2:09:30<13:14:47, 17.76s/it]

 14%|█▎        | 423/3107 [2:09:50<13:36:19, 18.25s/it]
{'loss': 0.8345, 'grad_norm': 0.15498982158996613, 'learning_rate': 0.00019417360118278664, 'epoch': 0.14}

 14%|█▎        | 424/3107 [2:10:01<12:02:48, 16.16s/it]


 14%|█▎        | 426/3107 [2:10:41<13:17:07, 17.84s/it]

 14%|█▎        | 427/3107 [2:10:56<12:42:21, 17.07s/it]

 14%|█▍        | 428/3107 [2:11:22<14:35:59, 19.62s/it]

 14%|█▍        | 429/3107 [2:11:45<15:24:50, 20.72s/it]

 14%|█▍        | 430/3107 [2:12:00<14:13:02, 19.12s/it]

 14%|█▍        | 431/3107 [2:12:24<15:10:49, 20.42s/it]
{'loss': 0.9061, 'grad_norm': 0.14508393095504027, 'learning_rate': 0.0001938897616067863, 'epoch': 0.14}


 14%|█▍        | 433/3107 [2:12:56<13:43:48, 18.48s/it]

 14%|█▍        | 434/3107 [2:13:17<14:14:41, 19.19s/it]

 14%|█▍        | 435/3107 [2:13:38<14:41:44, 19.80s/it]

 14%|█▍        | 436/3107 [2:13:52<13:27:23, 18.14s/it]

 14%|█▍        | 437/3107 [2:14:18<15:03:33, 20.30s/it]

 14%|█▍        | 438/3107 [2:14:35<14:20:15, 19.34s/it]
{'loss': 0.8632, 'grad_norm': 0.1455518702253556, 'learning_rate': 0.00019363604238108956, 'epoch': 0.14}


 14%|█▍        | 440/3107 [2:15:10<13:31:26, 18.26s/it]

 14%|█▍        | 441/3107 [2:15:22<12:04:40, 16.31s/it]

 14%|█▍        | 442/3107 [2:15:35<11:12:56, 15.15s/it]

 14%|█▍        | 443/3107 [2:15:56<12:39:42, 17.11s/it]
{'loss': 0.8387, 'grad_norm': 0.13803353289153344, 'learning_rate': 0.00019345175960049356, 'epoch': 0.14}


 14%|█▍        | 445/3107 [2:16:31<12:35:53, 17.04s/it]

 14%|█▍        | 446/3107 [2:16:48<12:41:42, 17.17s/it]
{'loss': 0.8377, 'grad_norm': 0.1445565761054773, 'learning_rate': 0.0001933399704247814, 'epoch': 0.14}


 14%|█▍        | 448/3107 [2:17:22<12:33:13, 17.00s/it]

 14%|█▍        | 449/3107 [2:17:51<15:06:29, 20.46s/it]

 14%|█▍        | 450/3107 [2:18:09<14:35:21, 19.77s/it]

 15%|█▍        | 451/3107 [2:18:24<13:39:12, 18.51s/it]

 15%|█▍        | 452/3107 [2:18:38<12:38:01, 17.13s/it]

 15%|█▍        | 453/3107 [2:19:00<13:43:31, 18.62s/it]
{'loss': 0.8446, 'grad_norm': 0.1475803950682495, 'learning_rate': 0.00019307557921751333, 'epoch': 0.15}


 15%|█▍        | 455/3107 [2:19:41<14:02:01, 19.05s/it]
{'loss': 0.886, 'grad_norm': 0.1568936035479908, 'learning_rate': 0.00019299912754484156, 'epoch': 0.15}


 15%|█▍        | 457/3107 [2:20:14<13:12:24, 17.94s/it]
{'loss': 0.9925, 'grad_norm': 0.16047714821255077, 'learning_rate': 0.00019292227144512473, 'epoch': 0.15}


 15%|█▍        | 459/3107 [2:20:43<11:48:28, 16.05s/it]

 15%|█▍        | 460/3107 [2:20:59<11:42:15, 15.92s/it]

 15%|█▍        | 461/3107 [2:21:13<11:22:07, 15.47s/it]

 15%|█▍        | 462/3107 [2:21:28<11:18:30, 15.39s/it]

 15%|█▍        | 463/3107 [2:21:43<11:14:43, 15.31s/it]

 15%|█▍        | 464/3107 [2:22:09<13:30:04, 18.39s/it]

 15%|█▍        | 465/3107 [2:22:25<13:03:11, 17.79s/it]
{'loss': 0.9006, 'grad_norm': 0.14055536303603203, 'learning_rate': 0.00019261080948666809, 'epoch': 0.15}

 15%|█▍        | 466/3107 [2:22:38<11:49:30, 16.12s/it]


 15%|█▌        | 468/3107 [2:23:23<14:01:02, 19.12s/it]

 15%|█▌        | 469/3107 [2:23:39<13:19:02, 18.17s/it]
{'loss': 0.9616, 'grad_norm': 0.14752982841493487, 'learning_rate': 0.00019245266071843596, 'epoch': 0.15}


 15%|█▌        | 471/3107 [2:24:16<13:24:59, 18.32s/it]
{'loss': 0.8703, 'grad_norm': 0.13734843535031602, 'learning_rate': 0.00019237298308602438, 'epoch': 0.15}

 15%|█▌        | 472/3107 [2:24:36<13:51:46, 18.94s/it]


 15%|█▌        | 474/3107 [2:25:14<13:45:56, 18.82s/it]

 15%|█▌        | 475/3107 [2:25:36<14:36:46, 19.99s/it]

 15%|█▌        | 476/3107 [2:25:56<14:26:13, 19.75s/it]

 15%|█▌        | 477/3107 [2:26:11<13:24:08, 18.35s/it]

 15%|█▌        | 478/3107 [2:26:28<13:07:36, 17.98s/it]
{'loss': 0.8209, 'grad_norm': 0.13040659775214938, 'learning_rate': 0.0001920909502422833, 'epoch': 0.15}
[2024-05-28 15:48:00,359] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 15%|█▌        | 480/3107 [2:27:16<14:55:28, 20.45s/it]

 15%|█▌        | 481/3107 [2:27:29<13:24:29, 18.38s/it]

 16%|█▌        | 482/3107 [2:27:45<12:56:12, 17.74s/it]
{'loss': 1.015, 'grad_norm': 0.13042792220875013, 'learning_rate': 0.00019192758502481678, 'epoch': 0.16}


 16%|█▌        | 484/3107 [2:28:16<11:56:49, 16.40s/it]

 16%|█▌        | 485/3107 [2:28:43<14:17:45, 19.63s/it]

 16%|█▌        | 486/3107 [2:29:00<13:46:15, 18.91s/it]
{'loss': 0.9142, 'grad_norm': 0.1555767602996952, 'learning_rate': 0.00019176262074025629, 'epoch': 0.16}


 16%|█▌        | 488/3107 [2:29:39<13:52:26, 19.07s/it]

 16%|█▌        | 489/3107 [2:29:58<13:43:03, 18.86s/it]

 16%|█▌        | 490/3107 [2:30:16<13:31:06, 18.60s/it]

 16%|█▌        | 491/3107 [2:30:38<14:17:47, 19.67s/it]

 16%|█▌        | 492/3107 [2:30:56<13:55:51, 19.18s/it]

 16%|█▌        | 493/3107 [2:31:12<13:11:21, 18.16s/it]

 16%|█▌        | 494/3107 [2:31:33<13:56:54, 19.22s/it]

 16%|█▌        | 495/3107 [2:32:02<15:54:11, 21.92s/it]
[2024-05-28 15:53:03,993] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.8625, 'grad_norm': 0.1472817076810926, 'learning_rate': 0.0001913856194191403, 'epoch': 0.16}

 16%|█▌        | 496/3107 [2:32:29<17:01:54, 23.48s/it]


 16%|█▌        | 498/3107 [2:33:04<14:44:22, 20.34s/it]

 16%|█▌        | 499/3107 [2:33:18<13:28:24, 18.60s/it]

 16%|█▌        | 500/3107 [2:33:38<13:40:56, 18.89s/it]

 16%|█▌        | 501/3107 [2:33:51<12:26:45, 17.19s/it]
{'loss': 0.8522, 'grad_norm': 0.13900704102069053, 'learning_rate': 0.000191129812291268, 'epoch': 0.16}


 16%|█▌        | 503/3107 [2:34:28<12:52:25, 17.80s/it]

 16%|█▌        | 504/3107 [2:34:44<12:29:30, 17.28s/it]
{'loss': 0.8852, 'grad_norm': 0.15475614493553155, 'learning_rate': 0.00019100057059453381, 'epoch': 0.16}

 16%|█▋        | 505/3107 [2:34:58<11:51:38, 16.41s/it]


 16%|█▋        | 507/3107 [2:35:36<12:41:18, 17.57s/it]

 16%|█▋        | 508/3107 [2:35:54<12:50:36, 17.79s/it]
{'loss': 0.9056, 'grad_norm': 0.13617319572961661, 'learning_rate': 0.00019082686347708254, 'epoch': 0.16}


 16%|█▋        | 510/3107 [2:36:36<13:31:59, 18.76s/it]
{'loss': 0.8309, 'grad_norm': 0.13643542668544972, 'learning_rate': 0.00019073941725835666, 'epoch': 0.16}


 16%|█▋        | 512/3107 [2:37:07<12:16:43, 17.03s/it]

 17%|█▋        | 513/3107 [2:37:26<12:34:51, 17.46s/it]

 17%|█▋        | 514/3107 [2:37:43<12:36:13, 17.50s/it]

 17%|█▋        | 515/3107 [2:38:09<14:23:06, 19.98s/it]
{'loss': 0.9361, 'grad_norm': 0.1377509533969909, 'learning_rate': 0.00019051907617174672, 'epoch': 0.17}

 17%|█▋        | 516/3107 [2:38:37<15:57:39, 22.18s/it]


 17%|█▋        | 518/3107 [2:39:28<16:57:30, 23.58s/it]

 17%|█▋        | 519/3107 [2:39:45<15:37:19, 21.73s/it]

 17%|█▋        | 520/3107 [2:40:12<16:36:41, 23.12s/it]

 17%|█▋        | 521/3107 [2:40:36<16:54:37, 23.54s/it]
[2024-05-28 16:01:38,663] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.8296, 'grad_norm': 0.15356092830456042, 'learning_rate': 0.00019025141985921833, 'epoch': 0.17}


 17%|█▋        | 523/3107 [2:41:13<14:57:00, 20.83s/it]

 17%|█▋        | 524/3107 [2:41:37<15:28:01, 21.56s/it]

 17%|█▋        | 525/3107 [2:41:52<14:08:46, 19.72s/it]

 17%|█▋        | 526/3107 [2:42:12<14:09:32, 19.75s/it]
{'loss': 0.8367, 'grad_norm': 0.15473843229176204, 'learning_rate': 0.0001900256742047014, 'epoch': 0.17}

 17%|█▋        | 527/3107 [2:42:31<14:03:27, 19.62s/it]


 17%|█▋        | 529/3107 [2:43:13<14:35:23, 20.37s/it]
[2024-05-28 16:04:14,915] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 17%|█▋        | 530/3107 [2:43:38<15:36:22, 21.80s/it]

 17%|█▋        | 531/3107 [2:43:59<15:26:20, 21.58s/it]

 17%|█▋        | 532/3107 [2:44:23<15:53:56, 22.23s/it]

 17%|█▋        | 533/3107 [2:44:39<14:34:05, 20.38s/it]

 17%|█▋        | 534/3107 [2:44:53<13:15:55, 18.56s/it]
{'loss': 0.9771, 'grad_norm': 0.1458411146949279, 'learning_rate': 0.00018965939429215948, 'epoch': 0.17}


 17%|█▋        | 536/3107 [2:45:33<13:48:38, 19.34s/it]

 17%|█▋        | 537/3107 [2:45:46<12:32:08, 17.56s/it]
{'loss': 0.8754, 'grad_norm': 0.14502550578861184, 'learning_rate': 0.00018952042959911715, 'epoch': 0.17}


 17%|█▋        | 539/3107 [2:46:22<12:38:38, 17.73s/it]
{'loss': 0.9279, 'grad_norm': 0.162341092011196, 'learning_rate': 0.0001894272997623989, 'epoch': 0.17}

 17%|█▋        | 540/3107 [2:46:47<14:13:49, 19.96s/it]

 17%|█▋        | 541/3107 [2:47:06<13:52:43, 19.47s/it]

 17%|█▋        | 542/3107 [2:47:32<15:17:02, 21.45s/it]

 17%|█▋        | 543/3107 [2:47:48<14:06:01, 19.80s/it]


 18%|█▊        | 545/3107 [2:48:22<13:19:44, 18.73s/it]

 18%|█▊        | 546/3107 [2:48:47<14:34:43, 20.49s/it]

 18%|█▊        | 547/3107 [2:49:11<15:21:50, 21.61s/it]

 18%|█▊        | 548/3107 [2:49:24<13:36:04, 19.13s/it]

 18%|█▊        | 549/3107 [2:49:39<12:37:26, 17.77s/it]

 18%|█▊        | 550/3107 [2:49:55<12:13:37, 17.21s/it]
{'loss': 0.7689, 'grad_norm': 0.13207963473317486, 'learning_rate': 0.0001889081451210457, 'epoch': 0.18}


 18%|█▊        | 552/3107 [2:50:41<14:19:05, 20.17s/it]

 18%|█▊        | 553/3107 [2:51:17<17:35:39, 24.80s/it]

 18%|█▊        | 554/3107 [2:51:35<16:10:48, 22.82s/it]
{'loss': 0.9076, 'grad_norm': 0.14182740383770723, 'learning_rate': 0.00018871645823239128, 'epoch': 0.18}

 18%|█▊        | 555/3107 [2:51:51<14:45:27, 20.82s/it]


 18%|█▊        | 557/3107 [2:52:27<13:43:13, 19.37s/it]

 18%|█▊        | 558/3107 [2:52:47<13:50:07, 19.54s/it]

 18%|█▊        | 559/3107 [2:53:01<12:40:23, 17.91s/it]

 18%|█▊        | 560/3107 [2:53:21<13:12:54, 18.68s/it]

 18%|█▊        | 561/3107 [2:53:41<13:23:20, 18.93s/it]

 18%|█▊        | 562/3107 [2:53:54<12:14:43, 17.32s/it]
{'loss': 1.0336, 'grad_norm': 0.15128337493932587, 'learning_rate': 0.00018832845818627384, 'epoch': 0.18}


 18%|█▊        | 564/3107 [2:54:39<14:16:01, 20.20s/it]

 18%|█▊        | 565/3107 [2:54:57<13:49:30, 19.58s/it]

 18%|█▊        | 566/3107 [2:55:13<12:54:31, 18.29s/it]

 18%|█▊        | 567/3107 [2:55:33<13:27:21, 19.07s/it]
{'loss': 0.8695, 'grad_norm': 0.1488976653718462, 'learning_rate': 0.0001880828355035272, 'epoch': 0.18}

 18%|█▊        | 568/3107 [2:55:56<14:08:03, 20.04s/it]

 18%|█▊        | 569/3107 [2:56:10<12:54:35, 18.31s/it]


 18%|█▊        | 571/3107 [2:56:47<12:55:13, 18.34s/it]
{'loss': 0.8414, 'grad_norm': 0.14990338396652936, 'learning_rate': 0.00018788461332434623, 'epoch': 0.18}

 18%|█▊        | 572/3107 [2:57:00<11:50:22, 16.81s/it]


 18%|█▊        | 574/3107 [2:57:31<11:36:34, 16.50s/it]

 19%|█▊        | 575/3107 [2:57:49<11:57:08, 16.99s/it]

 19%|█▊        | 576/3107 [2:58:06<12:00:39, 17.08s/it]

 19%|█▊        | 577/3107 [2:58:21<11:29:10, 16.34s/it]

 19%|█▊        | 578/3107 [2:58:41<12:19:48, 17.55s/it]

 19%|█▊        | 579/3107 [2:58:59<12:23:48, 17.65s/it]
{'loss': 0.8498, 'grad_norm': 0.15878072729554835, 'learning_rate': 0.0001874835862200713, 'epoch': 0.19}


 19%|█▊        | 581/3107 [2:59:27<11:02:00, 15.72s/it]
{'loss': 0.904, 'grad_norm': 0.14282971554234988, 'learning_rate': 0.00018738237724611766, 'epoch': 0.19}


 19%|█▉        | 583/3107 [3:00:04<11:34:47, 16.52s/it]

 19%|█▉        | 584/3107 [3:00:26<12:44:55, 18.19s/it]

 19%|█▉        | 585/3107 [3:00:38<11:28:07, 16.37s/it]

 19%|█▉        | 586/3107 [3:00:53<11:18:41, 16.15s/it]

 19%|█▉        | 587/3107 [3:01:15<12:25:39, 17.75s/it]

 19%|█▉        | 588/3107 [3:01:35<12:51:55, 18.39s/it]

 19%|█▉        | 589/3107 [3:01:55<13:13:02, 18.90s/it]

 19%|█▉        | 590/3107 [3:02:11<12:43:21, 18.20s/it]

 19%|█▉        | 591/3107 [3:02:31<12:59:34, 18.59s/it]

 19%|█▉        | 592/3107 [3:02:48<12:37:03, 18.06s/it]

 19%|█▉        | 593/3107 [3:03:09<13:15:50, 18.99s/it]

 19%|█▉        | 594/3107 [3:03:33<14:16:20, 20.45s/it]

 19%|█▉        | 595/3107 [3:03:48<13:07:24, 18.81s/it]

 19%|█▉        | 596/3107 [3:04:00<11:45:18, 16.85s/it]
{'loss': 0.9647, 'grad_norm': 0.15307408491306596, 'learning_rate': 0.0001866112280646786, 'epoch': 0.19}


 19%|█▉        | 598/3107 [3:04:31<11:20:21, 16.27s/it]
{'loss': 0.8771, 'grad_norm': 0.1398997046459795, 'learning_rate': 0.0001865068032746197, 'epoch': 0.19}


 19%|█▉        | 600/3107 [3:05:03<11:14:59, 16.15s/it]
 19%|█▉        | 600/3107 [3:05:03<11:14:59, 16.15s/it]/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/peft/utils/save_and_load.py:154: UserWarning: Could not find a config file in /mnt/petrelfs/liaoyusheng/oss/download_models/Qwen1.5-7B-Chat - will assume that the vocabulary was not modified.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/nn/modules/module.py:1879: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
 19%|█▉        | 601/3107 [3:05:55<18:46:42, 26.98s/it]
{'loss': 0.8519, 'grad_norm': 0.13278309364881252, 'learning_rate': 0.00018634946086860222, 'epoch': 0.19}


 19%|█▉        | 603/3107 [3:06:30<15:26:41, 22.21s/it]
{'loss': 0.942, 'grad_norm': 0.1377549985362807, 'learning_rate': 0.00018624409644920243, 'epoch': 0.19}


 19%|█▉        | 605/3107 [3:07:12<14:52:24, 21.40s/it]

 20%|█▉        | 606/3107 [3:07:26<13:26:32, 19.35s/it]
{'loss': 0.8469, 'grad_norm': 0.13522089067258034, 'learning_rate': 0.0001860853467425206, 'epoch': 0.2}


 20%|█▉        | 608/3107 [3:08:11<14:40:57, 21.15s/it]
{'loss': 0.6693, 'grad_norm': 0.12452101844296008, 'learning_rate': 0.00018597904555752587, 'epoch': 0.2}


 20%|█▉        | 610/3107 [3:08:50<14:13:46, 20.52s/it]

 20%|█▉        | 611/3107 [3:09:14<14:50:26, 21.40s/it]

 20%|█▉        | 612/3107 [3:09:34<14:41:40, 21.20s/it]
{'loss': 0.913, 'grad_norm': 0.14591726785671918, 'learning_rate': 0.00018576532195538646, 'epoch': 0.2}


 20%|█▉        | 614/3107 [3:10:12<14:07:12, 20.39s/it]

 20%|█▉        | 615/3107 [3:10:28<13:07:40, 18.97s/it]

 20%|█▉        | 616/3107 [3:10:44<12:27:55, 18.02s/it]
{'loss': 0.8039, 'grad_norm': 0.15298322920926094, 'learning_rate': 0.0001855501064778312, 'epoch': 0.2}

 20%|█▉        | 617/3107 [3:11:01<12:20:54, 17.85s/it]


 20%|█▉        | 619/3107 [3:11:32<11:22:12, 16.45s/it]

 20%|█▉        | 620/3107 [3:11:45<10:42:17, 15.50s/it]

 20%|█▉        | 621/3107 [3:12:01<10:38:20, 15.41s/it]

 20%|██        | 622/3107 [3:12:22<11:50:59, 17.17s/it]

 20%|██        | 623/3107 [3:12:40<12:01:18, 17.42s/it]

 20%|██        | 624/3107 [3:13:01<12:41:45, 18.41s/it]

 20%|██        | 625/3107 [3:13:18<12:32:27, 18.19s/it]

 20%|██        | 626/3107 [3:13:36<12:31:59, 18.19s/it]

 20%|██        | 627/3107 [3:13:59<13:32:19, 19.65s/it]

 20%|██        | 628/3107 [3:14:30<15:47:33, 22.93s/it]

 20%|██        | 629/3107 [3:14:56<16:23:53, 23.82s/it]

 20%|██        | 630/3107 [3:15:14<15:14:33, 22.15s/it]

 20%|██        | 631/3107 [3:15:35<14:52:17, 21.62s/it]

 20%|██        | 632/3107 [3:15:50<13:35:17, 19.76s/it]

 20%|██        | 633/3107 [3:16:10<13:39:37, 19.88s/it]

 20%|██        | 634/3107 [3:16:32<14:08:06, 20.58s/it]

 20%|██        | 635/3107 [3:16:52<13:51:01, 20.17s/it]

 20%|██        | 636/3107 [3:17:07<12:49:53, 18.69s/it]
{'loss': 0.892, 'grad_norm': 0.13534623939532583, 'learning_rate': 0.00018445178289091865, 'epoch': 0.2}


 21%|██        | 638/3107 [3:17:42<12:18:27, 17.95s/it]

 21%|██        | 639/3107 [3:17:54<11:12:19, 16.34s/it]

 21%|██        | 640/3107 [3:18:15<11:59:54, 17.51s/it]

 21%|██        | 641/3107 [3:18:31<11:44:46, 17.15s/it]

 21%|██        | 642/3107 [3:18:44<10:58:09, 16.02s/it]

 21%|██        | 643/3107 [3:19:01<11:03:12, 16.15s/it]

 21%|██        | 644/3107 [3:19:12<10:00:00, 14.62s/it]

 21%|██        | 645/3107 [3:19:27<10:06:27, 14.78s/it]
{'loss': 0.8446, 'grad_norm': 0.15040473010546057, 'learning_rate': 0.0001839455267908113, 'epoch': 0.21}


 21%|██        | 647/3107 [3:19:59<10:33:12, 15.44s/it]
{'loss': 0.8848, 'grad_norm': 0.1397283868779574, 'learning_rate': 0.00018383201995727494, 'epoch': 0.21}


 21%|██        | 649/3107 [3:20:38<12:01:49, 17.62s/it]

 21%|██        | 650/3107 [3:21:12<15:25:51, 22.61s/it]
[2024-05-28 16:42:14,638] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 21%|██        | 651/3107 [3:21:41<16:33:35, 24.27s/it]

 21%|██        | 652/3107 [3:21:57<14:52:56, 21.82s/it]

 21%|██        | 653/3107 [3:22:11<13:19:53, 19.56s/it]

 21%|██        | 654/3107 [3:22:38<14:58:04, 21.97s/it]

 21%|██        | 655/3107 [3:22:54<13:43:38, 20.15s/it]
{'loss': 0.9357, 'grad_norm': 0.14940556551469528, 'learning_rate': 0.00018337435196426113, 'epoch': 0.21}

 21%|██        | 656/3107 [3:23:16<13:55:01, 20.44s/it]

 21%|██        | 657/3107 [3:23:40<14:40:58, 21.57s/it]

 21%|██        | 658/3107 [3:23:54<13:07:58, 19.31s/it]

 21%|██        | 659/3107 [3:24:11<12:47:45, 18.82s/it]


 21%|██▏       | 661/3107 [3:24:45<11:47:06, 17.35s/it]

 21%|██▏       | 662/3107 [3:25:14<14:15:52, 21.00s/it]

 21%|██▏       | 663/3107 [3:25:29<12:59:27, 19.14s/it]
{'loss': 0.9109, 'grad_norm': 0.1542867350696211, 'learning_rate': 0.00018291088285712508, 'epoch': 0.21}


 21%|██▏       | 665/3107 [3:26:11<13:34:42, 20.02s/it]

 21%|██▏       | 666/3107 [3:26:27<12:47:40, 18.87s/it]

 21%|██▏       | 667/3107 [3:26:41<11:43:38, 17.30s/it]
{'loss': 0.8747, 'grad_norm': 0.14610343682687046, 'learning_rate': 0.00018267698294748442, 'epoch': 0.21}

 21%|██▏       | 668/3107 [3:26:58<11:41:47, 17.26s/it]


 22%|██▏       | 670/3107 [3:27:40<12:48:53, 18.93s/it]
{'loss': 0.8657, 'grad_norm': 0.1382409863085891, 'learning_rate': 0.0001825006140031118, 'epoch': 0.22}


 22%|██▏       | 672/3107 [3:28:23<13:23:42, 19.80s/it]

 22%|██▏       | 673/3107 [3:28:43<13:26:19, 19.88s/it]

 22%|██▏       | 674/3107 [3:29:07<14:14:53, 21.08s/it]

 22%|██▏       | 675/3107 [3:29:20<12:35:47, 18.65s/it]
{'loss': 1.0209, 'grad_norm': 0.14945289894461453, 'learning_rate': 0.00018220487275926315, 'epoch': 0.22}


 22%|██▏       | 677/3107 [3:30:01<13:01:45, 19.30s/it]

 22%|██▏       | 678/3107 [3:30:13<11:32:11, 17.10s/it]

 22%|██▏       | 679/3107 [3:30:33<12:12:15, 18.10s/it]
{'loss': 0.8253, 'grad_norm': 0.14642676040455163, 'learning_rate': 0.00018196667069297123, 'epoch': 0.22}
[2024-05-28 16:51:56,686] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 22%|██▏       | 680/3107 [3:30:54<12:49:44, 19.03s/it]


 22%|██▏       | 682/3107 [3:31:27<11:42:16, 17.38s/it]

 22%|██▏       | 683/3107 [3:31:43<11:32:49, 17.15s/it]
{'loss': 0.9172, 'grad_norm': 0.13637924425683481, 'learning_rate': 0.0001817270428282547, 'epoch': 0.22}


 22%|██▏       | 685/3107 [3:32:19<11:52:40, 17.65s/it]

 22%|██▏       | 686/3107 [3:32:35<11:31:36, 17.14s/it]

 22%|██▏       | 687/3107 [3:32:53<11:42:20, 17.41s/it]
{'loss': 0.8361, 'grad_norm': 0.14752158177479913, 'learning_rate': 0.00018148599333340585, 'epoch': 0.22}

 22%|██▏       | 688/3107 [3:33:12<12:03:05, 17.94s/it]

 22%|██▏       | 689/3107 [3:33:34<12:49:33, 19.10s/it]


 22%|██▏       | 691/3107 [3:34:25<14:57:38, 22.29s/it]
{'loss': 0.9292, 'grad_norm': 0.144657294640675, 'learning_rate': 0.00018124352640144572, 'epoch': 0.22}

 22%|██▏       | 692/3107 [3:34:42<13:54:30, 20.73s/it]

 22%|██▏       | 693/3107 [3:34:54<12:09:35, 18.13s/it]

 22%|██▏       | 694/3107 [3:35:12<12:09:45, 18.15s/it]


 22%|██▏       | 696/3107 [3:35:41<10:55:38, 16.32s/it]

 22%|██▏       | 697/3107 [3:36:00<11:22:18, 16.99s/it]

 22%|██▏       | 698/3107 [3:36:13<10:37:10, 15.87s/it]

 22%|██▏       | 699/3107 [3:36:26<9:55:58, 14.85s/it]
{'loss': 0.9445, 'grad_norm': 0.1439060372584413, 'learning_rate': 0.00018075435712148417, 'epoch': 0.22}

 23%|██▎       | 700/3107 [3:36:36<9:06:28, 13.62s/it]

 23%|██▎       | 701/3107 [3:36:51<9:14:34, 13.83s/it]


 23%|██▎       | 703/3107 [3:37:24<10:02:49, 15.05s/it]

 23%|██▎       | 704/3107 [3:37:54<12:58:26, 19.44s/it]
[2024-05-28 16:58:56,101] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.9241, 'grad_norm': 0.15208207968614793, 'learning_rate': 0.00018044577083910758, 'epoch': 0.23}


 23%|██▎       | 706/3107 [3:38:36<13:20:08, 20.00s/it]
{'loss': 0.8782, 'grad_norm': 0.14709363532857117, 'learning_rate': 0.0001803217236425901, 'epoch': 0.23}

 23%|██▎       | 707/3107 [3:38:53<12:46:49, 19.17s/it]


 23%|██▎       | 709/3107 [3:39:33<13:16:04, 19.92s/it]

 23%|██▎       | 710/3107 [3:39:55<13:39:50, 20.52s/it]
{'loss': 0.9545, 'grad_norm': 0.15249168518249936, 'learning_rate': 0.00018007258190077554, 'epoch': 0.23}


 23%|██▎       | 712/3107 [3:40:32<13:04:04, 19.64s/it]

 23%|██▎       | 713/3107 [3:40:48<12:19:55, 18.54s/it]

 23%|██▎       | 714/3107 [3:41:08<12:40:46, 19.08s/it]
[2024-05-28 17:02:10,440] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 23%|██▎       | 715/3107 [3:41:26<12:27:54, 18.76s/it]

 23%|██▎       | 716/3107 [3:41:42<11:49:15, 17.80s/it]

 23%|██▎       | 717/3107 [3:42:06<13:04:10, 19.69s/it]

 23%|██▎       | 718/3107 [3:42:24<12:45:04, 19.21s/it]
{'loss': 0.8891, 'grad_norm': 0.13534887958614958, 'learning_rate': 0.0001795701242220905, 'epoch': 0.23}


 23%|██▎       | 720/3107 [3:43:12<14:37:17, 22.05s/it]
[2024-05-28 17:04:14,706] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 23%|██▎       | 721/3107 [3:43:36<14:59:52, 22.63s/it]
[2024-05-28 17:04:38,678] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.7468, 'grad_norm': 0.12953593242259032, 'learning_rate': 0.00017938027334440788, 'epoch': 0.23}

 23%|██▎       | 722/3107 [3:44:03<15:43:37, 23.74s/it]


 23%|██▎       | 724/3107 [3:44:38<13:34:16, 20.50s/it]

 23%|██▎       | 725/3107 [3:44:54<12:47:12, 19.33s/it]

 23%|██▎       | 726/3107 [3:45:16<13:15:47, 20.05s/it]
{'loss': 0.8651, 'grad_norm': 0.12931156015068518, 'learning_rate': 0.0001790621301241056, 'epoch': 0.23}


 23%|██▎       | 728/3107 [3:46:02<13:42:20, 20.74s/it]
{'loss': 0.9447, 'grad_norm': 0.15062739929350308, 'learning_rate': 0.00017893427066774836, 'epoch': 0.23}


 23%|██▎       | 730/3107 [3:46:44<13:56:52, 21.12s/it]

 24%|██▎       | 731/3107 [3:47:09<14:35:21, 22.10s/it]

 24%|██▎       | 732/3107 [3:47:27<13:47:21, 20.90s/it]

 24%|██▎       | 733/3107 [3:47:40<12:22:49, 18.77s/it]
{'loss': 0.8969, 'grad_norm': 0.1446156669672728, 'learning_rate': 0.00017861312147147464, 'epoch': 0.24}

 24%|██▎       | 734/3107 [3:47:55<11:38:31, 17.66s/it]

 24%|██▎       | 735/3107 [3:48:15<12:04:56, 18.34s/it]


 24%|██▎       | 737/3107 [3:49:00<13:24:07, 20.36s/it]

 24%|██▍       | 738/3107 [3:49:21<13:24:47, 20.38s/it]

 24%|██▍       | 739/3107 [3:49:42<13:36:31, 20.69s/it]

 24%|██▍       | 740/3107 [3:49:57<12:25:35, 18.90s/it]

 24%|██▍       | 741/3107 [3:50:13<11:49:15, 17.99s/it]

 24%|██▍       | 742/3107 [3:50:38<13:15:33, 20.18s/it]

 24%|██▍       | 743/3107 [3:50:51<11:43:50, 17.86s/it]

 24%|██▍       | 744/3107 [3:51:08<11:37:16, 17.70s/it]

 24%|██▍       | 745/3107 [3:51:31<12:40:36, 19.32s/it]
{'loss': 0.737, 'grad_norm': 0.1288157799937374, 'learning_rate': 0.00017783366256598972, 'epoch': 0.24}


 24%|██▍       | 747/3107 [3:52:00<11:01:12, 16.81s/it]

 24%|██▍       | 748/3107 [3:52:17<10:59:40, 16.78s/it]
{'loss': 0.9118, 'grad_norm': 0.14794557392528268, 'learning_rate': 0.00017763688912361344, 'epoch': 0.24}


 24%|██▍       | 750/3107 [3:52:56<11:58:15, 18.28s/it]
{'loss': 0.9095, 'grad_norm': 0.1403133082430053, 'learning_rate': 0.00017750528468349268, 'epoch': 0.24}

 24%|██▍       | 751/3107 [3:53:12<11:26:59, 17.50s/it]

 24%|██▍       | 752/3107 [3:53:25<10:39:45, 16.30s/it]


 24%|██▍       | 754/3107 [3:54:09<12:35:16, 19.26s/it]

 24%|██▍       | 755/3107 [3:54:20<11:05:01, 16.96s/it]

 24%|██▍       | 756/3107 [3:54:36<10:51:08, 16.62s/it]

 24%|██▍       | 757/3107 [3:54:48<9:54:51, 15.19s/it]

 24%|██▍       | 758/3107 [3:55:13<11:49:23, 18.12s/it]

 24%|██▍       | 759/3107 [3:55:31<11:44:12, 18.00s/it]
{'loss': 0.7995, 'grad_norm': 0.1374152312891915, 'learning_rate': 0.00017690890202261676, 'epoch': 0.24}


 24%|██▍       | 761/3107 [3:56:14<13:09:57, 20.20s/it]

 25%|██▍       | 762/3107 [3:56:33<12:47:36, 19.64s/it]

 25%|██▍       | 763/3107 [3:56:55<13:23:42, 20.57s/it]
{'loss': 0.7042, 'grad_norm': 0.13594045138643296, 'learning_rate': 0.0001766416659752182, 'epoch': 0.25}

 25%|██▍       | 764/3107 [3:57:14<12:55:53, 19.87s/it]

 25%|██▍       | 765/3107 [3:57:28<11:52:50, 18.26s/it]


 25%|██▍       | 767/3107 [3:58:03<11:25:44, 17.58s/it]
{'loss': 0.9234, 'grad_norm': 0.1478805002873819, 'learning_rate': 0.00017637309675708475, 'epoch': 0.25}

 25%|██▍       | 768/3107 [3:58:26<12:33:29, 19.33s/it]


 25%|██▍       | 770/3107 [3:59:12<13:24:45, 20.66s/it]

 25%|██▍       | 771/3107 [3:59:35<13:51:29, 21.36s/it]

 25%|██▍       | 772/3107 [3:59:51<12:48:52, 19.76s/it]

 25%|██▍       | 773/3107 [4:00:07<12:00:33, 18.52s/it]

 25%|██▍       | 774/3107 [4:00:19<10:44:10, 16.57s/it]
{'loss': 0.927, 'grad_norm': 0.14055672489717722, 'learning_rate': 0.00017589990674797171, 'epoch': 0.25}

 25%|██▍       | 775/3107 [4:00:38<11:13:40, 17.33s/it]

 25%|██▍       | 776/3107 [4:00:52<10:35:05, 16.35s/it]


 25%|██▌       | 778/3107 [4:01:28<10:58:42, 16.97s/it]

 25%|██▌       | 779/3107 [4:01:48<11:23:23, 17.61s/it]

 25%|██▌       | 780/3107 [4:02:00<10:17:02, 15.91s/it]
{'loss': 0.8039, 'grad_norm': 0.1608361078231958, 'learning_rate': 0.00017549109620687784, 'epoch': 0.25}


 25%|██▌       | 782/3107 [4:02:29<10:02:00, 15.54s/it]
{'loss': 0.9135, 'grad_norm': 0.1387428926323684, 'learning_rate': 0.00017535416865586398, 'epoch': 0.25}


 25%|██▌       | 784/3107 [4:03:07<10:46:37, 16.70s/it]

 25%|██▌       | 785/3107 [4:03:27<11:21:57, 17.62s/it]
{'loss': 1.0056, 'grad_norm': 0.15559919362289282, 'learning_rate': 0.0001751481630894095, 'epoch': 0.25}


 25%|██▌       | 787/3107 [4:04:06<12:15:46, 19.03s/it]
{'loss': 0.8951, 'grad_norm': 0.14435488566002974, 'learning_rate': 0.00017501041742279259, 'epoch': 0.25}

 25%|██▌       | 788/3107 [4:04:26<12:32:26, 19.47s/it]


 25%|██▌       | 790/3107 [4:05:17<14:24:29, 22.39s/it]

 25%|██▌       | 791/3107 [4:05:31<12:46:58, 19.87s/it]

 25%|██▌       | 792/3107 [4:05:57<13:51:08, 21.54s/it]

 26%|██▌       | 793/3107 [4:06:19<13:57:11, 21.71s/it]

 26%|██▌       | 794/3107 [4:06:37<13:10:13, 20.50s/it]
{'loss': 0.879, 'grad_norm': 0.14049075010750536, 'learning_rate': 0.0001745257427147374, 'epoch': 0.26}


 26%|██▌       | 796/3107 [4:07:11<12:09:41, 18.94s/it]

 26%|██▌       | 797/3107 [4:07:27<11:33:43, 18.02s/it]

 26%|██▌       | 798/3107 [4:07:53<13:10:13, 20.53s/it]
{'loss': 0.756, 'grad_norm': 0.1340034123875035, 'learning_rate': 0.00017424700157798138, 'epoch': 0.26}


 26%|██▌       | 800/3107 [4:08:22<11:01:20, 17.20s/it]

 26%|██▌       | 801/3107 [4:08:39<11:00:18, 17.18s/it]

 26%|██▌       | 802/3107 [4:08:53<10:24:42, 16.26s/it]
{'loss': 0.8546, 'grad_norm': 0.13667382449447465, 'learning_rate': 0.00017396696892533253, 'epoch': 0.26}

 26%|██▌       | 803/3107 [4:09:12<11:01:28, 17.23s/it]


 26%|██▌       | 805/3107 [4:09:53<12:17:58, 19.23s/it]

 26%|██▌       | 806/3107 [4:10:11<12:01:13, 18.81s/it]

 26%|██▌       | 807/3107 [4:10:26<11:14:30, 17.60s/it]
{'loss': 0.8593, 'grad_norm': 0.1386403484150792, 'learning_rate': 0.00017361511933828801, 'epoch': 0.26}

 26%|██▌       | 808/3107 [4:10:42<11:02:19, 17.29s/it]

 26%|██▌       | 809/3107 [4:11:04<11:57:58, 18.75s/it]


 26%|██▌       | 811/3107 [4:11:35<10:59:21, 17.23s/it]

 26%|██▌       | 812/3107 [4:11:59<12:18:18, 19.30s/it]
{'loss': 0.8612, 'grad_norm': 0.14270887354937553, 'learning_rate': 0.00017326126893351193, 'epoch': 0.26}


 26%|██▌       | 814/3107 [4:12:35<11:43:46, 18.42s/it]

 26%|██▌       | 815/3107 [4:13:01<13:09:33, 20.67s/it]

 26%|██▋       | 816/3107 [4:13:28<14:19:32, 22.51s/it]

 26%|██▋       | 817/3107 [4:13:54<15:00:42, 23.60s/it]
{'loss': 0.7761, 'grad_norm': 0.1466761117744021, 'learning_rate': 0.00017290542732846024, 'epoch': 0.26}


 26%|██▋       | 819/3107 [4:14:38<14:35:48, 22.97s/it]
{'loss': 0.8037, 'grad_norm': 0.1389824487703455, 'learning_rate': 0.00017276253531498293, 'epoch': 0.26}

 26%|██▋       | 820/3107 [4:14:53<13:01:02, 20.49s/it]


 26%|██▋       | 822/3107 [4:15:39<13:52:13, 21.85s/it]

 26%|██▋       | 823/3107 [4:15:56<12:51:25, 20.27s/it]

 27%|██▋       | 824/3107 [4:16:16<12:53:19, 20.32s/it]

 27%|██▋       | 825/3107 [4:16:30<11:40:16, 18.41s/it]
{'loss': 0.823, 'grad_norm': 0.14909855835756444, 'learning_rate': 0.00017233196322422888, 'epoch': 0.27}


 27%|██▋       | 827/3107 [4:17:10<12:16:40, 19.39s/it]
{'loss': 0.8385, 'grad_norm': 0.1354295948950135, 'learning_rate': 0.0001721878092576893, 'epoch': 0.27}


 27%|██▋       | 829/3107 [4:17:48<12:00:10, 18.97s/it]
{'loss': 0.9413, 'grad_norm': 0.14880444461685596, 'learning_rate': 0.00017204334136667365, 'epoch': 0.27}


 27%|██▋       | 831/3107 [4:18:29<12:07:49, 19.19s/it]

 27%|██▋       | 832/3107 [4:18:44<11:23:58, 18.04s/it]

 27%|██▋       | 833/3107 [4:19:08<12:27:07, 19.71s/it]

 27%|██▋       | 834/3107 [4:19:28<12:38:22, 20.02s/it]

 27%|██▋       | 835/3107 [4:19:46<12:05:59, 19.17s/it]

 27%|██▋       | 836/3107 [4:20:07<12:28:17, 19.77s/it]

 27%|██▋       | 837/3107 [4:20:23<11:42:39, 18.57s/it]

 27%|██▋       | 838/3107 [4:20:39<11:16:05, 17.88s/it]
{'loss': 0.7312, 'grad_norm': 0.1475324477183447, 'learning_rate': 0.00017138936791860263, 'epoch': 0.27}


 27%|██▋       | 840/3107 [4:21:08<10:14:24, 16.26s/it]
{'loss': 0.8868, 'grad_norm': 0.12854077615087953, 'learning_rate': 0.0001712431847094073, 'epoch': 0.27}

 27%|██▋       | 841/3107 [4:21:31<11:29:51, 18.27s/it]


 27%|██▋       | 843/3107 [4:22:12<12:16:02, 19.51s/it]

 27%|██▋       | 844/3107 [4:22:30<11:59:37, 19.08s/it]

 27%|██▋       | 845/3107 [4:22:49<11:49:53, 18.83s/it]

 27%|██▋       | 846/3107 [4:23:10<12:21:49, 19.69s/it]

 27%|██▋       | 847/3107 [4:23:44<15:04:38, 24.02s/it]
{'loss': 0.8321, 'grad_norm': 0.14448863131190617, 'learning_rate': 0.00017072910785573202, 'epoch': 0.27}


 27%|██▋       | 849/3107 [4:24:33<15:33:59, 24.82s/it]
[2024-05-28 17:45:35,351] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 27%|██▋       | 850/3107 [4:24:46<13:22:32, 21.33s/it]

 27%|██▋       | 851/3107 [4:25:07<13:12:19, 21.07s/it]
{'loss': 0.8087, 'grad_norm': 0.13072207796904878, 'learning_rate': 0.0001704336562002517, 'epoch': 0.27}


 27%|██▋       | 853/3107 [4:25:44<12:42:49, 20.31s/it]
{'loss': 0.8733, 'grad_norm': 0.14361078848070621, 'learning_rate': 0.000170285470606732, 'epoch': 0.27}


 28%|██▊       | 855/3107 [4:26:33<13:35:15, 21.72s/it]
{'loss': 0.9414, 'grad_norm': 0.1393773861355286, 'learning_rate': 0.00017013697936147187, 'epoch': 0.28}

 28%|██▊       | 856/3107 [4:26:51<12:56:48, 20.71s/it]

 28%|██▊       | 857/3107 [4:27:07<12:02:10, 19.26s/it]


 28%|██▊       | 859/3107 [4:27:49<12:39:30, 20.27s/it]
{'loss': 0.7654, 'grad_norm': 0.13066351257606348, 'learning_rate': 0.00016983908250004344, 'epoch': 0.28}


 28%|██▊       | 861/3107 [4:28:33<13:02:22, 20.90s/it]
{'loss': 0.8413, 'grad_norm': 0.15395308966454546, 'learning_rate': 0.00016968967817934476, 'epoch': 0.28}


 28%|██▊       | 863/3107 [4:29:11<12:16:58, 19.71s/it]
{'loss': 0.8546, 'grad_norm': 0.13243359895228096, 'learning_rate': 0.00016953997079783935, 'epoch': 0.28}


 28%|██▊       | 865/3107 [4:29:47<11:35:45, 18.62s/it]

 28%|██▊       | 866/3107 [4:30:01<10:39:59, 17.13s/it]
{'loss': 0.7982, 'grad_norm': 0.150262470054837, 'learning_rate': 0.00016931484291106793, 'epoch': 0.28}

 28%|██▊       | 867/3107 [4:30:16<10:19:55, 16.61s/it]


 28%|██▊       | 869/3107 [4:30:49<10:18:07, 16.57s/it]
{'loss': 0.8704, 'grad_norm': 0.1454661401057054, 'learning_rate': 0.0001690890368054082, 'epoch': 0.28}
[2024-05-28 17:52:18,054] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 28%|██▊       | 871/3107 [4:31:47<14:20:20, 23.09s/it]
{'loss': 0.7275, 'grad_norm': 0.1417662924018694, 'learning_rate': 0.00016893812370416547, 'epoch': 0.28}

 28%|██▊       | 872/3107 [4:32:09<14:06:14, 22.72s/it]

 28%|██▊       | 873/3107 [4:32:27<13:13:31, 21.31s/it]

 28%|██▊       | 874/3107 [4:33:01<15:36:42, 25.17s/it]

 28%|██▊       | 875/3107 [4:33:18<14:08:36, 22.81s/it]

 28%|██▊       | 876/3107 [4:33:38<13:37:46, 21.99s/it]


 28%|██▊       | 878/3107 [4:34:10<11:36:43, 18.75s/it]
{'loss': 0.9001, 'grad_norm': 0.1531397203445351, 'learning_rate': 0.00016840757130240223, 'epoch': 0.28}

 28%|██▊       | 879/3107 [4:34:32<12:21:16, 19.96s/it]

 28%|██▊       | 880/3107 [4:34:46<11:13:55, 18.16s/it]


 28%|██▊       | 882/3107 [4:35:22<10:56:48, 17.71s/it]
{'loss': 0.8495, 'grad_norm': 0.14985020014361164, 'learning_rate': 0.00016810276051816678, 'epoch': 0.28}

 28%|██▊       | 883/3107 [4:35:37<10:28:46, 16.96s/it]

 28%|██▊       | 884/3107 [4:36:02<11:59:35, 19.42s/it]

 28%|██▊       | 885/3107 [4:36:24<12:27:47, 20.19s/it]


 29%|██▊       | 887/3107 [4:37:09<13:21:35, 21.66s/it]
{'loss': 0.7824, 'grad_norm': 0.1467667372682057, 'learning_rate': 0.0001677200817644077, 'epoch': 0.29}
[2024-05-28 17:58:35,147] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 29%|██▊       | 889/3107 [4:37:48<12:18:04, 19.97s/it]
{'loss': 0.9217, 'grad_norm': 0.1535334636568123, 'learning_rate': 0.00016756649431246953, 'epoch': 0.29}

 29%|██▊       | 890/3107 [4:37:59<10:40:20, 17.33s/it]


 29%|██▊       | 892/3107 [4:38:28<9:43:03, 15.79s/it]
{'loss': 1.0698, 'grad_norm': 0.14777335035325098, 'learning_rate': 0.00016733556241673808, 'epoch': 0.29}

 29%|██▊       | 893/3107 [4:38:45<9:56:14, 16.16s/it]


 29%|██▉       | 895/3107 [4:39:26<11:23:09, 18.53s/it]

 29%|██▉       | 896/3107 [4:39:43<11:08:12, 18.13s/it]
{'loss': 0.8182, 'grad_norm': 0.13912967291326264, 'learning_rate': 0.00016702662873239907, 'epoch': 0.29}


 29%|██▉       | 898/3107 [4:40:24<11:40:51, 19.04s/it]
{'loss': 0.8875, 'grad_norm': 0.1404958934781384, 'learning_rate': 0.00016687172433411482, 'epoch': 0.29}

 29%|██▉       | 899/3107 [4:40:36<10:31:40, 17.17s/it]

 29%|██▉       | 900/3107 [4:41:01<11:55:01, 19.44s/it]/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/peft/utils/save_and_load.py:154: UserWarning: Could not find a config file in /mnt/petrelfs/liaoyusheng/oss/download_models/Qwen1.5-7B-Chat - will assume that the vocabulary was not modified.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/nn/modules/module.py:1879: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
{'loss': 0.8232, 'grad_norm': 0.1419628375754643, 'learning_rate': 0.0001666388226856989, 'epoch': 0.29}

 29%|██▉       | 902/3107 [4:42:13<16:05:04, 26.26s/it]

 29%|██▉       | 903/3107 [4:42:36<15:20:25, 25.06s/it]
{'loss': 0.9863, 'grad_norm': 0.1388426023868377, 'learning_rate': 0.00016648319253745168, 'epoch': 0.29}

 29%|██▉       | 904/3107 [4:42:53<13:56:02, 22.77s/it]


 29%|██▉       | 906/3107 [4:43:24<11:37:44, 19.02s/it]

 29%|██▉       | 907/3107 [4:43:44<11:55:03, 19.50s/it]

 29%|██▉       | 908/3107 [4:44:02<11:33:05, 18.91s/it]

 29%|██▉       | 909/3107 [4:44:16<10:42:30, 17.54s/it]
{'loss': 0.8882, 'grad_norm': 0.14923897549575177, 'learning_rate': 0.00016601457010594447, 'epoch': 0.29}

 29%|██▉       | 910/3107 [4:44:32<10:29:55, 17.20s/it]


 29%|██▉       | 912/3107 [4:45:08<10:30:01, 17.22s/it]
{'loss': 0.9936, 'grad_norm': 0.15442663292267494, 'learning_rate': 0.00016577928885178698, 'epoch': 0.29}

 29%|██▉       | 913/3107 [4:45:21<9:37:42, 15.80s/it]

 29%|██▉       | 914/3107 [4:45:37<9:45:25, 16.02s/it]
[2024-05-28 18:07:05,180] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 29%|██▉       | 916/3107 [4:46:24<11:53:25, 19.54s/it]
{'loss': 0.8265, 'grad_norm': 0.132403395355273, 'learning_rate': 0.00016546457971748898, 'epoch': 0.29}

 30%|██▉       | 917/3107 [4:46:43<11:46:03, 19.34s/it]


 30%|██▉       | 919/3107 [4:47:30<12:53:33, 21.21s/it]
{'loss': 0.8605, 'grad_norm': 0.13093852997716987, 'learning_rate': 0.00016522780026397, 'epoch': 0.3}

 30%|██▉       | 920/3107 [4:47:43<11:28:24, 18.89s/it]


 30%|██▉       | 922/3107 [4:48:21<11:17:24, 18.60s/it]

 30%|██▉       | 923/3107 [4:48:36<10:42:55, 17.66s/it]

 30%|██▉       | 924/3107 [4:48:55<10:51:25, 17.90s/it]
{'loss': 0.8932, 'grad_norm': 0.14377142530723058, 'learning_rate': 0.00016483175070223081, 'epoch': 0.3}

 30%|██▉       | 925/3107 [4:49:14<11:05:15, 18.29s/it]

 30%|██▉       | 926/3107 [4:49:30<10:40:17, 17.61s/it]

 30%|██▉       | 927/3107 [4:49:47<10:33:25, 17.43s/it]


 30%|██▉       | 929/3107 [4:50:14<9:19:50, 15.42s/it]

 30%|██▉       | 930/3107 [4:50:36<10:33:12, 17.45s/it]
{'loss': 0.9405, 'grad_norm': 0.1377786013082881, 'learning_rate': 0.00016435416621907663, 'epoch': 0.3}

 30%|██▉       | 931/3107 [4:50:53<10:23:00, 17.18s/it]


 30%|███       | 933/3107 [4:51:21<9:27:11, 15.65s/it]

 30%|███       | 934/3107 [4:51:34<9:01:00, 14.94s/it]
{'loss': 0.9097, 'grad_norm': 0.15387993867896382, 'learning_rate': 0.00016403437611898282, 'epoch': 0.3}


 30%|███       | 936/3107 [4:52:08<9:45:54, 16.19s/it]
{'loss': 0.8375, 'grad_norm': 0.13601179402031238, 'learning_rate': 0.00016387406301972973, 'epoch': 0.3}


 30%|███       | 938/3107 [4:52:47<10:44:37, 17.83s/it]
{'loss': 0.8073, 'grad_norm': 0.15049766362241962, 'learning_rate': 0.00016371347215014432, 'epoch': 0.3}


 30%|███       | 940/3107 [4:53:20<10:22:33, 17.24s/it]
{'loss': 0.8768, 'grad_norm': 0.1455714409870885, 'learning_rate': 0.0001635526042085911, 'epoch': 0.3}

 30%|███       | 941/3107 [4:53:37<10:22:45, 17.25s/it]

 30%|███       | 942/3107 [4:53:49<9:21:47, 15.57s/it]

 30%|███       | 943/3107 [4:54:01<8:46:56, 14.61s/it]

 30%|███       | 944/3107 [4:54:21<9:40:54, 16.11s/it]

 30%|███       | 945/3107 [4:54:40<10:11:42, 16.98s/it]

 30%|███       | 946/3107 [4:55:03<11:20:21, 18.89s/it]


 31%|███       | 948/3107 [4:55:39<10:46:20, 17.96s/it]

 31%|███       | 949/3107 [4:56:01<11:31:03, 19.21s/it]

 31%|███       | 950/3107 [4:56:15<10:34:22, 17.65s/it]
{'loss': 0.8472, 'grad_norm': 0.1500466284318692, 'learning_rate': 0.00016274413294823875, 'epoch': 0.31}


 31%|███       | 952/3107 [4:56:52<10:42:31, 17.89s/it]
{'loss': 0.7923, 'grad_norm': 0.15499317393412973, 'learning_rate': 0.00016258161730779507, 'epoch': 0.31}

 31%|███       | 953/3107 [4:57:07<10:12:53, 17.07s/it]


 31%|███       | 955/3107 [4:57:47<10:53:05, 18.21s/it]

 31%|███       | 956/3107 [4:58:09<11:35:32, 19.40s/it]
{'loss': 0.6688, 'grad_norm': 0.13576948076272205, 'learning_rate': 0.00016225577028527752, 'epoch': 0.31}


 31%|███       | 958/3107 [4:58:41<10:38:23, 17.82s/it]

 31%|███       | 959/3107 [4:59:03<11:23:17, 19.09s/it]
{'loss': 0.8369, 'grad_norm': 0.14090293271981372, 'learning_rate': 0.00016201067403479543, 'epoch': 0.31}

 31%|███       | 960/3107 [4:59:24<11:43:15, 19.65s/it]


 31%|███       | 962/3107 [5:00:11<12:51:38, 21.58s/it]
[2024-05-28 18:21:12,893] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.7968, 'grad_norm': 0.15083888289959896, 'learning_rate': 0.00016176497103388818, 'epoch': 0.31}


 31%|███       | 964/3107 [5:00:43<11:29:28, 19.30s/it]
{'loss': 0.8674, 'grad_norm': 0.1453430332025604, 'learning_rate': 0.0001616008331366843, 'epoch': 0.31}


 31%|███       | 966/3107 [5:01:21<11:15:50, 18.94s/it]
{'loss': 0.7611, 'grad_norm': 0.15566707051829665, 'learning_rate': 0.0001614364273547854, 'epoch': 0.31}

 31%|███       | 967/3107 [5:01:38<10:59:55, 18.50s/it]


 31%|███       | 969/3107 [5:02:13<10:51:26, 18.28s/it]

 31%|███       | 970/3107 [5:02:37<11:51:38, 19.98s/it]

 31%|███▏      | 971/3107 [5:02:57<11:47:53, 19.88s/it]

 31%|███▏      | 972/3107 [5:03:16<11:34:05, 19.51s/it]
{'loss': 0.9512, 'grad_norm': 0.13903543872965363, 'learning_rate': 0.00016094160985626957, 'epoch': 0.31}


 31%|███▏      | 974/3107 [5:03:45<9:59:32, 16.86s/it]
{'loss': 0.7994, 'grad_norm': 0.14612670016982277, 'learning_rate': 0.0001607761396967384, 'epoch': 0.31}

 31%|███▏      | 975/3107 [5:04:04<10:24:38, 17.58s/it]


 31%|███▏      | 977/3107 [5:04:37<10:20:24, 17.48s/it]
{'loss': 0.7729, 'grad_norm': 0.14737234240502778, 'learning_rate': 0.0001605274391232471, 'epoch': 0.31}

 31%|███▏      | 978/3107 [5:05:00<11:14:28, 19.01s/it]

 32%|███▏      | 979/3107 [5:05:20<11:28:02, 19.40s/it]

 32%|███▏      | 980/3107 [5:05:41<11:38:27, 19.70s/it]


 32%|███▏      | 982/3107 [5:06:13<10:23:04, 17.59s/it]

 32%|███▏      | 983/3107 [5:06:28<9:53:03, 16.75s/it]

 32%|███▏      | 984/3107 [5:06:49<10:39:45, 18.08s/it]
{'loss': 0.835, 'grad_norm': 0.14508712624762046, 'learning_rate': 0.00015994483885587902, 'epoch': 0.32}


 32%|███▏      | 986/3107 [5:07:25<10:59:29, 18.66s/it]
{'loss': 0.9406, 'grad_norm': 0.1452627538804555, 'learning_rate': 0.00015977779374020176, 'epoch': 0.32}


 32%|███▏      | 988/3107 [5:07:51<9:10:37, 15.59s/it]
{'loss': 0.8937, 'grad_norm': 0.1517869185257727, 'learning_rate': 0.000159610488667715, 'epoch': 0.32}


 32%|███▏      | 990/3107 [5:08:20<8:54:48, 15.16s/it]

 32%|███▏      | 991/3107 [5:08:44<10:30:05, 17.87s/it]

 32%|███▏      | 992/3107 [5:09:00<10:10:55, 17.33s/it]
{'loss': 0.8526, 'grad_norm': 0.14971261438760108, 'learning_rate': 0.00015927510156369095, 'epoch': 0.32}

 32%|███▏      | 993/3107 [5:09:26<11:45:32, 20.02s/it]

 32%|███▏      | 994/3107 [5:09:40<10:45:08, 18.32s/it]

 32%|███▏      | 995/3107 [5:09:57<10:23:24, 17.71s/it]

 32%|███▏      | 996/3107 [5:10:19<11:07:48, 18.98s/it]


 32%|███▏      | 998/3107 [5:10:55<11:08:54, 19.03s/it]
{'loss': 0.8744, 'grad_norm': 0.13964096941868198, 'learning_rate': 0.00015877008945722215, 'epoch': 0.32}

 32%|███▏      | 999/3107 [5:11:17<11:32:11, 19.70s/it]

 32%|███▏      | 1000/3107 [5:11:34<11:11:56, 19.13s/it]

 32%|███▏      | 1001/3107 [5:11:49<10:22:51, 17.75s/it]


 32%|███▏      | 1003/3107 [5:12:22<10:00:34, 17.13s/it]
{'loss': 0.8425, 'grad_norm': 0.14383948008422018, 'learning_rate': 0.00015834748812345418, 'epoch': 0.32}

 32%|███▏      | 1004/3107 [5:12:42<10:35:18, 18.13s/it]

 32%|███▏      | 1005/3107 [5:13:00<10:32:31, 18.06s/it]

 32%|███▏      | 1006/3107 [5:13:16<10:11:42, 17.47s/it]

 32%|███▏      | 1007/3107 [5:13:41<11:22:06, 19.49s/it]


 32%|███▏      | 1009/3107 [5:14:09<9:51:51, 16.93s/it]
{'loss': 0.9802, 'grad_norm': 0.15839312243772452, 'learning_rate': 0.00015783827421202214, 'epoch': 0.32}

 33%|███▎      | 1010/3107 [5:14:23<9:11:58, 15.79s/it]

 33%|███▎      | 1011/3107 [5:14:39<9:14:30, 15.87s/it]

 33%|███▎      | 1012/3107 [5:14:55<9:23:33, 16.14s/it]


 33%|███▎      | 1014/3107 [5:15:38<10:59:58, 18.92s/it]
{'loss': 0.8465, 'grad_norm': 0.16259110010250793, 'learning_rate': 0.00015741219922599253, 'epoch': 0.33}

 33%|███▎      | 1015/3107 [5:16:01<11:38:37, 20.04s/it]


 33%|███▎      | 1017/3107 [5:16:54<13:28:29, 23.21s/it]
{'loss': 0.8035, 'grad_norm': 0.13945934763152132, 'learning_rate': 0.00015715580448436787, 'epoch': 0.33}

 33%|███▎      | 1018/3107 [5:17:07<11:41:11, 20.14s/it]

 33%|███▎      | 1019/3107 [5:17:27<11:37:23, 20.04s/it]

 33%|███▎      | 1020/3107 [5:17:55<13:05:54, 22.59s/it]


 33%|███▎      | 1022/3107 [5:18:32<11:51:50, 20.48s/it]
{'loss': 1.0424, 'grad_norm': 0.15113394796585464, 'learning_rate': 0.00015672723838433078, 'epoch': 0.33}


 33%|███▎      | 1024/3107 [5:18:56<9:17:57, 16.07s/it]
{'loss': 0.9917, 'grad_norm': 0.15805555511672983, 'learning_rate': 0.00015655537958252324, 'epoch': 0.33}

 33%|███▎      | 1025/3107 [5:19:09<8:46:31, 15.17s/it]


 33%|███▎      | 1027/3107 [5:19:50<10:23:01, 17.97s/it]
{'loss': 0.8486, 'grad_norm': 0.15261031370855904, 'learning_rate': 0.00015629713046971214, 'epoch': 0.33}

 33%|███▎      | 1028/3107 [5:20:09<10:30:17, 18.19s/it]

 33%|███▎      | 1029/3107 [5:20:23<9:48:20, 16.99s/it]

 33%|███▎      | 1030/3107 [5:20:43<10:16:09, 17.80s/it]

 33%|███▎      | 1031/3107 [5:20:59<10:00:09, 17.35s/it]


 33%|███▎      | 1033/3107 [5:21:28<9:07:08, 15.83s/it]

 33%|███▎      | 1034/3107 [5:21:44<9:11:28, 15.96s/it]
{'loss': 0.7712, 'grad_norm': 0.14286977405999124, 'learning_rate': 0.00015569241140661047, 'epoch': 0.33}

 33%|███▎      | 1035/3107 [5:22:03<9:41:47, 16.85s/it]

 33%|███▎      | 1036/3107 [5:22:15<8:51:01, 15.38s/it]

 33%|███▎      | 1037/3107 [5:22:35<9:38:15, 16.76s/it]

 33%|███▎      | 1038/3107 [5:22:55<10:14:27, 17.82s/it]

 33%|███▎      | 1039/3107 [5:23:13<10:12:41, 17.78s/it]

 33%|███▎      | 1040/3107 [5:23:30<9:58:55, 17.39s/it]

 34%|███▎      | 1041/3107 [5:23:45<9:41:56, 16.90s/it]


 34%|███▎      | 1043/3107 [5:24:20<9:55:40, 17.32s/it]

 34%|███▎      | 1044/3107 [5:24:40<10:25:16, 18.19s/it]

 34%|███▎      | 1045/3107 [5:24:56<10:03:07, 17.55s/it]
{'loss': 0.8257, 'grad_norm': 0.14242416001139557, 'learning_rate': 0.00015473615685120023, 'epoch': 0.34}


 34%|███▎      | 1047/3107 [5:25:41<11:41:07, 20.42s/it]
{'loss': 0.7642, 'grad_norm': 0.15026593226974494, 'learning_rate': 0.00015456151508917316, 'epoch': 0.34}


 34%|███▍      | 1049/3107 [5:26:10<10:03:15, 17.59s/it]
{'loss': 0.8708, 'grad_norm': 0.1434993028290373, 'learning_rate': 0.00015438663605446507, 'epoch': 0.34}


 34%|███▍      | 1051/3107 [5:26:44<10:08:00, 17.74s/it]
{'loss': 0.6998, 'grad_norm': 0.13430863988093475, 'learning_rate': 0.00015421152050757573, 'epoch': 0.34}


 34%|███▍      | 1053/3107 [5:27:24<10:37:41, 18.63s/it]
{'loss': 0.8096, 'grad_norm': 0.13381957884126955, 'learning_rate': 0.00015403616921003336, 'epoch': 0.34}

 34%|███▍      | 1054/3107 [5:27:46<11:04:07, 19.41s/it]

 34%|███▍      | 1055/3107 [5:28:08<11:36:51, 20.38s/it]

 34%|███▍      | 1056/3107 [5:28:27<11:22:54, 19.98s/it]


 34%|███▍      | 1058/3107 [5:29:05<10:50:03, 19.04s/it]

 34%|███▍      | 1059/3107 [5:29:25<10:58:23, 19.29s/it]

 34%|███▍      | 1060/3107 [5:29:42<10:42:01, 18.82s/it]

 34%|███▍      | 1061/3107 [5:29:59<10:13:37, 18.00s/it]

 34%|███▍      | 1062/3107 [5:30:13<9:36:57, 16.93s/it]

 34%|███▍      | 1063/3107 [5:30:29<9:28:15, 16.68s/it]
{'loss': 0.9192, 'grad_norm': 0.15849019586499447, 'learning_rate': 0.00015315590318759408, 'epoch': 0.34}


 34%|███▍      | 1065/3107 [5:31:12<10:43:59, 18.92s/it]
{'loss': 0.8854, 'grad_norm': 0.14317064449762706, 'learning_rate': 0.00015297915343540652, 'epoch': 0.34}

 34%|███▍      | 1066/3107 [5:31:34<11:08:54, 19.66s/it]


 34%|███▍      | 1068/3107 [5:32:03<9:34:45, 16.91s/it]
{'loss': 0.7579, 'grad_norm': 0.14477330185521312, 'learning_rate': 0.0001527135970636564, 'epoch': 0.34}

 34%|███▍      | 1069/3107 [5:32:18<9:14:07, 16.31s/it]


 34%|███▍      | 1071/3107 [5:32:59<10:39:59, 18.86s/it]

 35%|███▍      | 1072/3107 [5:33:11<9:26:40, 16.71s/it]

 35%|███▍      | 1073/3107 [5:33:25<9:05:19, 16.09s/it]

 35%|███▍      | 1074/3107 [5:33:37<8:17:47, 14.69s/it]

 35%|███▍      | 1075/3107 [5:33:51<8:15:07, 14.62s/it]

 35%|███▍      | 1076/3107 [5:34:03<7:47:08, 13.80s/it]

 35%|███▍      | 1077/3107 [5:34:19<8:12:52, 14.57s/it]

 35%|███▍      | 1078/3107 [5:34:36<8:28:50, 15.05s/it]

 35%|███▍      | 1079/3107 [5:35:05<10:53:09, 19.32s/it]

 35%|███▍      | 1080/3107 [5:35:26<11:06:19, 19.72s/it]
{'loss': 0.7688, 'grad_norm': 0.1454989760047429, 'learning_rate': 0.00015164623981458292, 'epoch': 0.35}

 35%|███▍      | 1081/3107 [5:35:43<10:40:11, 18.96s/it]

 35%|███▍      | 1082/3107 [5:35:57<9:48:15, 17.43s/it]


 35%|███▍      | 1084/3107 [5:36:23<8:37:28, 15.35s/it]

 35%|███▍      | 1085/3107 [5:36:51<10:51:49, 19.34s/it]
{'loss': 0.8478, 'grad_norm': 0.13243573260358776, 'learning_rate': 0.00015119911170264624, 'epoch': 0.35}

 35%|███▍      | 1086/3107 [5:37:25<13:10:51, 23.48s/it]


 35%|███▌      | 1088/3107 [5:38:01<11:43:48, 20.92s/it]

 35%|███▌      | 1089/3107 [5:38:23<11:54:30, 21.24s/it]

 35%|███▌      | 1090/3107 [5:38:43<11:44:09, 20.95s/it]

 35%|███▌      | 1091/3107 [5:39:07<12:10:19, 21.74s/it]
{'loss': 0.8274, 'grad_norm': 0.14046576825921928, 'learning_rate': 0.00015066072217701052, 'epoch': 0.35}


 35%|███▌      | 1093/3107 [5:39:44<11:00:44, 19.68s/it]
{'loss': 0.8748, 'grad_norm': 0.14574465503178366, 'learning_rate': 0.00015048081734179598, 'epoch': 0.35}
[2024-05-28 19:01:06,719] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 35%|███▌      | 1094/3107 [5:40:04<11:11:44, 20.02s/it]

 35%|███▌      | 1095/3107 [5:40:20<10:28:37, 18.75s/it]

 35%|███▌      | 1096/3107 [5:40:41<10:44:36, 19.23s/it]


 35%|███▌      | 1098/3107 [5:41:11<9:31:22, 17.06s/it]

 35%|███▌      | 1099/3107 [5:41:25<8:58:19, 16.09s/it]

 35%|███▌      | 1100/3107 [5:41:36<8:05:07, 14.50s/it]

 35%|███▌      | 1101/3107 [5:42:09<11:13:25, 20.14s/it]

 35%|███▌      | 1102/3107 [5:42:21<9:52:09, 17.72s/it]
{'loss': 0.8924, 'grad_norm': 0.15258273661499686, 'learning_rate': 0.000149668540255875, 'epoch': 0.35}


 36%|███▌      | 1104/3107 [5:43:08<11:50:42, 21.29s/it]

 36%|███▌      | 1105/3107 [5:43:32<12:13:46, 21.99s/it]
{'loss': 0.7186, 'grad_norm': 0.1436652281389152, 'learning_rate': 0.00014939680571522502, 'epoch': 0.36}


 36%|███▌      | 1107/3107 [5:44:00<9:58:44, 17.96s/it]
{'loss': 0.9423, 'grad_norm': 0.14664392556049285, 'learning_rate': 0.00014921538067457797, 'epoch': 0.36}

 36%|███▌      | 1108/3107 [5:44:33<12:29:17, 22.49s/it]

 36%|███▌      | 1109/3107 [5:44:51<11:43:58, 21.14s/it]


 36%|███▌      | 1111/3107 [5:45:36<12:03:53, 21.76s/it]
{'loss': 0.8818, 'grad_norm': 0.15921597864021453, 'learning_rate': 0.00014885188931164215, 'epoch': 0.36}

 36%|███▌      | 1112/3107 [5:45:53<11:12:47, 20.23s/it]

 36%|███▌      | 1113/3107 [5:46:07<10:16:50, 18.56s/it]


 36%|███▌      | 1115/3107 [5:46:51<11:10:07, 20.18s/it]

 36%|███▌      | 1116/3107 [5:47:16<11:50:40, 21.42s/it]
{'loss': 0.8272, 'grad_norm': 0.15567309472373758, 'learning_rate': 0.00014839633085906716, 'epoch': 0.36}

 36%|███▌      | 1117/3107 [5:47:33<11:08:04, 20.14s/it]

 36%|███▌      | 1118/3107 [5:47:48<10:22:53, 18.79s/it]

 36%|███▌      | 1119/3107 [5:48:03<9:42:49, 17.59s/it]

 36%|███▌      | 1120/3107 [5:48:27<10:40:56, 19.35s/it]

 36%|███▌      | 1121/3107 [5:48:47<10:47:39, 19.57s/it]


 36%|███▌      | 1123/3107 [5:49:22<10:15:47, 18.62s/it]
{'loss': 0.8441, 'grad_norm': 0.14723256836917106, 'learning_rate': 0.00014775634195870481, 'epoch': 0.36}

 36%|███▌      | 1124/3107 [5:49:39<10:04:18, 18.28s/it]

 36%|███▌      | 1125/3107 [5:49:55<9:35:48, 17.43s/it]


 36%|███▋      | 1127/3107 [5:50:36<10:40:58, 19.42s/it]

 36%|███▋      | 1128/3107 [5:50:56<10:45:42, 19.58s/it]
{'loss': 0.9126, 'grad_norm': 0.14587298716307642, 'learning_rate': 0.00014729764745117062, 'epoch': 0.36}

 36%|███▋      | 1129/3107 [5:51:13<10:20:14, 18.81s/it]


 36%|███▋      | 1131/3107 [5:51:42<9:03:17, 16.50s/it]

 36%|███▋      | 1132/3107 [5:51:59<9:07:01, 16.62s/it]

 36%|███▋      | 1133/3107 [5:52:20<9:57:20, 18.16s/it]

 36%|███▋      | 1134/3107 [5:52:44<10:56:20, 19.96s/it]
{'loss': 0.7777, 'grad_norm': 0.14738661799424996, 'learning_rate': 0.00014674551825057024, 'epoch': 0.36}


 37%|███▋      | 1136/3107 [5:53:22<10:32:52, 19.27s/it]
{'loss': 0.8674, 'grad_norm': 0.14191341841628, 'learning_rate': 0.00014656106754946022, 'epoch': 0.37}


 37%|███▋      | 1138/3107 [5:53:54<9:37:14, 17.59s/it]
{'loss': 0.8279, 'grad_norm': 0.13888969803384846, 'learning_rate': 0.00014637641436736506, 'epoch': 0.37}


 37%|███▋      | 1140/3107 [5:54:32<9:54:20, 18.13s/it]

 37%|███▋      | 1141/3107 [5:54:48<9:35:02, 17.55s/it]
{'loss': 0.8547, 'grad_norm': 0.15843720394024885, 'learning_rate': 0.00014609905669918792, 'epoch': 0.37}

 37%|███▋      | 1142/3107 [5:55:05<9:29:22, 17.39s/it]


 37%|███▋      | 1144/3107 [5:55:40<9:42:10, 17.79s/it]
{'loss': 0.8226, 'grad_norm': 0.14400339622901395, 'learning_rate': 0.00014582124796959765, 'epoch': 0.37}


 37%|███▋      | 1146/3107 [5:56:19<9:59:33, 18.34s/it]

 37%|███▋      | 1147/3107 [5:56:34<9:32:32, 17.53s/it]

 37%|███▋      | 1148/3107 [5:56:57<10:27:46, 19.23s/it]

 37%|███▋      | 1149/3107 [5:57:19<10:46:45, 19.82s/it]
{'loss': 0.9341, 'grad_norm': 0.14858591375144714, 'learning_rate': 0.00014535723844647503, 'epoch': 0.37}

 37%|███▋      | 1150/3107 [5:57:44<11:39:29, 21.45s/it]


 37%|███▋      | 1152/3107 [5:58:23<11:17:24, 20.79s/it]
{'loss': 0.8728, 'grad_norm': 0.1380608081579432, 'learning_rate': 0.00014507824018757906, 'epoch': 0.37}


 37%|███▋      | 1154/3107 [5:59:08<11:35:57, 21.38s/it]
{'loss': 0.8315, 'grad_norm': 0.14836768232266398, 'learning_rate': 0.00014489199613900385, 'epoch': 0.37}

 37%|███▋      | 1155/3107 [5:59:29<11:32:32, 21.29s/it]

 37%|███▋      | 1156/3107 [5:59:47<10:59:09, 20.27s/it]

 37%|███▋      | 1157/3107 [6:00:06<10:38:59, 19.66s/it]


 37%|███▋      | 1159/3107 [6:00:46<10:50:21, 20.03s/it]
{'loss': 0.8115, 'grad_norm': 0.1403532146353065, 'learning_rate': 0.0001444255336922095, 'epoch': 0.37}


 37%|███▋      | 1161/3107 [6:01:17<9:32:39, 17.66s/it]
{'loss': 0.8137, 'grad_norm': 0.1482071399292685, 'learning_rate': 0.0001442386099132891, 'epoch': 0.37}


 37%|███▋      | 1163/3107 [6:02:03<11:07:23, 20.60s/it]

 37%|███▋      | 1164/3107 [6:02:15<9:47:27, 18.14s/it]
{'loss': 0.9068, 'grad_norm': 0.14777626923114293, 'learning_rate': 0.00014395786378428033, 'epoch': 0.37}


 38%|███▊      | 1166/3107 [6:02:55<10:36:20, 19.67s/it]
[2024-05-28 19:23:57,526] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.7749, 'grad_norm': 0.14191316240814378, 'learning_rate': 0.00014377046057816145, 'epoch': 0.38}

 38%|███▊      | 1167/3107 [6:03:18<11:03:43, 20.53s/it]

 38%|███▊      | 1168/3107 [6:03:32<9:57:37, 18.49s/it]


 38%|███▊      | 1170/3107 [6:04:17<11:02:41, 20.53s/it]
{'loss': 0.9312, 'grad_norm': 0.14368000641210374, 'learning_rate': 0.00014339508394545401, 'epoch': 0.38}


 38%|███▊      | 1172/3107 [6:04:49<9:52:42, 18.38s/it]

 38%|███▊      | 1173/3107 [6:05:15<11:04:46, 20.62s/it]
[2024-05-28 19:26:16,919] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 38%|███▊      | 1174/3107 [6:05:39<11:37:55, 21.66s/it]
{'loss': 0.8035, 'grad_norm': 0.14343076705801044, 'learning_rate': 0.0001430189524615149, 'epoch': 0.38}

 38%|███▊      | 1175/3107 [6:06:00<11:34:15, 21.56s/it]

 38%|███▊      | 1176/3107 [6:06:16<10:36:27, 19.78s/it]

 38%|███▊      | 1177/3107 [6:06:37<10:46:35, 20.10s/it]

 38%|███▊      | 1178/3107 [6:06:53<10:07:02, 18.88s/it]

 38%|███▊      | 1179/3107 [6:07:14<10:29:53, 19.60s/it]


 38%|███▊      | 1181/3107 [6:08:00<11:23:26, 21.29s/it]
{'loss': 0.8453, 'grad_norm': 0.15744560204220578, 'learning_rate': 0.00014235892569056373, 'epoch': 0.38}

 38%|███▊      | 1182/3107 [6:08:24<11:53:28, 22.24s/it]


 38%|███▊      | 1184/3107 [6:08:59<10:29:22, 19.64s/it]

 38%|███▊      | 1185/3107 [6:09:19<10:29:37, 19.66s/it]

 38%|███▊      | 1186/3107 [6:09:36<10:01:03, 18.77s/it]
{'loss': 0.9072, 'grad_norm': 0.14036010793617376, 'learning_rate': 0.00014188609439480708, 'epoch': 0.38}


 38%|███▊      | 1188/3107 [6:10:09<9:20:46, 17.53s/it]

 38%|███▊      | 1189/3107 [6:10:30<9:48:24, 18.41s/it]

 38%|███▊      | 1190/3107 [6:10:45<9:21:27, 17.57s/it]
{'loss': 0.8296, 'grad_norm': 0.16698199004248754, 'learning_rate': 0.0001415070090630679, 'epoch': 0.38}

 38%|███▊      | 1191/3107 [6:11:17<11:35:45, 21.79s/it]


 38%|███▊      | 1193/3107 [6:12:00<11:31:48, 21.69s/it]
{'loss': 0.7335, 'grad_norm': 0.1496652329566097, 'learning_rate': 0.000141222220885134, 'epoch': 0.38}


 38%|███▊      | 1195/3107 [6:12:33<9:59:49, 18.82s/it]
{'loss': 0.9363, 'grad_norm': 0.15100021304994665, 'learning_rate': 0.0001410321378479712, 'epoch': 0.38}


 39%|███▊      | 1197/3107 [6:13:12<10:14:21, 19.30s/it]

 39%|███▊      | 1198/3107 [6:13:28<9:40:57, 18.26s/it]
{'loss': 0.9938, 'grad_norm': 0.15457014011974698, 'learning_rate': 0.0001407466789809601, 'epoch': 0.39}


 39%|███▊      | 1200/3107 [6:14:08<9:54:59, 18.72s/it]
 39%|███▊      | 1200/3107 [6:14:08<9:54:59, 18.72s/it]/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/peft/utils/save_and_load.py:154: UserWarning: Could not find a config file in /mnt/petrelfs/liaoyusheng/oss/download_models/Qwen1.5-7B-Chat - will assume that the vocabulary was not modified.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/nn/modules/module.py:1879: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
 39%|███▊      | 1201/3107 [6:14:56<14:35:00, 27.54s/it]
{'loss': 0.7588, 'grad_norm': 0.13355468215487087, 'learning_rate': 0.00014046082142347863, 'epoch': 0.39}


 39%|███▊      | 1203/3107 [6:15:30<11:41:06, 22.09s/it]

 39%|███▉      | 1204/3107 [6:15:50<11:25:36, 21.62s/it]

 39%|███▉      | 1205/3107 [6:16:08<10:45:53, 20.38s/it]

 39%|███▉      | 1206/3107 [6:16:23<10:02:20, 19.01s/it]

 39%|███▉      | 1207/3107 [6:16:48<10:51:59, 20.59s/it]
{'loss': 0.7084, 'grad_norm': 0.12675424232953578, 'learning_rate': 0.00013988792142900015, 'epoch': 0.39}

 39%|███▉      | 1208/3107 [6:17:07<10:40:30, 20.24s/it]

 39%|███▉      | 1209/3107 [6:17:23<9:56:54, 18.87s/it]

 39%|███▉      | 1210/3107 [6:17:32<8:29:44, 16.12s/it]

 39%|███▉      | 1211/3107 [6:17:50<8:47:05, 16.68s/it]


 39%|███▉      | 1213/3107 [6:18:16<7:45:39, 14.75s/it]
{'loss': 0.8454, 'grad_norm': 0.15236505663076538, 'learning_rate': 0.00013931346028689908, 'epoch': 0.39}


 39%|███▉      | 1215/3107 [6:18:50<8:13:25, 15.65s/it]
{'loss': 0.7332, 'grad_norm': 0.14698513980532404, 'learning_rate': 0.00013912163020212575, 'epoch': 0.39}


 39%|███▉      | 1217/3107 [6:19:24<8:38:50, 16.47s/it]
{'loss': 0.7768, 'grad_norm': 0.13563436144562022, 'learning_rate': 0.00013892962998838753, 'epoch': 0.39}


 39%|███▉      | 1219/3107 [6:20:02<9:35:58, 18.30s/it]
[2024-05-28 19:41:03,902] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 39%|███▉      | 1220/3107 [6:20:18<9:13:25, 17.60s/it]

 39%|███▉      | 1221/3107 [6:20:42<10:16:25, 19.61s/it]

 39%|███▉      | 1222/3107 [6:20:59<9:55:58, 18.97s/it]
{'loss': 0.8402, 'grad_norm': 0.14090064534627383, 'learning_rate': 0.00013844889062102333, 'epoch': 0.39}

 39%|███▉      | 1223/3107 [6:21:13<9:08:49, 17.48s/it]

 39%|███▉      | 1224/3107 [6:21:27<8:35:29, 16.43s/it]


 39%|███▉      | 1226/3107 [6:22:00<8:45:22, 16.76s/it]

 39%|███▉      | 1227/3107 [6:22:12<7:56:32, 15.21s/it]
{'loss': 0.8219, 'grad_norm': 0.1507784329162525, 'learning_rate': 0.00013796710623433696, 'epoch': 0.39}

 40%|███▉      | 1228/3107 [6:22:37<9:25:55, 18.07s/it]


 40%|███▉      | 1230/3107 [6:23:20<10:21:13, 19.86s/it]
{'loss': 0.8078, 'grad_norm': 0.15777511301096056, 'learning_rate': 0.00013767753943924564, 'epoch': 0.4}


 40%|███▉      | 1232/3107 [6:23:45<8:20:25, 16.01s/it]

 40%|███▉      | 1233/3107 [6:24:10<9:53:36, 19.01s/it]

 40%|███▉      | 1234/3107 [6:24:30<9:57:26, 19.14s/it]
{'loss': 0.9097, 'grad_norm': 0.14323171975024995, 'learning_rate': 0.00013729087739803846, 'epoch': 0.4}


 40%|███▉      | 1236/3107 [6:25:00<8:47:27, 16.91s/it]
{'loss': 0.8248, 'grad_norm': 0.14766872802030773, 'learning_rate': 0.0001370973027055827, 'epoch': 0.4}


 40%|███▉      | 1238/3107 [6:25:30<8:17:47, 15.98s/it]

 40%|███▉      | 1239/3107 [6:25:48<8:36:28, 16.59s/it]
{'loss': 0.8026, 'grad_norm': 0.14614386089995002, 'learning_rate': 0.0001368066384444028, 'epoch': 0.4}


 40%|███▉      | 1241/3107 [6:26:20<8:26:17, 16.28s/it]

 40%|███▉      | 1242/3107 [6:26:37<8:26:48, 16.30s/it]
{'loss': 0.8942, 'grad_norm': 0.1586933900413809, 'learning_rate': 0.00013651561404452294, 'epoch': 0.4}

 40%|████      | 1243/3107 [6:26:56<8:51:04, 17.09s/it]


 40%|████      | 1245/3107 [6:27:28<8:41:29, 16.80s/it]
{'loss': 0.7953, 'grad_norm': 0.13375434992581808, 'learning_rate': 0.00013622423235350428, 'epoch': 0.4}


 40%|████      | 1247/3107 [6:28:02<8:34:44, 16.60s/it]

 40%|████      | 1248/3107 [6:28:21<8:52:08, 17.17s/it]

 40%|████      | 1249/3107 [6:28:40<9:14:11, 17.90s/it]

 40%|████      | 1250/3107 [6:28:58<9:14:43, 17.92s/it]
{'loss': 0.8461, 'grad_norm': 0.14054155271336513, 'learning_rate': 0.00013573780996668008, 'epoch': 0.4}

 40%|████      | 1251/3107 [6:29:15<9:05:14, 17.63s/it]

 40%|████      | 1252/3107 [6:29:31<8:51:07, 17.18s/it]


 40%|████      | 1254/3107 [6:30:06<8:54:16, 17.30s/it]

 40%|████      | 1255/3107 [6:30:26<9:16:34, 18.03s/it]

 40%|████      | 1256/3107 [6:30:44<9:18:35, 18.11s/it]

 40%|████      | 1257/3107 [6:31:03<9:18:21, 18.11s/it]

 40%|████      | 1258/3107 [6:31:14<8:18:32, 16.18s/it]
{'loss': 0.8565, 'grad_norm': 0.1439879933042546, 'learning_rate': 0.00013495751928343386, 'epoch': 0.4}

 41%|████      | 1259/3107 [6:31:32<8:29:01, 16.53s/it]


 41%|████      | 1261/3107 [6:31:59<7:42:03, 15.02s/it]

 41%|████      | 1262/3107 [6:32:12<7:27:21, 14.55s/it]
{'loss': 0.781, 'grad_norm': 0.1515788325585731, 'learning_rate': 0.00013456645842436046, 'epoch': 0.41}

 41%|████      | 1263/3107 [6:32:32<8:15:07, 16.11s/it]

 41%|████      | 1264/3107 [6:32:59<9:57:13, 19.44s/it]

 41%|████      | 1265/3107 [6:33:20<10:10:21, 19.88s/it]

 41%|████      | 1266/3107 [6:33:38<9:46:00, 19.10s/it]

 41%|████      | 1267/3107 [6:33:52<8:59:21, 17.59s/it]

 41%|████      | 1268/3107 [6:34:18<10:19:06, 20.20s/it]

 41%|████      | 1269/3107 [6:34:32<9:19:04, 18.25s/it]

 41%|████      | 1270/3107 [6:34:48<9:01:53, 17.70s/it]

 41%|████      | 1271/3107 [6:35:08<9:20:24, 18.31s/it]

 41%|████      | 1272/3107 [6:35:26<9:15:42, 18.17s/it]

 41%|████      | 1273/3107 [6:35:40<8:39:46, 17.00s/it]

 41%|████      | 1274/3107 [6:35:58<8:52:49, 17.44s/it]


 41%|████      | 1276/3107 [6:36:35<9:06:16, 17.90s/it]

 41%|████      | 1277/3107 [6:36:55<9:22:51, 18.45s/it]

 41%|████      | 1278/3107 [6:37:13<9:20:45, 18.40s/it]
{'loss': 0.8315, 'grad_norm': 0.1427010374141166, 'learning_rate': 0.00013299627038308625, 'epoch': 0.41}

 41%|████      | 1279/3107 [6:37:32<9:31:16, 18.75s/it]

 41%|████      | 1280/3107 [6:37:56<10:14:46, 20.19s/it]

 41%|████      | 1281/3107 [6:38:22<11:10:49, 22.04s/it]

 41%|████▏     | 1282/3107 [6:38:35<9:40:35, 19.09s/it]


 41%|████▏     | 1284/3107 [6:39:13<9:51:34, 19.47s/it]
{'loss': 0.8084, 'grad_norm': 0.14462327202349515, 'learning_rate': 0.0001324050587574063, 'epoch': 0.41}

 41%|████▏     | 1285/3107 [6:39:28<9:08:10, 18.05s/it]


 41%|████▏     | 1287/3107 [6:40:15<10:14:09, 20.25s/it]
{'loss': 0.8145, 'grad_norm': 0.14385171226686083, 'learning_rate': 0.000132108975891168, 'epoch': 0.41}

 41%|████▏     | 1288/3107 [6:40:39<10:41:31, 21.16s/it]


 42%|████▏     | 1290/3107 [6:41:05<8:43:05, 17.27s/it]
{'loss': 0.9669, 'grad_norm': 0.14519512246169017, 'learning_rate': 0.00013181257885103818, 'epoch': 0.42}


 42%|████▏     | 1292/3107 [6:41:55<10:58:29, 21.77s/it]
{'loss': 0.7788, 'grad_norm': 0.1321381387448362, 'learning_rate': 0.00013161480771527157, 'epoch': 0.42}


 42%|████▏     | 1294/3107 [6:42:30<9:46:47, 19.42s/it]
{'loss': 0.7826, 'grad_norm': 0.16212772606707404, 'learning_rate': 0.00013141689909559943, 'epoch': 0.42}

 42%|████▏     | 1295/3107 [6:42:46<9:18:09, 18.48s/it]


 42%|████▏     | 1297/3107 [6:43:24<9:38:40, 19.18s/it]

 42%|████▏     | 1298/3107 [6:43:42<9:28:03, 18.84s/it]
{'loss': 0.9285, 'grad_norm': 0.134844307323853, 'learning_rate': 0.00013102067284772836, 'epoch': 0.42}

 42%|████▏     | 1299/3107 [6:43:55<8:33:12, 17.03s/it]


 42%|████▏     | 1301/3107 [6:44:33<9:08:16, 18.21s/it]
{'loss': 0.8874, 'grad_norm': 0.14881356999871004, 'learning_rate': 0.00013072314867196066, 'epoch': 0.42}


 42%|████▏     | 1303/3107 [6:45:12<9:16:52, 18.52s/it]
{'loss': 0.7634, 'grad_norm': 0.14707745358404734, 'learning_rate': 0.00013052463203378802, 'epoch': 0.42}

 42%|████▏     | 1304/3107 [6:45:33<9:35:44, 19.16s/it]


 42%|████▏     | 1306/3107 [6:46:12<9:38:53, 19.29s/it]
{'loss': 0.8608, 'grad_norm': 0.15470458859370426, 'learning_rate': 0.0001302266084532695, 'epoch': 0.42}

 42%|████▏     | 1307/3107 [6:46:35<10:14:59, 20.50s/it]

 42%|████▏     | 1308/3107 [6:47:01<11:00:11, 22.02s/it]
[2024-05-28 20:08:20,731] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 42%|████▏     | 1310/3107 [6:47:34<9:35:01, 19.20s/it]

 42%|████▏     | 1311/3107 [6:48:00<10:36:30, 21.26s/it]

 42%|████▏     | 1312/3107 [6:48:21<10:37:53, 21.32s/it]

 42%|████▏     | 1313/3107 [6:48:38<9:55:40, 19.92s/it]
{'loss': 0.9471, 'grad_norm': 0.15503551520827524, 'learning_rate': 0.00012953007498333808, 'epoch': 0.42}


 42%|████▏     | 1315/3107 [6:49:02<7:54:42, 15.89s/it]
{'loss': 0.9809, 'grad_norm': 0.16378814418538898, 'learning_rate': 0.0001293307748564044, 'epoch': 0.42}


 42%|████▏     | 1317/3107 [6:49:42<9:03:33, 18.22s/it]
{'loss': 0.8833, 'grad_norm': 0.13773773692230387, 'learning_rate': 0.00012913134717818157, 'epoch': 0.42}

 42%|████▏     | 1318/3107 [6:50:02<9:12:38, 18.53s/it]

 42%|████▏     | 1319/3107 [6:50:17<8:40:31, 17.47s/it]

 42%|████▏     | 1320/3107 [6:50:29<7:55:32, 15.97s/it]


 43%|████▎     | 1322/3107 [6:51:04<8:05:20, 16.31s/it]
{'loss': 0.9377, 'grad_norm': 0.16540178735137445, 'learning_rate': 0.0001286322256384496, 'epoch': 0.43}

 43%|████▎     | 1323/3107 [6:51:21<8:15:39, 16.67s/it]

 43%|████▎     | 1324/3107 [6:51:43<9:03:02, 18.27s/it]

 43%|████▎     | 1325/3107 [6:51:58<8:27:10, 17.08s/it]

 43%|████▎     | 1326/3107 [6:52:15<8:31:32, 17.23s/it]

 43%|████▎     | 1327/3107 [6:52:28<7:48:37, 15.80s/it]

 43%|████▎     | 1328/3107 [6:52:45<8:02:54, 16.29s/it]

 43%|████▎     | 1329/3107 [6:53:02<8:03:02, 16.30s/it]

 43%|████▎     | 1330/3107 [6:53:23<8:50:34, 17.91s/it]

 43%|████▎     | 1331/3107 [6:53:37<8:14:39, 16.71s/it]


 43%|████▎     | 1333/3107 [6:54:18<9:13:25, 18.72s/it]
{'loss': 0.8366, 'grad_norm': 0.14219931986793566, 'learning_rate': 0.0001275314380913159, 'epoch': 0.43}

 43%|████▎     | 1334/3107 [6:54:43<10:05:44, 20.50s/it]

 43%|████▎     | 1335/3107 [6:55:05<10:23:31, 21.11s/it]

 43%|████▎     | 1336/3107 [6:55:22<9:39:49, 19.64s/it]


 43%|████▎     | 1338/3107 [6:55:50<8:28:16, 17.24s/it]
{'loss': 0.8563, 'grad_norm': 0.14549434072618989, 'learning_rate': 0.00012702987414187867, 'epoch': 0.43}


 43%|████▎     | 1340/3107 [6:56:29<8:59:40, 18.32s/it]
{'loss': 0.7517, 'grad_norm': 0.14946463362811682, 'learning_rate': 0.00012682904209410702, 'epoch': 0.43}

 43%|████▎     | 1341/3107 [6:56:50<9:28:28, 19.31s/it]

 43%|████▎     | 1342/3107 [6:57:13<9:58:25, 20.34s/it]

 43%|████▎     | 1343/3107 [6:57:34<10:04:32, 20.56s/it]


 43%|████▎     | 1345/3107 [6:58:07<8:52:23, 18.13s/it]
{'loss': 0.7255, 'grad_norm': 0.14714258013852968, 'learning_rate': 0.0001263264534465929, 'epoch': 0.43}


 43%|████▎     | 1347/3107 [6:58:41<8:47:20, 17.98s/it]
{'loss': 0.7553, 'grad_norm': 0.14561965749686498, 'learning_rate': 0.00012612521687125085, 'epoch': 0.43}


 43%|████▎     | 1349/3107 [6:59:18<8:59:41, 18.42s/it]
{'loss': 0.7873, 'grad_norm': 0.14291727323557485, 'learning_rate': 0.00012592386668468968, 'epoch': 0.43}

 43%|████▎     | 1350/3107 [6:59:33<8:24:50, 17.24s/it]

 43%|████▎     | 1351/3107 [6:59:49<8:17:03, 16.98s/it]

 44%|████▎     | 1352/3107 [7:00:14<9:26:53, 19.38s/it]

 44%|████▎     | 1353/3107 [7:00:30<8:54:18, 18.28s/it]

 44%|████▎     | 1354/3107 [7:00:48<8:49:36, 18.13s/it]


 44%|████▎     | 1356/3107 [7:01:47<11:26:01, 23.51s/it]
{'loss': 0.9568, 'grad_norm': 0.15252819544877927, 'learning_rate': 0.00012521825898948423, 'epoch': 0.44}

 44%|████▎     | 1357/3107 [7:02:10<11:22:39, 23.41s/it]

 44%|████▎     | 1358/3107 [7:02:29<10:41:56, 22.02s/it]

 44%|████▎     | 1359/3107 [7:02:41<9:19:07, 19.19s/it]

 44%|████▍     | 1360/3107 [7:03:05<9:55:04, 20.44s/it]

 44%|████▍     | 1361/3107 [7:03:21<9:21:22, 19.29s/it]

 44%|████▍     | 1362/3107 [7:03:44<9:50:26, 20.30s/it]

 44%|████▍     | 1363/3107 [7:04:04<9:50:15, 20.31s/it]

 44%|████▍     | 1364/3107 [7:04:16<8:40:36, 17.92s/it]


 44%|████▍     | 1366/3107 [7:04:47<8:03:59, 16.68s/it]
{'loss': 0.8556, 'grad_norm': 0.1420205532261219, 'learning_rate': 0.00012420792690992133, 'epoch': 0.44}
[2024-05-28 20:26:16,608] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 44%|████▍     | 1368/3107 [7:05:39<10:22:01, 21.46s/it]
{'loss': 0.8639, 'grad_norm': 0.13966021850677277, 'learning_rate': 0.00012400554115636126, 'epoch': 0.44}

 44%|████▍     | 1369/3107 [7:05:58<9:55:31, 20.56s/it]
[2024-05-28 20:27:22,987] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 44%|████▍     | 1370/3107 [7:06:21<10:15:43, 21.27s/it]

 44%|████▍     | 1371/3107 [7:06:36<9:26:54, 19.59s/it]

 44%|████▍     | 1372/3107 [7:06:54<9:06:47, 18.91s/it]


 44%|████▍     | 1374/3107 [7:07:41<10:28:33, 21.76s/it]
{'loss': 0.7657, 'grad_norm': 0.13769695742206525, 'learning_rate': 0.00012339776105834744, 'epoch': 0.44}

 44%|████▍     | 1375/3107 [7:08:08<11:09:27, 23.19s/it]

 44%|████▍     | 1376/3107 [7:08:26<10:27:42, 21.76s/it]


 44%|████▍     | 1378/3107 [7:08:57<8:52:02, 18.46s/it]
{'loss': 0.821, 'grad_norm': 0.15862687737929204, 'learning_rate': 0.00012299206410655765, 'epoch': 0.44}


 44%|████▍     | 1380/3107 [7:09:31<8:28:57, 17.68s/it]
{'loss': 0.798, 'grad_norm': 0.1390514326147386, 'learning_rate': 0.00012278906521045888, 'epoch': 0.44}
[2024-05-28 20:30:56,640] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 44%|████▍     | 1381/3107 [7:09:54<9:14:38, 19.28s/it]

 44%|████▍     | 1382/3107 [7:10:08<8:28:08, 17.67s/it]

 45%|████▍     | 1383/3107 [7:10:22<7:57:05, 16.60s/it]


 45%|████▍     | 1385/3107 [7:11:00<8:22:52, 17.52s/it]
{'loss': 0.8605, 'grad_norm': 0.1457014853214319, 'learning_rate': 0.00012228113632571508, 'epoch': 0.45}

 45%|████▍     | 1386/3107 [7:11:21<8:53:25, 18.60s/it]

 45%|████▍     | 1387/3107 [7:11:35<8:17:22, 17.35s/it]
[2024-05-28 20:33:01,036] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 45%|████▍     | 1388/3107 [7:11:59<9:10:48, 19.23s/it]

 45%|████▍     | 1389/3107 [7:12:15<8:41:26, 18.21s/it]

 45%|████▍     | 1390/3107 [7:12:32<8:37:59, 18.10s/it]

 45%|████▍     | 1391/3107 [7:12:45<7:48:33, 16.38s/it]


 45%|████▍     | 1393/3107 [7:13:21<8:14:43, 17.32s/it]
{'loss': 0.891, 'grad_norm': 0.15203074375803577, 'learning_rate': 0.0001214671962345431, 'epoch': 0.45}

 45%|████▍     | 1394/3107 [7:13:36<7:55:19, 16.65s/it]

 45%|████▍     | 1395/3107 [7:13:48<7:12:31, 15.16s/it]

 45%|████▍     | 1396/3107 [7:14:12<8:28:31, 17.83s/it]


 45%|████▍     | 1398/3107 [7:14:46<8:03:55, 16.99s/it]
{'loss': 0.9224, 'grad_norm': 0.15861918812215772, 'learning_rate': 0.00012095772157469476, 'epoch': 0.45}

 45%|████▌     | 1399/3107 [7:15:13<9:32:02, 20.10s/it]

 45%|████▌     | 1400/3107 [7:15:28<8:49:15, 18.60s/it]


 45%|████▌     | 1402/3107 [7:16:00<8:04:10, 17.04s/it]

 45%|████▌     | 1403/3107 [7:16:16<7:55:21, 16.74s/it]
{'loss': 0.8809, 'grad_norm': 0.14951814710776956, 'learning_rate': 0.00012044767729570679, 'epoch': 0.45}


 45%|████▌     | 1405/3107 [7:17:02<9:23:30, 19.87s/it]
{'loss': 0.6882, 'grad_norm': 0.13374118580791566, 'learning_rate': 0.00012024350319548976, 'epoch': 0.45}

 45%|████▌     | 1406/3107 [7:17:20<9:14:07, 19.55s/it]

 45%|████▌     | 1407/3107 [7:17:34<8:24:49, 17.82s/it]


 45%|████▌     | 1409/3107 [7:18:08<8:19:41, 17.66s/it]
{'loss': 0.6995, 'grad_norm': 0.13646633288508947, 'learning_rate': 0.0001198348917834315, 'epoch': 0.45}

 45%|████▌     | 1410/3107 [7:18:21<7:38:32, 16.21s/it]

 45%|████▌     | 1411/3107 [7:18:35<7:22:52, 15.67s/it]


 45%|████▌     | 1413/3107 [7:19:16<8:16:21, 17.58s/it]
{'loss': 0.8362, 'grad_norm': 0.15482258174738495, 'learning_rate': 0.00011942593534628907, 'epoch': 0.45}

 46%|████▌     | 1414/3107 [7:19:39<9:06:41, 19.38s/it]


 46%|████▌     | 1416/3107 [7:20:08<7:47:12, 16.58s/it]

 46%|████▌     | 1417/3107 [7:20:36<9:26:54, 20.13s/it]
[2024-05-28 20:41:38,491] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.7115, 'grad_norm': 0.12908623000192396, 'learning_rate': 0.00011901664099780072, 'epoch': 0.46}

 46%|████▌     | 1418/3107 [7:20:46<8:02:24, 17.14s/it]


 46%|████▌     | 1420/3107 [7:21:20<7:53:03, 16.82s/it]

 46%|████▌     | 1421/3107 [7:21:36<7:46:57, 16.62s/it]
{'loss': 0.8794, 'grad_norm': 0.14668878012959202, 'learning_rate': 0.00011860701585758271, 'epoch': 0.46}

 46%|████▌     | 1422/3107 [7:21:51<7:29:18, 16.00s/it]

 46%|████▌     | 1423/3107 [7:22:06<7:19:11, 15.65s/it]


 46%|████▌     | 1425/3107 [7:22:40<7:46:13, 16.63s/it]
{'loss': 0.7861, 'grad_norm': 0.17770945029366234, 'learning_rate': 0.00011819706705100529, 'epoch': 0.46}

 46%|████▌     | 1426/3107 [7:23:01<8:22:53, 17.95s/it]

 46%|████▌     | 1427/3107 [7:23:16<7:53:10, 16.90s/it]


 46%|████▌     | 1429/3107 [7:23:46<7:29:50, 16.08s/it]

 46%|████▌     | 1430/3107 [7:24:16<9:25:16, 20.22s/it]
{'loss': 0.8081, 'grad_norm': 0.13617300973124333, 'learning_rate': 0.00011768418675112507, 'epoch': 0.46}

 46%|████▌     | 1431/3107 [7:24:31<8:44:38, 18.78s/it]

 46%|████▌     | 1432/3107 [7:24:51<8:52:44, 19.08s/it]


 46%|████▌     | 1434/3107 [7:25:30<8:59:28, 19.35s/it]

 46%|████▌     | 1435/3107 [7:25:42<7:57:59, 17.15s/it]
{'loss': 0.6865, 'grad_norm': 0.14216674234772797, 'learning_rate': 0.00011717082580494909, 'epoch': 0.46}

 46%|████▌     | 1436/3107 [7:26:02<8:15:13, 17.78s/it]

 46%|████▋     | 1437/3107 [7:26:19<8:10:26, 17.62s/it]

 46%|████▋     | 1438/3107 [7:26:42<8:53:25, 19.18s/it]


 46%|████▋     | 1440/3107 [7:27:13<7:57:51, 17.20s/it]
{'loss': 0.8449, 'grad_norm': 0.155214994261657, 'learning_rate': 0.00011665699816534057, 'epoch': 0.46}

 46%|████▋     | 1441/3107 [7:27:33<8:25:47, 18.22s/it]


 46%|████▋     | 1443/3107 [7:28:03<7:37:16, 16.49s/it]

 46%|████▋     | 1444/3107 [7:28:23<8:04:20, 17.47s/it]

 47%|████▋     | 1445/3107 [7:28:41<8:10:08, 17.69s/it]

 47%|████▋     | 1446/3107 [7:29:05<9:02:24, 19.59s/it]
{'loss': 0.7093, 'grad_norm': 0.1519004291198931, 'learning_rate': 0.00011603980862684081, 'epoch': 0.47}

 47%|████▋     | 1447/3107 [7:29:26<9:12:08, 19.96s/it]

 47%|████▋     | 1448/3107 [7:29:52<10:03:34, 21.83s/it]

 47%|████▋     | 1449/3107 [7:30:08<9:18:29, 20.21s/it]

 47%|████▋     | 1450/3107 [7:30:33<10:00:33, 21.75s/it]

 47%|████▋     | 1451/3107 [7:30:59<10:33:48, 22.96s/it]

 47%|████▋     | 1452/3107 [7:31:13<9:19:37, 20.29s/it]


 47%|████▋     | 1454/3107 [7:31:45<8:09:51, 17.78s/it]
{'loss': 0.7493, 'grad_norm': 0.15288909441235615, 'learning_rate': 0.00011521591688701605, 'epoch': 0.47}

 47%|████▋     | 1455/3107 [7:32:04<8:17:32, 18.07s/it]

 47%|████▋     | 1456/3107 [7:32:23<8:31:14, 18.58s/it]

 47%|████▋     | 1457/3107 [7:32:38<7:57:13, 17.35s/it]

 47%|████▋     | 1458/3107 [7:32:52<7:28:37, 16.32s/it]

 47%|████▋     | 1459/3107 [7:33:09<7:40:02, 16.75s/it]

 47%|████▋     | 1460/3107 [7:33:36<9:01:29, 19.73s/it]

 47%|████▋     | 1461/3107 [7:33:49<8:07:23, 17.77s/it]

 47%|████▋     | 1462/3107 [7:34:10<8:34:22, 18.76s/it]

 47%|████▋     | 1463/3107 [7:34:28<8:24:16, 18.40s/it]


 47%|████▋     | 1465/3107 [7:35:07<8:39:55, 19.00s/it]
{'loss': 0.9054, 'grad_norm': 0.1602845505751132, 'learning_rate': 0.0001140813487826651, 'epoch': 0.47}

 47%|████▋     | 1466/3107 [7:35:30<9:11:56, 20.18s/it]


 47%|████▋     | 1468/3107 [7:36:07<8:44:47, 19.21s/it]
{'loss': 0.8104, 'grad_norm': 0.13348743380142788, 'learning_rate': 0.00011377159334771752, 'epoch': 0.47}

 47%|████▋     | 1469/3107 [7:36:21<7:57:31, 17.49s/it]

 47%|████▋     | 1470/3107 [7:36:36<7:36:47, 16.74s/it]

 47%|████▋     | 1471/3107 [7:36:54<7:52:10, 17.32s/it]

 47%|████▋     | 1472/3107 [7:37:10<7:41:22, 16.93s/it]

 47%|████▋     | 1473/3107 [7:37:27<7:36:32, 16.76s/it]


 47%|████▋     | 1475/3107 [7:37:55<6:58:16, 15.38s/it]
{'loss': 0.8184, 'grad_norm': 0.1455314812127357, 'learning_rate': 0.00011304831188048581, 'epoch': 0.47}

 48%|████▊     | 1476/3107 [7:38:10<6:49:24, 15.06s/it]

 48%|████▊     | 1477/3107 [7:38:36<8:20:49, 18.43s/it]

 48%|████▊     | 1478/3107 [7:38:54<8:18:00, 18.34s/it]

 48%|████▊     | 1479/3107 [7:39:09<7:47:41, 17.24s/it]

 48%|████▊     | 1480/3107 [7:39:24<7:30:13, 16.60s/it]

 48%|████▊     | 1481/3107 [7:39:42<7:45:36, 17.18s/it]

 48%|████▊     | 1482/3107 [7:40:01<7:56:02, 17.58s/it]

 48%|████▊     | 1483/3107 [7:40:21<8:13:21, 18.23s/it]

 48%|████▊     | 1484/3107 [7:40:42<8:38:55, 19.18s/it]


 48%|████▊     | 1486/3107 [7:41:23<8:51:42, 19.68s/it]
{'loss': 0.8618, 'grad_norm': 0.14776225520980507, 'learning_rate': 0.00011191033716412212, 'epoch': 0.48}

 48%|████▊     | 1487/3107 [7:41:42<8:39:29, 19.24s/it]

 48%|████▊     | 1488/3107 [7:41:57<8:05:55, 18.01s/it]


 48%|████▊     | 1490/3107 [7:42:31<8:08:58, 18.14s/it]
{'loss': 0.8857, 'grad_norm': 0.14906151830824885, 'learning_rate': 0.00011149613184067171, 'epoch': 0.48}

 48%|████▊     | 1491/3107 [7:42:53<8:34:51, 19.12s/it]


 48%|████▊     | 1493/3107 [7:43:29<8:24:39, 18.76s/it]
{'loss': 0.8995, 'grad_norm': 0.1488094877947343, 'learning_rate': 0.00011118534622127967, 'epoch': 0.48}

 48%|████▊     | 1494/3107 [7:43:47<8:14:44, 18.40s/it]

 48%|████▊     | 1495/3107 [7:44:02<7:49:43, 17.48s/it]


 48%|████▊     | 1497/3107 [7:44:38<7:55:36, 17.72s/it]
{'loss': 0.8247, 'grad_norm': 0.1536919194496838, 'learning_rate': 0.00011077079567451111, 'epoch': 0.48}

 48%|████▊     | 1498/3107 [7:45:04<9:06:33, 20.38s/it]

 48%|████▊     | 1499/3107 [7:45:20<8:27:07, 18.92s/it]

 48%|████▊     | 1500/3107 [7:45:37<8:11:38, 18.36s/it]/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/peft/utils/save_and_load.py:154: UserWarning: Could not find a config file in /mnt/petrelfs/liaoyusheng/oss/download_models/Qwen1.5-7B-Chat - will assume that the vocabulary was not modified.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/nn/modules/module.py:1879: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
{'loss': 0.9224, 'grad_norm': 0.1497529803542683, 'learning_rate': 0.00011035605777130397, 'epoch': 0.48}

 48%|████▊     | 1502/3107 [7:46:40<10:27:37, 23.46s/it]
{'loss': 0.8471, 'grad_norm': 0.14257410377537474, 'learning_rate': 0.00011025234486641533, 'epoch': 0.48}

 48%|████▊     | 1503/3107 [7:46:55<9:22:09, 21.03s/it]


 48%|████▊     | 1505/3107 [7:47:32<8:43:46, 19.62s/it]
{'loss': 0.8425, 'grad_norm': 0.15171435807093184, 'learning_rate': 0.00010994113972596429, 'epoch': 0.48}

 48%|████▊     | 1506/3107 [7:47:47<8:10:41, 18.39s/it]

 49%|████▊     | 1507/3107 [7:48:05<8:09:01, 18.34s/it]

 49%|████▊     | 1508/3107 [7:48:21<7:47:51, 17.56s/it]

 49%|████▊     | 1509/3107 [7:48:34<7:10:48, 16.18s/it]


 49%|████▊     | 1511/3107 [7:49:04<6:48:26, 15.36s/it]
{'loss': 0.7811, 'grad_norm': 0.1540219970635689, 'learning_rate': 0.00010931844068043138, 'epoch': 0.49}

 49%|████▊     | 1512/3107 [7:49:19<6:44:20, 15.21s/it]

 49%|████▊     | 1513/3107 [7:49:39<7:22:20, 16.65s/it]


 49%|████▉     | 1515/3107 [7:50:24<8:26:32, 19.09s/it]
{'loss': 0.9914, 'grad_norm': 0.1445205124789579, 'learning_rate': 0.00010890310386260429, 'epoch': 0.49}


 49%|████▉     | 1517/3107 [7:50:54<7:36:35, 17.23s/it]
{'loss': 0.8081, 'grad_norm': 0.15160540944026993, 'learning_rate': 0.00010869537692646055, 'epoch': 0.49}

 49%|████▉     | 1518/3107 [7:51:09<7:21:51, 16.68s/it]

 49%|████▉     | 1519/3107 [7:51:29<7:43:31, 17.51s/it]

 49%|████▉     | 1520/3107 [7:51:51<8:16:25, 18.77s/it]

 49%|████▉     | 1521/3107 [7:52:09<8:10:33, 18.56s/it]


 49%|████▉     | 1523/3107 [7:52:44<8:01:41, 18.25s/it]

 49%|████▉     | 1524/3107 [7:53:10<9:02:18, 20.56s/it]

 49%|████▉     | 1525/3107 [7:53:34<9:27:26, 21.52s/it]

 49%|████▉     | 1526/3107 [7:53:54<9:14:57, 21.06s/it]
{'loss': 0.8616, 'grad_norm': 0.1474215049171988, 'learning_rate': 0.00010776015081454903, 'epoch': 0.49}

 49%|████▉     | 1527/3107 [7:54:10<8:33:21, 19.49s/it]

 49%|████▉     | 1528/3107 [7:54:25<7:55:49, 18.08s/it]

 49%|████▉     | 1529/3107 [7:54:51<8:58:01, 20.46s/it]

 49%|████▉     | 1530/3107 [7:55:03<7:56:54, 18.14s/it]

 49%|████▉     | 1531/3107 [7:55:19<7:39:05, 17.48s/it]


 49%|████▉     | 1533/3107 [7:55:54<7:44:50, 17.72s/it]

 49%|████▉     | 1534/3107 [7:56:10<7:30:59, 17.20s/it]
{'loss': 0.8464, 'grad_norm': 0.15026113926368612, 'learning_rate': 0.00010692826246285815, 'epoch': 0.49}

 49%|████▉     | 1535/3107 [7:56:25<7:07:21, 16.31s/it]

 49%|████▉     | 1536/3107 [7:56:52<8:30:59, 19.52s/it]

 49%|████▉     | 1537/3107 [7:57:10<8:20:25, 19.12s/it]


 50%|████▉     | 1539/3107 [7:57:40<7:18:28, 16.78s/it]
{'loss': 0.8695, 'grad_norm': 0.15224323071379603, 'learning_rate': 0.00010640808377013509, 'epoch': 0.5}


 50%|████▉     | 1541/3107 [7:58:32<9:25:04, 21.65s/it]
{'loss': 0.8731, 'grad_norm': 0.16049073557702606, 'learning_rate': 0.00010619996273406923, 'epoch': 0.5}

 50%|████▉     | 1542/3107 [7:58:46<8:23:12, 19.29s/it]

 50%|████▉     | 1543/3107 [7:58:59<7:35:07, 17.46s/it]

 50%|████▉     | 1544/3107 [7:59:25<8:38:35, 19.91s/it]


 50%|████▉     | 1546/3107 [8:00:06<8:49:35, 20.36s/it]
{'loss': 0.7587, 'grad_norm': 0.13716694168802335, 'learning_rate': 0.00010567954416572465, 'epoch': 0.5}


 50%|████▉     | 1548/3107 [8:00:45<8:40:44, 20.04s/it]
{'loss': 0.8206, 'grad_norm': 0.14714337789773704, 'learning_rate': 0.00010547133272342671, 'epoch': 0.5}

 50%|████▉     | 1549/3107 [8:01:13<9:46:34, 22.59s/it]

 50%|████▉     | 1550/3107 [8:01:25<8:23:03, 19.39s/it]

 50%|████▉     | 1551/3107 [8:01:42<8:03:19, 18.64s/it]


 50%|████▉     | 1553/3107 [8:02:25<8:50:32, 20.48s/it]

 50%|█████     | 1554/3107 [8:02:44<8:44:29, 20.26s/it]

 50%|█████     | 1555/3107 [8:02:57<7:40:59, 17.82s/it]
{'loss': 0.9065, 'grad_norm': 0.1591984895386982, 'learning_rate': 0.0001047424112462076, 'epoch': 0.5}


 50%|█████     | 1557/3107 [8:03:29<7:11:14, 16.69s/it]

 50%|█████     | 1558/3107 [8:03:47<7:20:01, 17.04s/it]

 50%|█████     | 1559/3107 [8:04:03<7:11:06, 16.71s/it]
{'loss': 0.923, 'grad_norm': 0.14496292142028638, 'learning_rate': 0.00010432576876830576, 'epoch': 0.5}

 50%|█████     | 1560/3107 [8:04:22<7:34:01, 17.61s/it]

 50%|█████     | 1561/3107 [8:04:42<7:51:18, 18.29s/it]


 50%|█████     | 1563/3107 [8:05:25<8:34:51, 20.01s/it]
{'loss': 0.9111, 'grad_norm': 0.13485692441210587, 'learning_rate': 0.00010390905104427953, 'epoch': 0.5}

 50%|█████     | 1564/3107 [8:05:48<8:59:38, 20.98s/it]

 50%|█████     | 1565/3107 [8:06:07<8:44:54, 20.42s/it]

 50%|█████     | 1566/3107 [8:06:25<8:25:39, 19.69s/it]


 50%|█████     | 1568/3107 [8:07:03<8:10:26, 19.12s/it]
{'loss': 0.7348, 'grad_norm': 0.15005147369083977, 'learning_rate': 0.00010338805911750842, 'epoch': 0.5}

 50%|█████     | 1569/3107 [8:07:19<7:47:39, 18.24s/it]


 51%|█████     | 1571/3107 [8:07:57<7:51:51, 18.43s/it]
{'loss': 0.877, 'grad_norm': 0.14295671332985627, 'learning_rate': 0.00010307541885401591, 'epoch': 0.51}

 51%|█████     | 1572/3107 [8:08:13<7:28:11, 17.52s/it]


 51%|█████     | 1574/3107 [8:08:49<7:23:47, 17.37s/it]
{'loss': 0.8806, 'grad_norm': 0.14284703383944605, 'learning_rate': 0.0001027627484987412, 'epoch': 0.51}

 51%|█████     | 1575/3107 [8:09:07<7:31:07, 17.67s/it]

 51%|█████     | 1576/3107 [8:09:22<7:07:41, 16.76s/it]

 51%|█████     | 1577/3107 [8:09:35<6:41:17, 15.74s/it]

 51%|█████     | 1578/3107 [8:09:58<7:35:35, 17.88s/it]

 51%|█████     | 1579/3107 [8:10:15<7:29:30, 17.65s/it]


 51%|█████     | 1581/3107 [8:10:45<6:59:26, 16.49s/it]

 51%|█████     | 1582/3107 [8:10:59<6:42:54, 15.85s/it]

 51%|█████     | 1583/3107 [8:11:21<7:28:15, 17.65s/it]
{'loss': 0.7872, 'grad_norm': 0.13390228779750538, 'learning_rate': 0.00010182458747709949, 'epoch': 0.51}


 51%|█████     | 1585/3107 [8:11:51<6:52:25, 16.26s/it]
{'loss': 0.8269, 'grad_norm': 0.14205949474296437, 'learning_rate': 0.00010161608252096938, 'epoch': 0.51}


 51%|█████     | 1587/3107 [8:12:17<6:12:20, 14.70s/it]

 51%|█████     | 1588/3107 [8:12:39<7:07:45, 16.90s/it]
{'loss': 0.8868, 'grad_norm': 0.14512717197384054, 'learning_rate': 0.0001013033121928451, 'epoch': 0.51}

 51%|█████     | 1589/3107 [8:12:56<7:09:13, 16.97s/it]


 51%|█████     | 1591/3107 [8:13:35<7:41:41, 18.27s/it]
{'loss': 0.7782, 'grad_norm': 0.16215202102962856, 'learning_rate': 0.00010099052911231586, 'epoch': 0.51}

 51%|█████     | 1592/3107 [8:13:54<7:45:55, 18.45s/it]

 51%|█████▏    | 1593/3107 [8:14:11<7:31:17, 17.88s/it]

 51%|█████▏    | 1594/3107 [8:14:31<7:44:40, 18.43s/it]


 51%|█████▏    | 1596/3107 [8:15:07<7:47:13, 18.55s/it]
{'loss': 0.8032, 'grad_norm': 0.1437920848714199, 'learning_rate': 0.00010046920395183059, 'epoch': 0.51}

 51%|█████▏    | 1597/3107 [8:15:23<7:25:20, 17.70s/it]

 51%|█████▏    | 1598/3107 [8:15:38<7:03:22, 16.83s/it]


 51%|█████▏    | 1600/3107 [8:16:15<7:36:31, 18.18s/it]

 52%|█████▏    | 1601/3107 [8:16:34<7:36:59, 18.21s/it]

 52%|█████▏    | 1602/3107 [8:16:58<8:19:41, 19.92s/it]
{'loss': 0.7267, 'grad_norm': 0.14500081487508185, 'learning_rate': 9.98435981726127e-05, 'epoch': 0.52}

 52%|█████▏    | 1603/3107 [8:17:11<7:31:30, 18.01s/it]

 52%|█████▏    | 1604/3107 [8:17:25<7:01:02, 16.81s/it]

 52%|█████▏    | 1605/3107 [8:17:41<6:50:31, 16.40s/it]

 52%|█████▏    | 1606/3107 [8:17:53<6:21:38, 15.26s/it]


 52%|█████▏    | 1608/3107 [8:18:26<6:29:00, 15.57s/it]
{'loss': 0.8041, 'grad_norm': 0.14650235895877772, 'learning_rate': 9.921799851470505e-05, 'epoch': 0.52}


 52%|█████▏    | 1610/3107 [8:18:52<5:49:35, 14.01s/it]
{'loss': 0.8783, 'grad_norm': 0.15465689421844656, 'learning_rate': 9.900947088768412e-05, 'epoch': 0.52}


 52%|█████▏    | 1612/3107 [8:19:32<7:06:18, 17.11s/it]

 52%|█████▏    | 1613/3107 [8:19:52<7:27:16, 17.96s/it]

 52%|█████▏    | 1614/3107 [8:20:16<8:11:54, 19.77s/it]

 52%|█████▏    | 1615/3107 [8:20:28<7:16:04, 17.54s/it]
{'loss': 0.8268, 'grad_norm': 0.1506974214294486, 'learning_rate': 9.848817264922561e-05, 'epoch': 0.52}


 52%|█████▏    | 1617/3107 [8:21:14<8:34:53, 20.73s/it]
{'loss': 0.709, 'grad_norm': 0.12954763404828037, 'learning_rate': 9.827966406580817e-05, 'epoch': 0.52}


 52%|█████▏    | 1619/3107 [8:21:56<8:53:57, 21.53s/it]
{'loss': 0.768, 'grad_norm': 0.14081181978582324, 'learning_rate': 9.807116296364783e-05, 'epoch': 0.52}


 52%|█████▏    | 1621/3107 [8:22:44<9:31:53, 23.09s/it]

 52%|█████▏    | 1622/3107 [8:23:04<9:06:32, 22.08s/it]

 52%|█████▏    | 1623/3107 [8:23:26<9:04:39, 22.02s/it]

 52%|█████▏    | 1624/3107 [8:23:51<9:23:19, 22.79s/it]

 52%|█████▏    | 1625/3107 [8:24:08<8:44:03, 21.22s/it]

 52%|█████▏    | 1626/3107 [8:24:22<7:51:29, 19.10s/it]

 52%|█████▏    | 1627/3107 [8:24:45<8:14:49, 20.06s/it]

 52%|█████▏    | 1628/3107 [8:24:59<7:30:33, 18.28s/it]
{'loss': 0.8772, 'grad_norm': 0.16147241431709325, 'learning_rate': 9.71330248948128e-05, 'epoch': 0.52}

 52%|█████▏    | 1629/3107 [8:25:15<7:16:29, 17.72s/it]

 52%|█████▏    | 1630/3107 [8:25:31<7:04:31, 17.25s/it]

 52%|█████▏    | 1631/3107 [8:25:45<6:38:13, 16.19s/it]


 53%|█████▎    | 1633/3107 [8:26:34<8:43:07, 21.29s/it]
[2024-05-28 21:47:36,650] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 53%|█████▎    | 1634/3107 [8:26:52<8:19:02, 20.33s/it]

 53%|█████▎    | 1635/3107 [8:27:05<7:18:20, 17.87s/it]

 53%|█████▎    | 1636/3107 [8:27:17<6:37:11, 16.20s/it]
{'loss': 0.8405, 'grad_norm': 0.1524906723498757, 'learning_rate': 9.629933376984518e-05, 'epoch': 0.53}

 53%|█████▎    | 1637/3107 [8:27:39<7:23:15, 18.09s/it]


 53%|█████▎    | 1639/3107 [8:28:24<8:19:16, 20.41s/it]

 53%|█████▎    | 1640/3107 [8:28:51<9:01:33, 22.15s/it]
[2024-05-28 21:49:52,961] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 53%|█████▎    | 1641/3107 [8:29:11<8:48:10, 21.62s/it]
[2024-05-28 21:50:13,333] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.9101, 'grad_norm': 0.15161040793037095, 'learning_rate': 9.577840389150935e-05, 'epoch': 0.53}

 53%|█████▎    | 1642/3107 [8:29:32<8:39:51, 21.29s/it]

 53%|█████▎    | 1643/3107 [8:29:56<8:59:10, 22.10s/it]

 53%|█████▎    | 1644/3107 [8:30:18<9:00:53, 22.18s/it]
[2024-05-28 21:51:46,069] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 53%|█████▎    | 1646/3107 [8:31:01<8:42:56, 21.48s/it]

 53%|█████▎    | 1647/3107 [8:31:19<8:15:30, 20.36s/it]
{'loss': 0.8266, 'grad_norm': 0.14506845820018865, 'learning_rate': 9.515344074086332e-05, 'epoch': 0.53}

 53%|█████▎    | 1648/3107 [8:31:36<7:49:34, 19.31s/it]

 53%|█████▎    | 1649/3107 [8:31:56<7:59:55, 19.75s/it]


 53%|█████▎    | 1651/3107 [8:32:41<8:16:41, 20.47s/it]

 53%|█████▎    | 1652/3107 [8:32:57<7:47:01, 19.26s/it]

 53%|█████▎    | 1653/3107 [8:33:15<7:36:31, 18.84s/it]

 53%|█████▎    | 1654/3107 [8:33:37<7:59:05, 19.78s/it]

 53%|█████▎    | 1655/3107 [8:33:53<7:31:32, 18.66s/it]
{'loss': 0.8254, 'grad_norm': 0.14725443683553782, 'learning_rate': 9.432045583427536e-05, 'epoch': 0.53}

 53%|█████▎    | 1656/3107 [8:34:07<6:53:37, 17.10s/it]

 53%|█████▎    | 1657/3107 [8:34:23<6:46:10, 16.81s/it]


 53%|█████▎    | 1659/3107 [8:34:55<6:41:18, 16.63s/it]
{'loss': 0.9235, 'grad_norm': 0.15602115731000407, 'learning_rate': 9.390410795124484e-05, 'epoch': 0.53}

 53%|█████▎    | 1660/3107 [8:35:21<7:44:40, 19.27s/it]

 53%|█████▎    | 1661/3107 [8:35:34<7:02:34, 17.53s/it]

 53%|█████▎    | 1662/3107 [8:35:52<7:04:48, 17.64s/it]


 54%|█████▎    | 1664/3107 [8:36:29<7:07:07, 17.76s/it]
{'loss': 0.9323, 'grad_norm': 0.15714087280308087, 'learning_rate': 9.338382306075274e-05, 'epoch': 0.54}

 54%|█████▎    | 1665/3107 [8:36:44<6:48:41, 17.00s/it]

 54%|█████▎    | 1666/3107 [8:37:09<7:40:57, 19.19s/it]

 54%|█████▎    | 1667/3107 [8:37:31<8:03:11, 20.13s/it]

 54%|█████▎    | 1668/3107 [8:37:44<7:14:34, 18.12s/it]

 54%|█████▎    | 1669/3107 [8:38:05<7:32:07, 18.86s/it]

 54%|█████▎    | 1670/3107 [8:38:16<6:35:17, 16.50s/it]

 54%|█████▍    | 1671/3107 [8:38:37<7:04:50, 17.75s/it]

 54%|█████▍    | 1672/3107 [8:38:55<7:08:29, 17.92s/it]

 54%|█████▍    | 1673/3107 [8:39:17<7:34:42, 19.03s/it]

 54%|█████▍    | 1674/3107 [8:39:31<7:00:49, 17.62s/it]


 54%|█████▍    | 1676/3107 [8:40:01<6:29:48, 16.34s/it]

 54%|█████▍    | 1677/3107 [8:40:22<6:57:06, 17.50s/it]
{'loss': 0.7584, 'grad_norm': 0.1459691080307459, 'learning_rate': 9.203195920362866e-05, 'epoch': 0.54}

 54%|█████▍    | 1678/3107 [8:40:42<7:16:52, 18.34s/it]


 54%|█████▍    | 1680/3107 [8:41:17<6:58:13, 17.58s/it]
{'loss': 0.9196, 'grad_norm': 0.14976682078893, 'learning_rate': 9.172018948356128e-05, 'epoch': 0.54}
[2024-05-28 22:02:52,971] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 54%|█████▍    | 1681/3107 [8:41:51<8:50:07, 22.31s/it]


 54%|█████▍    | 1683/3107 [8:42:26<7:49:04, 19.76s/it]
{'loss': 0.8833, 'grad_norm': 0.16033250777832328, 'learning_rate': 9.140850077823252e-05, 'epoch': 0.54}

 54%|█████▍    | 1684/3107 [8:42:36<6:42:21, 16.96s/it]

 54%|█████▍    | 1685/3107 [8:42:50<6:19:48, 16.03s/it]

 54%|█████▍    | 1686/3107 [8:43:03<5:53:18, 14.92s/it]


 54%|█████▍    | 1688/3107 [8:43:32<5:54:33, 14.99s/it]
{'loss': 0.6506, 'grad_norm': 0.13088035516078392, 'learning_rate': 9.088920791834625e-05, 'epoch': 0.54}

 54%|█████▍    | 1689/3107 [8:43:47<5:55:38, 15.05s/it]

 54%|█████▍    | 1690/3107 [8:44:00<5:44:12, 14.57s/it]
[2024-05-28 22:05:27,475] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 54%|█████▍    | 1691/3107 [8:44:25<6:57:20, 17.68s/it]


 54%|█████▍    | 1693/3107 [8:45:12<8:08:05, 20.71s/it]
[2024-05-28 22:06:14,316] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 55%|█████▍    | 1694/3107 [8:45:30<7:47:21, 19.85s/it]
[2024-05-28 22:06:32,144] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 55%|█████▍    | 1695/3107 [8:45:48<7:34:35, 19.32s/it]
{'loss': 0.947, 'grad_norm': 0.1472114890984519, 'learning_rate': 9.01626170868522e-05, 'epoch': 0.55}

 55%|█████▍    | 1696/3107 [8:46:07<7:33:02, 19.26s/it]

 55%|█████▍    | 1697/3107 [8:46:24<7:12:54, 18.42s/it]

 55%|█████▍    | 1698/3107 [8:46:43<7:17:31, 18.63s/it]

 55%|█████▍    | 1699/3107 [8:46:58<6:57:20, 17.78s/it]

 55%|█████▍    | 1700/3107 [8:47:19<7:18:49, 18.71s/it]

 55%|█████▍    | 1701/3107 [8:47:37<7:14:05, 18.52s/it]

 55%|█████▍    | 1702/3107 [8:47:57<7:19:09, 18.75s/it]

 55%|█████▍    | 1703/3107 [8:48:10<6:42:36, 17.21s/it]

 55%|█████▍    | 1704/3107 [8:48:22<6:06:34, 15.68s/it]

 55%|█████▍    | 1705/3107 [8:48:46<6:59:35, 17.96s/it]

 55%|█████▍    | 1706/3107 [8:49:01<6:37:21, 17.02s/it]

 55%|█████▍    | 1707/3107 [8:49:15<6:21:53, 16.37s/it]

 55%|█████▍    | 1708/3107 [8:49:39<7:14:34, 18.64s/it]

 55%|█████▌    | 1709/3107 [8:49:53<6:40:17, 17.18s/it]

 55%|█████▌    | 1710/3107 [8:50:07<6:20:29, 16.34s/it]

 55%|█████▌    | 1711/3107 [8:50:21<6:03:21, 15.62s/it]


 55%|█████▌    | 1713/3107 [8:50:52<5:59:28, 15.47s/it]
{'loss': 0.8899, 'grad_norm': 0.1436840489192326, 'learning_rate': 8.829674005051041e-05, 'epoch': 0.55}


 55%|█████▌    | 1715/3107 [8:51:24<6:04:56, 15.73s/it]
{'loss': 0.8945, 'grad_norm': 0.13811977222895838, 'learning_rate': 8.808966283587794e-05, 'epoch': 0.55}


 55%|█████▌    | 1717/3107 [8:52:08<7:18:55, 18.95s/it]
{'loss': 0.7411, 'grad_norm': 0.15392773877618765, 'learning_rate': 8.788263741595138e-05, 'epoch': 0.55}

 55%|█████▌    | 1718/3107 [8:52:33<8:00:44, 20.77s/it]


 55%|█████▌    | 1720/3107 [8:53:15<7:50:48, 20.37s/it]
{'loss': 0.7743, 'grad_norm': 0.14224282188927678, 'learning_rate': 8.75721983704687e-05, 'epoch': 0.55}

 55%|█████▌    | 1721/3107 [8:53:31<7:23:38, 19.21s/it]

 55%|█████▌    | 1722/3107 [8:53:49<7:15:51, 18.88s/it]


 55%|█████▌    | 1724/3107 [8:54:30<7:42:32, 20.07s/it]
{'loss': 0.8859, 'grad_norm': 0.1421419870868388, 'learning_rate': 8.715846932545317e-05, 'epoch': 0.55}
[2024-05-28 22:16:02,325] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 56%|█████▌    | 1725/3107 [8:55:00<8:49:22, 22.98s/it]

 56%|█████▌    | 1726/3107 [8:55:13<7:41:58, 20.07s/it]

 56%|█████▌    | 1727/3107 [8:55:32<7:31:10, 19.62s/it]

 56%|█████▌    | 1728/3107 [8:55:54<7:48:14, 20.37s/it]

 56%|█████▌    | 1729/3107 [8:56:24<8:50:50, 23.11s/it]

 56%|█████▌    | 1730/3107 [8:56:39<7:58:14, 20.84s/it]

 56%|█████▌    | 1731/3107 [8:56:59<7:52:39, 20.61s/it]


 56%|█████▌    | 1733/3107 [8:57:31<6:53:34, 18.06s/it]

 56%|█████▌    | 1734/3107 [8:57:47<6:41:41, 17.55s/it]
{'loss': 0.8157, 'grad_norm': 0.1441148381964073, 'learning_rate': 8.612513971874534e-05, 'epoch': 0.56}

 56%|█████▌    | 1735/3107 [8:58:03<6:33:04, 17.19s/it]


 56%|█████▌    | 1737/3107 [8:58:35<6:14:47, 16.41s/it]
{'loss': 0.8459, 'grad_norm': 0.1561875151912356, 'learning_rate': 8.581542987395181e-05, 'epoch': 0.56}

 56%|█████▌    | 1738/3107 [8:58:53<6:28:31, 17.03s/it]


 56%|█████▌    | 1740/3107 [8:59:41<7:38:18, 20.12s/it]
{'loss': 0.66, 'grad_norm': 0.1378780486036094, 'learning_rate': 8.550585881968254e-05, 'epoch': 0.56}


 56%|█████▌    | 1742/3107 [9:00:15<7:01:14, 18.52s/it]

 56%|█████▌    | 1743/3107 [9:00:31<6:44:07, 17.78s/it]

 56%|█████▌    | 1744/3107 [9:00:41<5:51:18, 15.47s/it]
{'loss': 0.9109, 'grad_norm': 0.16920187224681935, 'learning_rate': 8.509331854552724e-05, 'epoch': 0.56}

 56%|█████▌    | 1745/3107 [9:00:58<6:01:14, 15.91s/it]


 56%|█████▌    | 1747/3107 [9:01:39<6:58:46, 18.48s/it]
{'loss': 0.7486, 'grad_norm': 0.13656135292057472, 'learning_rate': 8.478408311298396e-05, 'epoch': 0.56}

 56%|█████▋    | 1748/3107 [9:01:54<6:35:37, 17.47s/it]

 56%|█████▋    | 1749/3107 [9:02:18<7:18:48, 19.39s/it]

 56%|█████▋    | 1750/3107 [9:02:34<6:57:22, 18.45s/it]

 56%|█████▋    | 1751/3107 [9:02:55<7:17:09, 19.34s/it]


 56%|█████▋    | 1753/3107 [9:03:35<7:25:19, 19.73s/it]

 56%|█████▋    | 1754/3107 [9:03:55<7:27:22, 19.84s/it]
{'loss': 0.9118, 'grad_norm': 0.16274644858698542, 'learning_rate': 8.406311798232408e-05, 'epoch': 0.56}

 56%|█████▋    | 1755/3107 [9:04:15<7:25:52, 19.79s/it]

 57%|█████▋    | 1756/3107 [9:04:28<6:45:38, 18.02s/it]

 57%|█████▋    | 1757/3107 [9:04:50<7:10:30, 19.13s/it]

 57%|█████▋    | 1758/3107 [9:05:14<7:40:57, 20.50s/it]

 57%|█████▋    | 1759/3107 [9:05:30<7:13:31, 19.30s/it]

 57%|█████▋    | 1760/3107 [9:05:46<6:45:57, 18.08s/it]

 57%|█████▋    | 1761/3107 [9:06:06<6:59:39, 18.71s/it]

 57%|█████▋    | 1762/3107 [9:06:24<6:52:58, 18.42s/it]


 57%|█████▋    | 1764/3107 [9:06:57<6:35:16, 17.66s/it]
{'loss': 0.6817, 'grad_norm': 0.1384765361306553, 'learning_rate': 8.303465002947302e-05, 'epoch': 0.57}


 57%|█████▋    | 1766/3107 [9:07:33<6:37:30, 17.79s/it]
{'loss': 0.9079, 'grad_norm': 0.15942730423267992, 'learning_rate': 8.28291741950509e-05, 'epoch': 0.57}


 57%|█████▋    | 1768/3107 [9:08:01<5:50:57, 15.73s/it]
{'loss': 0.7951, 'grad_norm': 0.1516954915345658, 'learning_rate': 8.262377303172008e-05, 'epoch': 0.57}

 57%|█████▋    | 1769/3107 [9:08:14<5:31:31, 14.87s/it]

 57%|█████▋    | 1770/3107 [9:08:29<5:32:06, 14.90s/it]

 57%|█████▋    | 1771/3107 [9:08:46<5:49:39, 15.70s/it]

 57%|█████▋    | 1772/3107 [9:08:59<5:27:17, 14.71s/it]

 57%|█████▋    | 1773/3107 [9:09:15<5:33:26, 15.00s/it]

 57%|█████▋    | 1774/3107 [9:09:33<5:54:56, 15.98s/it]

 57%|█████▋    | 1775/3107 [9:09:48<5:49:29, 15.74s/it]


 57%|█████▋    | 1777/3107 [9:10:24<6:07:04, 16.56s/it]
{'loss': 0.785, 'grad_norm': 0.14909030832080436, 'learning_rate': 8.170041579351073e-05, 'epoch': 0.57}


 57%|█████▋    | 1779/3107 [9:11:12<7:39:46, 20.77s/it]
{'loss': 0.8326, 'grad_norm': 0.14363559790036162, 'learning_rate': 8.149544127879988e-05, 'epoch': 0.57}

 57%|█████▋    | 1780/3107 [9:11:27<7:01:40, 19.07s/it]


 57%|█████▋    | 1782/3107 [9:12:08<7:18:16, 19.85s/it]
{'loss': 0.7218, 'grad_norm': 0.14238187668805857, 'learning_rate': 8.118813066854431e-05, 'epoch': 0.57}

 57%|█████▋    | 1783/3107 [9:12:31<7:43:07, 20.99s/it]

 57%|█████▋    | 1784/3107 [9:12:52<7:44:44, 21.08s/it]

 57%|█████▋    | 1785/3107 [9:13:11<7:26:03, 20.24s/it]

 57%|█████▋    | 1786/3107 [9:13:28<7:07:54, 19.44s/it]
[2024-05-28 22:35:00,578] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 58%|█████▊    | 1787/3107 [9:13:58<8:17:25, 22.61s/it]

 58%|█████▊    | 1788/3107 [9:14:17<7:51:21, 21.44s/it]


 58%|█████▊    | 1790/3107 [9:14:55<7:29:47, 20.49s/it]
{'loss': 0.8271, 'grad_norm': 0.15054715376703323, 'learning_rate': 8.036954375147363e-05, 'epoch': 0.58}

 58%|█████▊    | 1791/3107 [9:15:17<7:33:28, 20.68s/it]


 58%|█████▊    | 1793/3107 [9:16:04<8:04:16, 22.11s/it]
{'loss': 0.9656, 'grad_norm': 0.14242959188567766, 'learning_rate': 8.006292273970282e-05, 'epoch': 0.58}

 58%|█████▊    | 1794/3107 [9:16:19<7:22:23, 20.22s/it]

 58%|█████▊    | 1795/3107 [9:16:37<7:03:51, 19.38s/it]

 58%|█████▊    | 1796/3107 [9:16:55<6:53:40, 18.93s/it]


 58%|█████▊    | 1798/3107 [9:17:24<5:59:13, 16.47s/it]
{'loss': 0.8351, 'grad_norm': 0.13870516593270074, 'learning_rate': 7.955232270429322e-05, 'epoch': 0.58}


 58%|█████▊    | 1800/3107 [9:17:58<6:07:00, 16.85s/it]
 58%|█████▊    | 1800/3107 [9:17:58<6:07:00, 16.85s/it]/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/peft/utils/save_and_load.py:154: UserWarning: Could not find a config file in /mnt/petrelfs/liaoyusheng/oss/download_models/Qwen1.5-7B-Chat - will assume that the vocabulary was not modified.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/nn/modules/module.py:1879: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
{'loss': 0.6893, 'grad_norm': 0.14721299589860307, 'learning_rate': 7.924622855857316e-05, 'epoch': 0.58}
 58%|█████▊    | 1801/3107 [9:18:42<9:03:21, 24.96s/it]


 58%|█████▊    | 1803/3107 [9:19:28<8:55:46, 24.65s/it]
{'loss': 0.7151, 'grad_norm': 0.12970075374684825, 'learning_rate': 7.904227842530525e-05, 'epoch': 0.58}


 58%|█████▊    | 1805/3107 [9:20:04<7:34:47, 20.96s/it]
{'loss': 0.8084, 'grad_norm': 0.15631232723979005, 'learning_rate': 7.883841943127311e-05, 'epoch': 0.58}

 58%|█████▊    | 1806/3107 [9:20:15<6:31:23, 18.05s/it]

 58%|█████▊    | 1807/3107 [9:20:31<6:15:47, 17.34s/it]

 58%|█████▊    | 1808/3107 [9:20:48<6:09:17, 17.06s/it]

 58%|█████▊    | 1809/3107 [9:21:01<5:47:07, 16.05s/it]

 58%|█████▊    | 1810/3107 [9:21:19<5:55:31, 16.45s/it]


 58%|█████▊    | 1812/3107 [9:21:56<6:30:38, 18.10s/it]
[2024-05-28 22:42:58,663] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.8717, 'grad_norm': 0.15891168306483008, 'learning_rate': 7.812564346923116e-05, 'epoch': 0.58}
[2024-05-28 22:43:21,375] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 58%|█████▊    | 1814/3107 [9:22:32<6:18:53, 17.58s/it]

 58%|█████▊    | 1815/3107 [9:22:48<6:09:00, 17.14s/it]
{'loss': 0.7978, 'grad_norm': 0.15668567308973066, 'learning_rate': 7.782052256395032e-05, 'epoch': 0.58}

 58%|█████▊    | 1816/3107 [9:23:07<6:15:55, 17.47s/it]

 58%|█████▊    | 1817/3107 [9:23:23<6:09:38, 17.19s/it]


 59%|█████▊    | 1819/3107 [9:24:02<6:35:05, 18.41s/it]
{'loss': 0.7834, 'grad_norm': 0.14171320902535103, 'learning_rate': 7.741403278887397e-05, 'epoch': 0.59}


 59%|█████▊    | 1821/3107 [9:24:40<6:33:13, 18.35s/it]

 59%|█████▊    | 1822/3107 [9:24:59<6:32:11, 18.31s/it]
{'loss': 0.8425, 'grad_norm': 0.1489754675727895, 'learning_rate': 7.710942289840328e-05, 'epoch': 0.59}

 59%|█████▊    | 1823/3107 [9:25:11<5:57:10, 16.69s/it]

 59%|█████▊    | 1824/3107 [9:25:27<5:49:30, 16.35s/it]


 59%|█████▉    | 1826/3107 [9:25:53<5:07:48, 14.42s/it]

 59%|█████▉    | 1827/3107 [9:26:15<5:56:27, 16.71s/it]

 59%|█████▉    | 1828/3107 [9:26:28<5:37:04, 15.81s/it]
{'loss': 0.9474, 'grad_norm': 0.15894257241008972, 'learning_rate': 7.650087802205068e-05, 'epoch': 0.59}

 59%|█████▉    | 1829/3107 [9:26:40<5:10:18, 14.57s/it]

 59%|█████▉    | 1830/3107 [9:26:56<5:19:19, 15.00s/it]

 59%|█████▉    | 1831/3107 [9:27:13<5:30:37, 15.55s/it]

 59%|█████▉    | 1832/3107 [9:27:27<5:23:37, 15.23s/it]

 59%|█████▉    | 1833/3107 [9:27:45<5:39:41, 16.00s/it]

 59%|█████▉    | 1834/3107 [9:28:09<6:30:35, 18.41s/it]

 59%|█████▉    | 1835/3107 [9:28:26<6:20:59, 17.97s/it]

 59%|█████▉    | 1836/3107 [9:28:40<5:56:38, 16.84s/it]

 59%|█████▉    | 1837/3107 [9:28:55<5:44:59, 16.30s/it]

 59%|█████▉    | 1838/3107 [9:29:13<5:56:05, 16.84s/it]

 59%|█████▉    | 1839/3107 [9:29:27<5:36:08, 15.91s/it]

 59%|█████▉    | 1840/3107 [9:29:52<6:33:03, 18.61s/it]

 59%|█████▉    | 1841/3107 [9:30:08<6:14:31, 17.75s/it]

 59%|█████▉    | 1842/3107 [9:30:33<7:01:16, 19.98s/it]

 59%|█████▉    | 1843/3107 [9:30:52<6:56:09, 19.75s/it]

 59%|█████▉    | 1844/3107 [9:31:09<6:39:21, 18.97s/it]


 59%|█████▉    | 1846/3107 [9:31:43<6:10:42, 17.64s/it]
{'loss': 0.8071, 'grad_norm': 0.1514684087359012, 'learning_rate': 7.468085678370827e-05, 'epoch': 0.59}


 59%|█████▉    | 1848/3107 [9:32:17<6:05:14, 17.41s/it]
{'loss': 0.7581, 'grad_norm': 0.14927457495871305, 'learning_rate': 7.447917101913875e-05, 'epoch': 0.59}
[2024-05-28 22:53:42,192] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 60%|█████▉    | 1849/3107 [9:32:40<6:42:19, 19.19s/it]

 60%|█████▉    | 1850/3107 [9:33:02<7:03:16, 20.20s/it]

 60%|█████▉    | 1851/3107 [9:33:21<6:55:11, 19.83s/it]

 60%|█████▉    | 1852/3107 [9:33:44<7:11:20, 20.62s/it]

 60%|█████▉    | 1853/3107 [9:34:03<7:03:58, 20.29s/it]


 60%|█████▉    | 1855/3107 [9:34:29<5:40:08, 16.30s/it]
{'loss': 0.9061, 'grad_norm': 0.166941197823376, 'learning_rate': 7.377415058496904e-05, 'epoch': 0.6}

 60%|█████▉    | 1856/3107 [9:34:48<6:00:43, 17.30s/it]


 60%|█████▉    | 1858/3107 [9:35:31<6:34:54, 18.97s/it]
{'loss': 0.9107, 'grad_norm': 0.14880933104972777, 'learning_rate': 7.347242446440554e-05, 'epoch': 0.6}

 60%|█████▉    | 1859/3107 [9:35:45<6:05:11, 17.56s/it]

 60%|█████▉    | 1860/3107 [9:36:08<6:37:59, 19.15s/it]


 60%|█████▉    | 1862/3107 [9:36:45<6:32:16, 18.90s/it]
{'loss': 0.8084, 'grad_norm': 0.14526681044502845, 'learning_rate': 7.307052724341546e-05, 'epoch': 0.6}


 60%|█████▉    | 1864/3107 [9:37:13<5:36:20, 16.23s/it]

 60%|██████    | 1865/3107 [9:37:27<5:22:52, 15.60s/it]

 60%|██████    | 1866/3107 [9:37:41<5:11:51, 15.08s/it]
{'loss': 0.7493, 'grad_norm': 0.14668533378564055, 'learning_rate': 7.266909845672323e-05, 'epoch': 0.6}


 60%|██████    | 1868/3107 [9:38:07<4:46:53, 13.89s/it]
{'loss': 0.9481, 'grad_norm': 0.15608593566304638, 'learning_rate': 7.246856190868412e-05, 'epoch': 0.6}

 60%|██████    | 1869/3107 [9:38:20<4:41:16, 13.63s/it]

 60%|██████    | 1870/3107 [9:38:39<5:10:07, 15.04s/it]


 60%|██████    | 1872/3107 [9:39:07<5:04:38, 14.80s/it]
{'loss': 0.6789, 'grad_norm': 0.14002379311324115, 'learning_rate': 7.206784886360139e-05, 'epoch': 0.6}


 60%|██████    | 1874/3107 [9:39:37<5:11:09, 15.14s/it]

 60%|██████    | 1875/3107 [9:39:47<4:39:43, 13.62s/it]
{'loss': 0.875, 'grad_norm': 0.16431817470659046, 'learning_rate': 7.176763255487196e-05, 'epoch': 0.6}

 60%|██████    | 1876/3107 [9:40:07<5:14:59, 15.35s/it]

 60%|██████    | 1877/3107 [9:40:26<5:36:11, 16.40s/it]


 60%|██████    | 1879/3107 [9:41:01<5:40:40, 16.65s/it]

 61%|██████    | 1880/3107 [9:41:27<6:38:11, 19.47s/it]
{'loss': 0.7442, 'grad_norm': 0.1430000272250479, 'learning_rate': 7.126788736256101e-05, 'epoch': 0.61}


 61%|██████    | 1882/3107 [9:42:10<7:06:46, 20.90s/it]

 61%|██████    | 1883/3107 [9:42:30<7:01:18, 20.65s/it]
{'loss': 0.9033, 'grad_norm': 0.15446899819927104, 'learning_rate': 7.096841422166767e-05, 'epoch': 0.61}

 61%|██████    | 1884/3107 [9:42:53<7:18:24, 21.51s/it]

 61%|██████    | 1885/3107 [9:43:06<6:23:53, 18.85s/it]

 61%|██████    | 1886/3107 [9:43:25<6:24:33, 18.90s/it]

 61%|██████    | 1887/3107 [9:43:39<5:54:03, 17.41s/it]


 61%|██████    | 1889/3107 [9:44:20<6:17:56, 18.62s/it]
{'loss': 0.7451, 'grad_norm': 0.13905344263809447, 'learning_rate': 7.037032305579409e-05, 'epoch': 0.61}

 61%|██████    | 1890/3107 [9:44:46<7:06:22, 21.02s/it]


 61%|██████    | 1892/3107 [9:45:25<7:01:08, 20.80s/it]
{'loss': 0.7738, 'grad_norm': 0.13500157089234968, 'learning_rate': 7.007171088290422e-05, 'epoch': 0.61}

 61%|██████    | 1893/3107 [9:45:42<6:37:57, 19.67s/it]


 61%|██████    | 1895/3107 [9:46:14<5:50:43, 17.36s/it]
{'loss': 0.9279, 'grad_norm': 0.1591829063808268, 'learning_rate': 6.97733915467305e-05, 'epoch': 0.61}

 61%|██████    | 1896/3107 [9:46:30<5:46:18, 17.16s/it]

 61%|██████    | 1897/3107 [9:46:43<5:19:13, 15.83s/it]

 61%|██████    | 1898/3107 [9:47:01<5:32:27, 16.50s/it]


 61%|██████    | 1900/3107 [9:47:32<5:18:30, 15.83s/it]
{'loss': 0.8691, 'grad_norm': 0.14915323541012226, 'learning_rate': 6.927685132803937e-05, 'epoch': 0.61}


 61%|██████    | 1902/3107 [9:48:14<5:58:43, 17.86s/it]

 61%|██████    | 1903/3107 [9:48:32<6:00:44, 17.98s/it]

 61%|██████▏   | 1904/3107 [9:48:48<5:48:55, 17.40s/it]

 61%|██████▏   | 1905/3107 [9:49:08<6:02:30, 18.10s/it]

 61%|██████▏   | 1906/3107 [9:49:22<5:40:13, 17.00s/it]

 61%|██████▏   | 1907/3107 [9:49:44<6:10:26, 18.52s/it]

 61%|██████▏   | 1908/3107 [9:50:04<6:16:54, 18.86s/it]

 61%|██████▏   | 1909/3107 [9:50:16<5:35:49, 16.82s/it]

 61%|██████▏   | 1910/3107 [9:50:34<5:43:10, 17.20s/it]
{'loss': 0.8992, 'grad_norm': 0.14885602419704344, 'learning_rate': 6.82862894775897e-05, 'epoch': 0.61}

 62%|██████▏   | 1911/3107 [9:50:54<5:57:22, 17.93s/it]

 62%|██████▏   | 1912/3107 [9:51:05<5:21:13, 16.13s/it]

 62%|██████▏   | 1913/3107 [9:51:25<5:43:11, 17.25s/it]

 62%|██████▏   | 1914/3107 [9:51:41<5:34:51, 16.84s/it]


 62%|██████▏   | 1916/3107 [9:52:20<6:01:34, 18.22s/it]
{'loss': 0.818, 'grad_norm': 0.1342577172843355, 'learning_rate': 6.769360044423547e-05, 'epoch': 0.62}

 62%|██████▏   | 1917/3107 [9:52:32<5:27:30, 16.51s/it]

 62%|██████▏   | 1918/3107 [9:52:49<5:25:36, 16.43s/it]

 62%|██████▏   | 1919/3107 [9:53:01<5:02:47, 15.29s/it]

 62%|██████▏   | 1920/3107 [9:53:17<5:02:20, 15.28s/it]

 62%|██████▏   | 1921/3107 [9:53:31<4:59:15, 15.14s/it]

 62%|██████▏   | 1922/3107 [9:53:51<5:26:15, 16.52s/it]

 62%|██████▏   | 1923/3107 [9:54:03<4:56:08, 15.01s/it]

 62%|██████▏   | 1924/3107 [9:54:21<5:18:49, 16.17s/it]


 62%|██████▏   | 1926/3107 [9:55:10<6:46:38, 20.66s/it]
[2024-05-28 23:16:12,715] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.8052, 'grad_norm': 0.14436683972886838, 'learning_rate': 6.670860664224887e-05, 'epoch': 0.62}

 62%|██████▏   | 1927/3107 [9:55:32<6:50:24, 20.87s/it]

 62%|██████▏   | 1928/3107 [9:55:49<6:28:30, 19.77s/it]

 62%|██████▏   | 1929/3107 [9:56:09<6:28:19, 19.78s/it]

 62%|██████▏   | 1930/3107 [9:56:24<6:00:49, 18.39s/it]
[2024-05-28 23:17:52,338] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 62%|██████▏   | 1931/3107 [9:56:50<6:45:49, 20.71s/it]

 62%|██████▏   | 1932/3107 [9:57:11<6:45:19, 20.70s/it]


 62%|██████▏   | 1934/3107 [9:57:54<7:01:59, 21.59s/it]
{'loss': 0.7827, 'grad_norm': 0.13839247769938018, 'learning_rate': 6.592321239930112e-05, 'epoch': 0.62}


 62%|██████▏   | 1936/3107 [9:58:26<6:10:22, 18.98s/it]
{'loss': 0.8511, 'grad_norm': 0.13341236355971206, 'learning_rate': 6.572723218140475e-05, 'epoch': 0.62}

 62%|██████▏   | 1937/3107 [9:58:44<6:02:09, 18.57s/it]

 62%|██████▏   | 1938/3107 [9:59:06<6:20:20, 19.52s/it]

 62%|██████▏   | 1939/3107 [9:59:19<5:43:22, 17.64s/it]

 62%|██████▏   | 1940/3107 [9:59:40<6:00:21, 18.53s/it]

 62%|██████▏   | 1941/3107 [10:00:00<6:09:04, 18.99s/it]

 63%|██████▎   | 1942/3107 [10:00:16<5:54:33, 18.26s/it]

 63%|██████▎   | 1943/3107 [10:00:29<5:24:11, 16.71s/it]

 63%|██████▎   | 1944/3107 [10:00:43<5:03:41, 15.67s/it]

 63%|██████▎   | 1945/3107 [10:01:00<5:11:53, 16.10s/it]

 63%|██████▎   | 1946/3107 [10:01:14<4:58:55, 15.45s/it]

 63%|██████▎   | 1947/3107 [10:01:32<5:18:33, 16.48s/it]

 63%|██████▎   | 1948/3107 [10:01:51<5:30:55, 17.13s/it]

 63%|██████▎   | 1949/3107 [10:02:06<5:19:58, 16.58s/it]

 63%|██████▎   | 1950/3107 [10:02:24<5:25:53, 16.90s/it]

 63%|██████▎   | 1951/3107 [10:02:43<5:35:51, 17.43s/it]

 63%|██████▎   | 1952/3107 [10:02:57<5:14:52, 16.36s/it]
[2024-05-28 23:24:23,901] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 63%|██████▎   | 1953/3107 [10:03:22<6:04:40, 18.96s/it]

 63%|██████▎   | 1954/3107 [10:03:49<6:52:34, 21.47s/it]

 63%|██████▎   | 1955/3107 [10:04:05<6:23:25, 19.97s/it]

 63%|██████▎   | 1956/3107 [10:04:23<6:11:44, 19.38s/it]

 63%|██████▎   | 1957/3107 [10:04:37<5:37:45, 17.62s/it]

 63%|██████▎   | 1958/3107 [10:04:53<5:30:48, 17.27s/it]

 63%|██████▎   | 1959/3107 [10:05:08<5:14:08, 16.42s/it]

 63%|██████▎   | 1960/3107 [10:05:28<5:37:12, 17.64s/it]

 63%|██████▎   | 1961/3107 [10:05:49<5:57:17, 18.71s/it]

 63%|██████▎   | 1962/3107 [10:06:08<5:55:34, 18.63s/it]

 63%|██████▎   | 1963/3107 [10:06:22<5:28:55, 17.25s/it]

 63%|██████▎   | 1964/3107 [10:06:39<5:27:57, 17.22s/it]

 63%|██████▎   | 1965/3107 [10:06:53<5:06:03, 16.08s/it]

 63%|██████▎   | 1966/3107 [10:07:11<5:18:15, 16.74s/it]

 63%|██████▎   | 1967/3107 [10:07:26<5:07:44, 16.20s/it]

 63%|██████▎   | 1968/3107 [10:07:44<5:18:27, 16.78s/it]

 63%|██████▎   | 1969/3107 [10:08:01<5:21:15, 16.94s/it]

 63%|██████▎   | 1970/3107 [10:08:23<5:50:13, 18.48s/it]

 63%|██████▎   | 1971/3107 [10:08:39<5:33:12, 17.60s/it]

 63%|██████▎   | 1972/3107 [10:08:54<5:17:47, 16.80s/it]

 64%|██████▎   | 1973/3107 [10:09:10<5:13:52, 16.61s/it]

 64%|██████▎   | 1974/3107 [10:09:31<5:39:34, 17.98s/it]

 64%|██████▎   | 1975/3107 [10:09:46<5:18:59, 16.91s/it]

 64%|██████▎   | 1976/3107 [10:10:06<5:39:09, 17.99s/it]

 64%|██████▎   | 1977/3107 [10:10:18<5:03:32, 16.12s/it]

 64%|██████▎   | 1978/3107 [10:10:33<4:56:33, 15.76s/it]

 64%|██████▎   | 1979/3107 [10:10:53<5:23:02, 17.18s/it]

 64%|██████▎   | 1980/3107 [10:11:16<5:55:32, 18.93s/it]

 64%|██████▍   | 1981/3107 [10:11:36<5:58:49, 19.12s/it]

 64%|██████▍   | 1982/3107 [10:12:01<6:35:34, 21.10s/it]

 64%|██████▍   | 1983/3107 [10:12:15<5:54:21, 18.92s/it]

 64%|██████▍   | 1984/3107 [10:12:46<7:01:11, 22.50s/it]

 64%|██████▍   | 1985/3107 [10:13:06<6:43:29, 21.58s/it]

 64%|██████▍   | 1986/3107 [10:13:22<6:16:27, 20.15s/it]

 64%|██████▍   | 1987/3107 [10:13:51<7:02:28, 22.63s/it]

 64%|██████▍   | 1988/3107 [10:14:08<6:30:48, 20.95s/it]

 64%|██████▍   | 1989/3107 [10:14:27<6:18:17, 20.30s/it]

 64%|██████▍   | 1990/3107 [10:14:38<5:26:45, 17.55s/it]

 64%|██████▍   | 1991/3107 [10:15:03<6:06:57, 19.73s/it]

 64%|██████▍   | 1992/3107 [10:15:22<6:02:09, 19.49s/it]

 64%|██████▍   | 1993/3107 [10:15:37<5:38:15, 18.22s/it]

 64%|██████▍   | 1994/3107 [10:15:58<5:56:05, 19.20s/it]

 64%|██████▍   | 1995/3107 [10:16:18<6:01:01, 19.48s/it]

 64%|██████▍   | 1996/3107 [10:16:32<5:28:00, 17.71s/it]

 64%|██████▍   | 1997/3107 [10:16:45<5:02:11, 16.33s/it]

 64%|██████▍   | 1998/3107 [10:17:04<5:13:27, 16.96s/it]

 64%|██████▍   | 1999/3107 [10:17:15<4:45:22, 15.45s/it]

 64%|██████▍   | 2000/3107 [10:17:33<4:57:43, 16.14s/it]

 64%|██████▍   | 2001/3107 [10:17:57<5:38:53, 18.38s/it]

 64%|██████▍   | 2002/3107 [10:18:18<5:52:43, 19.15s/it]
[2024-05-28 23:39:48,537] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 64%|██████▍   | 2003/3107 [10:18:46<6:43:48, 21.95s/it]

 64%|██████▍   | 2004/3107 [10:19:06<6:31:13, 21.28s/it]

 65%|██████▍   | 2005/3107 [10:19:23<6:09:28, 20.12s/it]

 65%|██████▍   | 2006/3107 [10:19:39<5:43:00, 18.69s/it]

 65%|██████▍   | 2007/3107 [10:19:59<5:51:55, 19.20s/it]

 65%|██████▍   | 2008/3107 [10:20:22<6:09:06, 20.15s/it]

 65%|██████▍   | 2009/3107 [10:20:36<5:36:32, 18.39s/it]

 65%|██████▍   | 2010/3107 [10:20:54<5:36:49, 18.42s/it]

 65%|██████▍   | 2011/3107 [10:21:10<5:21:58, 17.63s/it]

 65%|██████▍   | 2012/3107 [10:21:23<4:54:42, 16.15s/it]

 65%|██████▍   | 2013/3107 [10:21:38<4:49:19, 15.87s/it]

 65%|██████▍   | 2014/3107 [10:21:52<4:40:00, 15.37s/it]

 65%|██████▍   | 2015/3107 [10:22:13<5:09:02, 16.98s/it]

 65%|██████▍   | 2016/3107 [10:22:39<5:59:04, 19.75s/it]

 65%|██████▍   | 2017/3107 [10:22:57<5:48:49, 19.20s/it]

 65%|██████▍   | 2018/3107 [10:23:13<5:33:31, 18.38s/it]

 65%|██████▍   | 2019/3107 [10:23:28<5:14:43, 17.36s/it]

 65%|██████▌   | 2020/3107 [10:23:44<5:06:05, 16.90s/it]

 65%|██████▌   | 2021/3107 [10:24:05<5:24:37, 17.94s/it]

 65%|██████▌   | 2022/3107 [10:24:28<5:53:12, 19.53s/it]

 65%|██████▌   | 2023/3107 [10:24:49<6:03:42, 20.13s/it]

 65%|██████▌   | 2024/3107 [10:25:09<6:00:32, 19.98s/it]

 65%|██████▌   | 2025/3107 [10:25:27<5:48:25, 19.32s/it]

 65%|██████▌   | 2026/3107 [10:25:44<5:34:10, 18.55s/it]

 65%|██████▌   | 2027/3107 [10:26:00<5:20:38, 17.81s/it]

 65%|██████▌   | 2028/3107 [10:26:15<5:04:42, 16.94s/it]

 65%|██████▌   | 2029/3107 [10:26:31<4:58:58, 16.64s/it]

 65%|██████▌   | 2030/3107 [10:26:49<5:09:19, 17.23s/it]

 65%|██████▌   | 2031/3107 [10:27:02<4:46:36, 15.98s/it]

 65%|██████▌   | 2032/3107 [10:27:13<4:19:54, 14.51s/it]

 65%|██████▌   | 2033/3107 [10:27:31<4:38:00, 15.53s/it]

 65%|██████▌   | 2034/3107 [10:27:49<4:51:57, 16.33s/it]

 65%|██████▌   | 2035/3107 [10:28:03<4:36:14, 15.46s/it]

 66%|██████▌   | 2036/3107 [10:28:22<4:55:53, 16.58s/it]

 66%|██████▌   | 2037/3107 [10:28:42<5:12:55, 17.55s/it]

 66%|██████▌   | 2038/3107 [10:28:58<5:03:26, 17.03s/it]

 66%|██████▌   | 2039/3107 [10:29:17<5:13:29, 17.61s/it]

 66%|██████▌   | 2040/3107 [10:29:30<4:51:35, 16.40s/it]

 66%|██████▌   | 2041/3107 [10:29:49<5:05:27, 17.19s/it]

 66%|██████▌   | 2042/3107 [10:30:05<4:56:41, 16.72s/it]

 66%|██████▌   | 2043/3107 [10:30:25<5:14:24, 17.73s/it]

 66%|██████▌   | 2044/3107 [10:30:45<5:24:17, 18.30s/it]

 66%|██████▌   | 2045/3107 [10:31:08<5:53:12, 19.96s/it]

 66%|██████▌   | 2046/3107 [10:31:29<5:58:08, 20.25s/it]

 66%|██████▌   | 2047/3107 [10:31:43<5:21:14, 18.18s/it]
[2024-05-28 23:53:16,133] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 66%|██████▌   | 2048/3107 [10:32:14<6:29:45, 22.08s/it]

 66%|██████▌   | 2049/3107 [10:32:28<5:49:54, 19.84s/it]

 66%|██████▌   | 2050/3107 [10:32:45<5:30:08, 18.74s/it]

 66%|██████▌   | 2051/3107 [10:33:07<5:49:38, 19.87s/it]

 66%|██████▌   | 2052/3107 [10:33:20<5:10:14, 17.64s/it]

 66%|██████▌   | 2053/3107 [10:33:39<5:19:51, 18.21s/it]

 66%|██████▌   | 2054/3107 [10:33:53<4:56:10, 16.88s/it]

 66%|██████▌   | 2055/3107 [10:34:15<5:21:52, 18.36s/it]

 66%|██████▌   | 2056/3107 [10:34:34<5:25:45, 18.60s/it]

 66%|██████▌   | 2057/3107 [10:34:57<5:47:55, 19.88s/it]

 66%|██████▌   | 2058/3107 [10:35:16<5:42:07, 19.57s/it]

 66%|██████▋   | 2059/3107 [10:35:33<5:32:59, 19.06s/it]


 66%|██████▋   | 2061/3107 [10:36:15<5:38:35, 19.42s/it]
{'loss': 0.7244, 'grad_norm': 0.15798477978675646, 'learning_rate': 5.380844049271054e-05, 'epoch': 0.66}

 66%|██████▋   | 2062/3107 [10:36:36<5:46:20, 19.89s/it]

 66%|██████▋   | 2063/3107 [10:36:59<6:01:12, 20.76s/it]

 66%|██████▋   | 2064/3107 [10:37:22<6:14:46, 21.56s/it]

 66%|██████▋   | 2065/3107 [10:37:42<6:06:22, 21.10s/it]

 66%|██████▋   | 2066/3107 [10:38:02<5:58:00, 20.63s/it]

 67%|██████▋   | 2067/3107 [10:38:18<5:31:58, 19.15s/it]

 67%|██████▋   | 2068/3107 [10:38:39<5:41:22, 19.71s/it]

 67%|██████▋   | 2069/3107 [10:39:01<5:52:52, 20.40s/it]


 67%|██████▋   | 2071/3107 [10:39:35<5:27:06, 18.94s/it]

 67%|██████▋   | 2072/3107 [10:39:47<4:51:31, 16.90s/it]
{'loss': 0.8808, 'grad_norm': 0.1486688697425428, 'learning_rate': 5.279424611272873e-05, 'epoch': 0.67}

 67%|██████▋   | 2073/3107 [10:40:05<4:55:53, 17.17s/it]
[2024-05-29 00:01:35,633] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 67%|██████▋   | 2074/3107 [10:40:33<5:54:15, 20.58s/it]

 67%|██████▋   | 2075/3107 [10:40:51<5:37:59, 19.65s/it]

 67%|██████▋   | 2076/3107 [10:41:05<5:08:16, 17.94s/it]

 67%|██████▋   | 2077/3107 [10:41:24<5:16:34, 18.44s/it]

 67%|██████▋   | 2078/3107 [10:41:41<5:05:25, 17.81s/it]


 67%|██████▋   | 2080/3107 [10:42:30<5:55:40, 20.78s/it]

 67%|██████▋   | 2081/3107 [10:42:49<5:44:23, 20.14s/it]

 67%|██████▋   | 2082/3107 [10:43:07<5:35:11, 19.62s/it]

 67%|██████▋   | 2083/3107 [10:43:23<5:15:17, 18.47s/it]

 67%|██████▋   | 2084/3107 [10:43:40<5:06:06, 17.95s/it]

 67%|██████▋   | 2085/3107 [10:43:58<5:06:17, 17.98s/it]

 67%|██████▋   | 2086/3107 [10:44:16<5:10:11, 18.23s/it]

 67%|██████▋   | 2087/3107 [10:44:31<4:51:25, 17.14s/it]

 67%|██████▋   | 2088/3107 [10:44:45<4:34:17, 16.15s/it]

 67%|██████▋   | 2089/3107 [10:44:58<4:16:36, 15.12s/it]

 67%|██████▋   | 2090/3107 [10:45:20<4:55:18, 17.42s/it]

 67%|██████▋   | 2091/3107 [10:45:44<5:26:21, 19.27s/it]

 67%|██████▋   | 2092/3107 [10:46:01<5:14:35, 18.60s/it]

 67%|██████▋   | 2093/3107 [10:46:15<4:50:28, 17.19s/it]

 67%|██████▋   | 2094/3107 [10:46:30<4:40:35, 16.62s/it]

 67%|██████▋   | 2095/3107 [10:46:50<4:56:41, 17.59s/it]

 67%|██████▋   | 2096/3107 [10:47:12<5:17:28, 18.84s/it]

 67%|██████▋   | 2097/3107 [10:47:37<5:48:12, 20.69s/it]

 68%|██████▊   | 2098/3107 [10:48:00<5:58:18, 21.31s/it]

 68%|██████▊   | 2099/3107 [10:48:12<5:14:01, 18.69s/it]

 68%|██████▊   | 2100/3107 [10:48:28<5:00:47, 17.92s/it]
 68%|██████▊   | 2100/3107 [10:48:28<5:00:47, 17.92s/it]/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/peft/utils/save_and_load.py:154: UserWarning: Could not find a config file in /mnt/petrelfs/liaoyusheng/oss/download_models/Qwen1.5-7B-Chat - will assume that the vocabulary was not modified.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/nn/modules/module.py:1879: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
 68%|██████▊   | 2101/3107 [10:49:07<6:45:31, 24.19s/it]

 68%|██████▊   | 2102/3107 [10:49:26<6:16:22, 22.47s/it]

 68%|██████▊   | 2103/3107 [10:49:48<6:13:38, 22.33s/it]

 68%|██████▊   | 2104/3107 [10:50:16<6:41:49, 24.04s/it]

 68%|██████▊   | 2105/3107 [10:50:31<5:56:32, 21.35s/it]

 68%|██████▊   | 2106/3107 [10:51:03<6:49:23, 24.54s/it]

 68%|██████▊   | 2107/3107 [10:51:22<6:22:21, 22.94s/it]
{'loss': 0.719, 'grad_norm': 0.15883599934282322, 'learning_rate': 4.960921744732378e-05, 'epoch': 0.68}

 68%|██████▊   | 2108/3107 [10:51:42<6:08:34, 22.14s/it]

 68%|██████▊   | 2109/3107 [10:52:06<6:15:22, 22.57s/it]

 68%|██████▊   | 2110/3107 [10:52:25<6:00:13, 21.68s/it]

 68%|██████▊   | 2111/3107 [10:52:49<6:10:06, 22.30s/it]

 68%|██████▊   | 2112/3107 [10:53:13<6:17:53, 22.79s/it]
[2024-05-29 00:14:15,273] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 68%|██████▊   | 2113/3107 [10:53:31<5:54:04, 21.37s/it]

 68%|██████▊   | 2114/3107 [10:53:47<5:25:28, 19.67s/it]

 68%|██████▊   | 2115/3107 [10:54:03<5:07:52, 18.62s/it]

 68%|██████▊   | 2116/3107 [10:54:25<5:25:35, 19.71s/it]

 68%|██████▊   | 2117/3107 [10:54:42<5:11:39, 18.89s/it]

 68%|██████▊   | 2118/3107 [10:54:56<4:47:57, 17.47s/it]

 68%|██████▊   | 2119/3107 [10:55:11<4:31:44, 16.50s/it]

 68%|██████▊   | 2120/3107 [10:55:33<5:00:58, 18.30s/it]

 68%|██████▊   | 2121/3107 [10:55:50<4:54:25, 17.92s/it]

 68%|██████▊   | 2122/3107 [10:56:06<4:44:43, 17.34s/it]

 68%|██████▊   | 2123/3107 [10:56:23<4:44:24, 17.34s/it]

 68%|██████▊   | 2124/3107 [10:56:41<4:45:48, 17.45s/it]

 68%|██████▊   | 2125/3107 [10:57:08<5:31:50, 20.28s/it]

 68%|██████▊   | 2126/3107 [10:57:29<5:37:37, 20.65s/it]

 68%|██████▊   | 2127/3107 [10:57:53<5:52:20, 21.57s/it]

 68%|██████▊   | 2128/3107 [10:58:15<5:53:21, 21.66s/it]

 69%|██████▊   | 2129/3107 [10:58:35<5:46:54, 21.28s/it]

 69%|██████▊   | 2130/3107 [10:58:57<5:45:43, 21.23s/it]

 69%|██████▊   | 2131/3107 [10:59:10<5:09:24, 19.02s/it]

 69%|██████▊   | 2132/3107 [10:59:22<4:33:08, 16.81s/it]

 69%|██████▊   | 2133/3107 [10:59:35<4:13:03, 15.59s/it]

 69%|██████▊   | 2134/3107 [10:59:58<4:49:47, 17.87s/it]

 69%|██████▊   | 2135/3107 [11:00:19<5:02:32, 18.68s/it]

 69%|██████▊   | 2136/3107 [11:00:37<5:00:58, 18.60s/it]

 69%|██████▉   | 2137/3107 [11:00:50<4:33:17, 16.90s/it]

 69%|██████▉   | 2138/3107 [11:01:11<4:53:27, 18.17s/it]

 69%|██████▉   | 2139/3107 [11:01:44<6:03:31, 22.53s/it]

 69%|██████▉   | 2140/3107 [11:02:05<5:57:08, 22.16s/it]

 69%|██████▉   | 2141/3107 [11:02:29<6:06:52, 22.79s/it]

 69%|██████▉   | 2142/3107 [11:02:41<5:11:54, 19.39s/it]

 69%|██████▉   | 2143/3107 [11:03:00<5:10:04, 19.30s/it]

 69%|██████▉   | 2144/3107 [11:03:18<5:04:27, 18.97s/it]

 69%|██████▉   | 2145/3107 [11:03:39<5:15:27, 19.68s/it]

 69%|██████▉   | 2146/3107 [11:03:55<4:55:41, 18.46s/it]

 69%|██████▉   | 2147/3107 [11:04:07<4:23:27, 16.47s/it]

 69%|██████▉   | 2148/3107 [11:04:20<4:05:40, 15.37s/it]

 69%|██████▉   | 2149/3107 [11:04:37<4:16:37, 16.07s/it]

 69%|██████▉   | 2150/3107 [11:04:52<4:09:10, 15.62s/it]

 69%|██████▉   | 2151/3107 [11:05:15<4:42:40, 17.74s/it]

 69%|██████▉   | 2152/3107 [11:05:32<4:39:20, 17.55s/it]

 69%|██████▉   | 2153/3107 [11:05:46<4:22:38, 16.52s/it]

 69%|██████▉   | 2154/3107 [11:06:05<4:33:55, 17.25s/it]

 69%|██████▉   | 2155/3107 [11:06:19<4:19:56, 16.38s/it]

 69%|██████▉   | 2156/3107 [11:06:41<4:46:55, 18.10s/it]

 69%|██████▉   | 2157/3107 [11:06:58<4:41:21, 17.77s/it]

 69%|██████▉   | 2158/3107 [11:07:17<4:44:42, 18.00s/it]

 69%|██████▉   | 2159/3107 [11:07:36<4:48:43, 18.27s/it]

 70%|██████▉   | 2160/3107 [11:07:48<4:17:48, 16.33s/it]

 70%|██████▉   | 2161/3107 [11:08:17<5:18:16, 20.19s/it]

 70%|██████▉   | 2162/3107 [11:08:44<5:52:56, 22.41s/it]

 70%|██████▉   | 2163/3107 [11:09:06<5:47:16, 22.07s/it]

 70%|██████▉   | 2164/3107 [11:09:27<5:41:29, 21.73s/it]

 70%|██████▉   | 2165/3107 [11:09:51<5:55:18, 22.63s/it]

 70%|██████▉   | 2166/3107 [11:10:08<5:26:17, 20.80s/it]

 70%|██████▉   | 2167/3107 [11:10:21<4:51:29, 18.61s/it]

 70%|██████▉   | 2168/3107 [11:10:37<4:38:07, 17.77s/it]

 70%|██████▉   | 2169/3107 [11:10:49<4:10:56, 16.05s/it]

 70%|██████▉   | 2170/3107 [11:11:02<3:56:07, 15.12s/it]

 70%|██████▉   | 2171/3107 [11:11:16<3:49:38, 14.72s/it]

 70%|██████▉   | 2172/3107 [11:11:31<3:49:18, 14.72s/it]

 70%|██████▉   | 2173/3107 [11:11:50<4:09:43, 16.04s/it]

 70%|██████▉   | 2174/3107 [11:12:06<4:11:19, 16.16s/it]

 70%|███████   | 2175/3107 [11:12:19<3:54:34, 15.10s/it]

 70%|███████   | 2176/3107 [11:12:36<4:02:05, 15.60s/it]

 70%|███████   | 2177/3107 [11:13:03<4:57:11, 19.17s/it]

 70%|███████   | 2178/3107 [11:13:23<5:01:01, 19.44s/it]

 70%|███████   | 2179/3107 [11:13:45<5:14:01, 20.30s/it]

 70%|███████   | 2180/3107 [11:14:00<4:46:47, 18.56s/it]

 70%|███████   | 2181/3107 [11:14:20<4:52:47, 18.97s/it]

 70%|███████   | 2182/3107 [11:14:38<4:46:37, 18.59s/it]

 70%|███████   | 2183/3107 [11:14:53<4:33:53, 17.79s/it]

 70%|███████   | 2184/3107 [11:15:15<4:51:45, 18.97s/it]

 70%|███████   | 2185/3107 [11:15:32<4:41:50, 18.34s/it]

 70%|███████   | 2186/3107 [11:15:47<4:28:01, 17.46s/it]

 70%|███████   | 2187/3107 [11:16:02<4:15:07, 16.64s/it]

 70%|███████   | 2188/3107 [11:16:22<4:29:14, 17.58s/it]

 70%|███████   | 2189/3107 [11:16:42<4:40:43, 18.35s/it]

 70%|███████   | 2190/3107 [11:17:01<4:42:11, 18.46s/it]

 71%|███████   | 2191/3107 [11:17:30<5:30:51, 21.67s/it]

 71%|███████   | 2192/3107 [11:17:48<5:15:48, 20.71s/it]

 71%|███████   | 2193/3107 [11:18:06<4:59:25, 19.66s/it]

 71%|███████   | 2194/3107 [11:18:27<5:04:50, 20.03s/it]

 71%|███████   | 2195/3107 [11:18:47<5:07:28, 20.23s/it]

 71%|███████   | 2196/3107 [11:19:07<5:04:32, 20.06s/it]

 71%|███████   | 2197/3107 [11:19:26<5:00:36, 19.82s/it]

 71%|███████   | 2198/3107 [11:19:46<5:01:02, 19.87s/it]

 71%|███████   | 2199/3107 [11:19:58<4:25:03, 17.51s/it]

 71%|███████   | 2200/3107 [11:20:13<4:12:48, 16.72s/it]

 71%|███████   | 2201/3107 [11:20:33<4:25:01, 17.55s/it]

 71%|███████   | 2202/3107 [11:20:45<3:59:25, 15.87s/it]

 71%|███████   | 2203/3107 [11:21:01<4:02:21, 16.09s/it]

 71%|███████   | 2204/3107 [11:21:13<3:43:22, 14.84s/it]

 71%|███████   | 2205/3107 [11:21:35<4:15:56, 17.02s/it]

 71%|███████   | 2206/3107 [11:21:53<4:17:59, 17.18s/it]

 71%|███████   | 2207/3107 [11:22:08<4:09:39, 16.64s/it]

 71%|███████   | 2208/3107 [11:22:27<4:18:33, 17.26s/it]

 71%|███████   | 2209/3107 [11:22:39<3:57:45, 15.89s/it]

 71%|███████   | 2210/3107 [11:22:55<3:57:04, 15.86s/it]

 71%|███████   | 2211/3107 [11:23:17<4:21:34, 17.52s/it]

 71%|███████   | 2212/3107 [11:23:33<4:17:01, 17.23s/it]

 71%|███████   | 2213/3107 [11:23:46<3:57:37, 15.95s/it]

 71%|███████▏  | 2214/3107 [11:24:03<4:01:01, 16.19s/it]

 71%|███████▏  | 2215/3107 [11:24:17<3:49:26, 15.43s/it]

 71%|███████▏  | 2216/3107 [11:24:32<3:48:49, 15.41s/it]

 71%|███████▏  | 2217/3107 [11:24:49<3:57:55, 16.04s/it]

 71%|███████▏  | 2218/3107 [11:25:07<4:04:27, 16.50s/it]

 71%|███████▏  | 2219/3107 [11:25:20<3:46:42, 15.32s/it]

 71%|███████▏  | 2220/3107 [11:25:34<3:40:49, 14.94s/it]

 71%|███████▏  | 2221/3107 [11:25:48<3:39:05, 14.84s/it]

 72%|███████▏  | 2222/3107 [11:26:05<3:46:40, 15.37s/it]

 72%|███████▏  | 2223/3107 [11:26:22<3:54:27, 15.91s/it]

 72%|███████▏  | 2224/3107 [11:26:39<3:57:14, 16.12s/it]

 72%|███████▏  | 2225/3107 [11:26:58<4:09:06, 16.95s/it]

 72%|███████▏  | 2226/3107 [11:27:17<4:20:17, 17.73s/it]

 72%|███████▏  | 2227/3107 [11:27:37<4:29:24, 18.37s/it]

 72%|███████▏  | 2228/3107 [11:27:51<4:09:01, 17.00s/it]

 72%|███████▏  | 2229/3107 [11:28:05<3:55:50, 16.12s/it]

 72%|███████▏  | 2230/3107 [11:28:29<4:30:26, 18.50s/it]

 72%|███████▏  | 2231/3107 [11:28:52<4:51:09, 19.94s/it]
{'loss': 0.6511, 'grad_norm': 0.1438549188661816, 'learning_rate': 3.8893185002117706e-05, 'epoch': 0.72}


 72%|███████▏  | 2233/3107 [11:29:38<5:15:22, 21.65s/it]

 72%|███████▏  | 2234/3107 [11:29:51<4:38:56, 19.17s/it]

 72%|███████▏  | 2235/3107 [11:30:13<4:51:10, 20.03s/it]

 72%|███████▏  | 2236/3107 [11:30:34<4:51:33, 20.08s/it]

 72%|███████▏  | 2237/3107 [11:30:52<4:44:52, 19.65s/it]
{'loss': 0.8077, 'grad_norm': 0.15141792808809665, 'learning_rate': 3.839916686331573e-05, 'epoch': 0.72}


 72%|███████▏  | 2239/3107 [11:31:19<3:57:31, 16.42s/it]

 72%|███████▏  | 2240/3107 [11:31:32<3:44:20, 15.53s/it]

 72%|███████▏  | 2241/3107 [11:32:05<4:57:58, 20.64s/it]

 72%|███████▏  | 2242/3107 [11:32:25<4:56:22, 20.56s/it]

 72%|███████▏  | 2243/3107 [11:32:54<5:30:35, 22.96s/it]
[2024-05-29 00:53:55,833] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 72%|███████▏  | 2244/3107 [11:33:11<5:04:40, 21.18s/it]

 72%|███████▏  | 2245/3107 [11:33:26<4:40:20, 19.51s/it]

 72%|███████▏  | 2246/3107 [11:33:43<4:26:11, 18.55s/it]
{'loss': 0.8895, 'grad_norm': 0.14315801627474067, 'learning_rate': 3.7662666212659956e-05, 'epoch': 0.72}


 72%|███████▏  | 2248/3107 [11:34:22<4:42:29, 19.73s/it]

 72%|███████▏  | 2249/3107 [11:34:40<4:34:01, 19.16s/it]

 72%|███████▏  | 2250/3107 [11:34:55<4:16:26, 17.95s/it]

 72%|███████▏  | 2251/3107 [11:35:16<4:30:51, 18.99s/it]

 72%|███████▏  | 2252/3107 [11:35:42<4:58:37, 20.96s/it]
[2024-05-29 00:56:43,991] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 73%|███████▎  | 2253/3107 [11:35:58<4:37:27, 19.49s/it]

 73%|███████▎  | 2254/3107 [11:36:17<4:35:23, 19.37s/it]
{'loss': 0.9023, 'grad_norm': 0.15616059899693852, 'learning_rate': 3.7012605417721534e-05, 'epoch': 0.73}


 73%|███████▎  | 2256/3107 [11:36:53<4:21:57, 18.47s/it]

 73%|███████▎  | 2257/3107 [11:37:07<3:59:30, 16.91s/it]
{'loss': 0.8528, 'grad_norm': 0.17272453110772887, 'learning_rate': 3.676996009093929e-05, 'epoch': 0.73}


 73%|███████▎  | 2259/3107 [11:37:46<4:18:24, 18.28s/it]

 73%|███████▎  | 2260/3107 [11:38:12<4:51:53, 20.68s/it]

 73%|███████▎  | 2261/3107 [11:38:24<4:16:20, 18.18s/it]

 73%|███████▎  | 2262/3107 [11:38:42<4:12:35, 17.94s/it]

 73%|███████▎  | 2263/3107 [11:38:56<3:57:56, 16.92s/it]
{'loss': 0.7696, 'grad_norm': 0.14867336169729506, 'learning_rate': 3.628652784985572e-05, 'epoch': 0.73}


 73%|███████▎  | 2265/3107 [11:39:33<4:12:33, 18.00s/it]

 73%|███████▎  | 2266/3107 [11:39:52<4:16:01, 18.27s/it]

 73%|███████▎  | 2267/3107 [11:40:12<4:24:49, 18.92s/it]

 73%|███████▎  | 2268/3107 [11:40:34<4:34:44, 19.65s/it]

 73%|███████▎  | 2269/3107 [11:40:49<4:14:33, 18.23s/it]

 73%|███████▎  | 2270/3107 [11:41:05<4:04:32, 17.53s/it]

 73%|███████▎  | 2271/3107 [11:41:29<4:32:55, 19.59s/it]

 73%|███████▎  | 2272/3107 [11:41:48<4:31:58, 19.54s/it]

 73%|███████▎  | 2273/3107 [11:42:04<4:16:42, 18.47s/it]

 73%|███████▎  | 2274/3107 [11:42:29<4:41:48, 20.30s/it]

 73%|███████▎  | 2275/3107 [11:42:47<4:31:36, 19.59s/it]

 73%|███████▎  | 2276/3107 [11:43:03<4:15:26, 18.44s/it]

 73%|███████▎  | 2277/3107 [11:43:27<4:40:15, 20.26s/it]

 73%|███████▎  | 2278/3107 [11:43:45<4:28:33, 19.44s/it]

 73%|███████▎  | 2279/3107 [11:44:00<4:11:49, 18.25s/it]

 73%|███████▎  | 2280/3107 [11:44:29<4:54:47, 21.39s/it]

 73%|███████▎  | 2281/3107 [11:44:52<5:02:52, 22.00s/it]

 73%|███████▎  | 2282/3107 [11:45:15<5:04:11, 22.12s/it]

 73%|███████▎  | 2283/3107 [11:45:32<4:45:39, 20.80s/it]

 74%|███████▎  | 2284/3107 [11:45:54<4:49:28, 21.10s/it]

 74%|███████▎  | 2285/3107 [11:46:08<4:17:22, 18.79s/it]

 74%|███████▎  | 2286/3107 [11:46:27<4:20:07, 19.01s/it]
{'loss': 0.7728, 'grad_norm': 0.13935399275879423, 'learning_rate': 3.445663602723199e-05, 'epoch': 0.74}


 74%|███████▎  | 2288/3107 [11:46:54<3:42:47, 16.32s/it]

 74%|███████▎  | 2289/3107 [11:47:11<3:46:10, 16.59s/it]

 74%|███████▎  | 2290/3107 [11:47:31<3:57:30, 17.44s/it]

 74%|███████▎  | 2291/3107 [11:47:46<3:45:51, 16.61s/it]

 74%|███████▍  | 2292/3107 [11:48:07<4:06:56, 18.18s/it]

 74%|███████▍  | 2293/3107 [11:48:24<4:02:14, 17.86s/it]

 74%|███████▍  | 2294/3107 [11:48:45<4:14:44, 18.80s/it]

 74%|███████▍  | 2295/3107 [11:49:05<4:15:49, 18.90s/it]

 74%|███████▍  | 2296/3107 [11:49:27<4:31:09, 20.06s/it]
{'loss': 0.9038, 'grad_norm': 0.15432162612969866, 'learning_rate': 3.367272672749822e-05, 'epoch': 0.74}
[2024-05-29 01:10:52,275] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 74%|███████▍  | 2298/3107 [11:50:11<4:39:56, 20.76s/it]

 74%|███████▍  | 2299/3107 [11:50:31<4:39:46, 20.78s/it]

 74%|███████▍  | 2300/3107 [11:50:45<4:10:17, 18.61s/it]

 74%|███████▍  | 2301/3107 [11:50:59<3:52:08, 17.28s/it]

 74%|███████▍  | 2302/3107 [11:51:19<4:02:42, 18.09s/it]

 74%|███████▍  | 2303/3107 [11:51:43<4:26:20, 19.88s/it]

 74%|███████▍  | 2304/3107 [11:52:06<4:37:30, 20.74s/it]

 74%|███████▍  | 2305/3107 [11:52:19<4:07:38, 18.53s/it]
{'loss': 0.9785, 'grad_norm': 0.16182074776144406, 'learning_rate': 3.2973371267600916e-05, 'epoch': 0.74}


 74%|███████▍  | 2307/3107 [11:53:03<4:26:20, 19.98s/it]
{'loss': 0.6931, 'grad_norm': 0.14291688736709088, 'learning_rate': 3.2818758349270475e-05, 'epoch': 0.74}
[2024-05-29 01:14:32,345] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 74%|███████▍  | 2309/3107 [11:53:47<4:34:17, 20.62s/it]

 74%|███████▍  | 2310/3107 [11:54:05<4:20:37, 19.62s/it]

 74%|███████▍  | 2311/3107 [11:54:21<4:08:21, 18.72s/it]

 74%|███████▍  | 2312/3107 [11:54:37<3:56:59, 17.89s/it]

 74%|███████▍  | 2313/3107 [11:54:55<3:57:15, 17.93s/it]

 74%|███████▍  | 2314/3107 [11:55:10<3:43:14, 16.89s/it]

 75%|███████▍  | 2315/3107 [11:55:21<3:19:41, 15.13s/it]
{'loss': 0.8323, 'grad_norm': 0.15308223496185272, 'learning_rate': 3.220323490377368e-05, 'epoch': 0.75}


 75%|███████▍  | 2317/3107 [11:56:00<3:48:06, 17.32s/it]

 75%|███████▍  | 2318/3107 [11:56:14<3:35:26, 16.38s/it]

 75%|███████▍  | 2319/3107 [11:56:33<3:45:18, 17.16s/it]

 75%|███████▍  | 2320/3107 [11:56:46<3:29:42, 15.99s/it]

 75%|███████▍  | 2321/3107 [11:57:01<3:26:38, 15.77s/it]

 75%|███████▍  | 2322/3107 [11:57:27<4:06:54, 18.87s/it]

 75%|███████▍  | 2323/3107 [11:57:45<4:00:59, 18.44s/it]

 75%|███████▍  | 2324/3107 [11:58:01<3:51:33, 17.74s/it]
{'loss': 0.7733, 'grad_norm': 0.14789228906677096, 'learning_rate': 3.151641172297891e-05, 'epoch': 0.75}

 75%|███████▍  | 2325/3107 [11:58:22<4:06:11, 18.89s/it]


 75%|███████▍  | 2327/3107 [11:58:57<3:52:27, 17.88s/it]
{'loss': 0.871, 'grad_norm': 0.15739495179258112, 'learning_rate': 3.1288807853207e-05, 'epoch': 0.75}


 75%|███████▍  | 2329/3107 [11:59:41<4:29:16, 20.77s/it]
[2024-05-29 01:20:43,616] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 75%|███████▍  | 2330/3107 [11:59:54<3:58:45, 18.44s/it]

 75%|███████▌  | 2331/3107 [12:00:07<3:37:59, 16.86s/it]
{'loss': 0.9669, 'grad_norm': 0.16928523932637637, 'learning_rate': 3.098638223010173e-05, 'epoch': 0.75}


 75%|███████▌  | 2333/3107 [12:00:56<4:18:32, 20.04s/it]

 75%|███████▌  | 2334/3107 [12:01:09<3:51:48, 17.99s/it]

 75%|███████▌  | 2335/3107 [12:01:22<3:29:26, 16.28s/it]

 75%|███████▌  | 2336/3107 [12:01:44<3:54:00, 18.21s/it]
{'loss': 0.8826, 'grad_norm': 0.15760186826044253, 'learning_rate': 3.061003899343756e-05, 'epoch': 0.75}


 75%|███████▌  | 2338/3107 [12:02:23<3:56:16, 18.44s/it]

 75%|███████▌  | 2339/3107 [12:02:37<3:38:43, 17.09s/it]

 75%|███████▌  | 2340/3107 [12:02:52<3:29:52, 16.42s/it]

 75%|███████▌  | 2341/3107 [12:03:09<3:33:10, 16.70s/it]

 75%|███████▌  | 2342/3107 [12:03:26<3:32:17, 16.65s/it]

 75%|███████▌  | 2343/3107 [12:03:46<3:42:53, 17.50s/it]

 75%|███████▌  | 2344/3107 [12:04:02<3:38:32, 17.19s/it]

 75%|███████▌  | 2345/3107 [12:04:21<3:46:21, 17.82s/it]

 76%|███████▌  | 2346/3107 [12:04:36<3:34:21, 16.90s/it]

 76%|███████▌  | 2347/3107 [12:04:52<3:30:54, 16.65s/it]
{'loss': 0.8104, 'grad_norm': 0.1528905865544997, 'learning_rate': 2.978873684975858e-05, 'epoch': 0.76}


 76%|███████▌  | 2349/3107 [12:05:23<3:27:04, 16.39s/it]

 76%|███████▌  | 2350/3107 [12:05:45<3:45:16, 17.85s/it]
{'loss': 0.7824, 'grad_norm': 0.1388647813883104, 'learning_rate': 2.9566343799748308e-05, 'epoch': 0.76}

 76%|███████▌  | 2351/3107 [12:05:59<3:31:39, 16.80s/it]


 76%|███████▌  | 2353/3107 [12:06:37<3:39:51, 17.49s/it]

 76%|███████▌  | 2354/3107 [12:06:55<3:42:45, 17.75s/it]

 76%|███████▌  | 2355/3107 [12:07:13<3:42:45, 17.77s/it]

 76%|███████▌  | 2356/3107 [12:07:25<3:23:24, 16.25s/it]

 76%|███████▌  | 2357/3107 [12:07:49<3:49:51, 18.39s/it]
{'loss': 0.7715, 'grad_norm': 0.15669169319971818, 'learning_rate': 2.9050110521635444e-05, 'epoch': 0.76}
[2024-05-29 01:29:17,580] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 76%|███████▌  | 2359/3107 [12:08:33<4:06:10, 19.75s/it]

 76%|███████▌  | 2360/3107 [12:08:45<3:37:39, 17.48s/it]

 76%|███████▌  | 2361/3107 [12:09:11<4:08:55, 20.02s/it]

 76%|███████▌  | 2362/3107 [12:09:34<4:21:14, 21.04s/it]

 76%|███████▌  | 2363/3107 [12:09:53<4:11:15, 20.26s/it]

 76%|███████▌  | 2364/3107 [12:10:05<3:40:55, 17.84s/it]

 76%|███████▌  | 2365/3107 [12:10:19<3:27:33, 16.78s/it]

 76%|███████▌  | 2366/3107 [12:10:34<3:21:20, 16.30s/it]

 76%|███████▌  | 2367/3107 [12:10:52<3:24:55, 16.62s/it]

 76%|███████▌  | 2368/3107 [12:11:08<3:25:17, 16.67s/it]
{'loss': 0.7011, 'grad_norm': 0.14134077006220322, 'learning_rate': 2.8246533674422617e-05, 'epoch': 0.76}


 76%|███████▋  | 2370/3107 [12:11:46<3:41:58, 18.07s/it]

 76%|███████▋  | 2371/3107 [12:12:00<3:26:44, 16.85s/it]

 76%|███████▋  | 2372/3107 [12:12:17<3:25:06, 16.74s/it]

 76%|███████▋  | 2373/3107 [12:12:34<3:27:12, 16.94s/it]

 76%|███████▋  | 2374/3107 [12:12:56<3:43:58, 18.33s/it]
{'loss': 0.8202, 'grad_norm': 0.15326387321657395, 'learning_rate': 2.7812190742310707e-05, 'epoch': 0.76}

 76%|███████▋  | 2375/3107 [12:13:15<3:47:52, 18.68s/it]


 77%|███████▋  | 2377/3107 [12:13:45<3:25:44, 16.91s/it]
{'loss': 0.6418, 'grad_norm': 0.1426106386610808, 'learning_rate': 2.7596077710134847e-05, 'epoch': 0.77}


 77%|███████▋  | 2379/3107 [12:14:22<3:28:17, 17.17s/it]

 77%|███████▋  | 2380/3107 [12:14:36<3:17:07, 16.27s/it]

 77%|███████▋  | 2381/3107 [12:14:52<3:17:30, 16.32s/it]

 77%|███████▋  | 2382/3107 [12:15:17<3:47:25, 18.82s/it]

 77%|███████▋  | 2383/3107 [12:15:29<3:22:39, 16.79s/it]
{'loss': 0.7849, 'grad_norm': 0.1589148672450965, 'learning_rate': 2.7165979086434077e-05, 'epoch': 0.77}


 77%|███████▋  | 2385/3107 [12:16:00<3:14:31, 16.16s/it]

 77%|███████▋  | 2386/3107 [12:16:21<3:31:17, 17.58s/it]

 77%|███████▋  | 2387/3107 [12:16:43<3:46:27, 18.87s/it]

 77%|███████▋  | 2388/3107 [12:17:08<4:09:41, 20.84s/it]
{'loss': 0.8532, 'grad_norm': 0.15296983866157904, 'learning_rate': 2.6809740400189133e-05, 'epoch': 0.77}


 77%|███████▋  | 2390/3107 [12:17:39<3:37:26, 18.20s/it]

 77%|███████▋  | 2391/3107 [12:17:56<3:32:26, 17.80s/it]

 77%|███████▋  | 2392/3107 [12:18:15<3:33:48, 17.94s/it]

 77%|███████▋  | 2393/3107 [12:18:37<3:48:31, 19.20s/it]

 77%|███████▋  | 2394/3107 [12:18:56<3:46:56, 19.10s/it]

 77%|███████▋  | 2395/3107 [12:19:13<3:38:48, 18.44s/it]

 77%|███████▋  | 2396/3107 [12:19:27<3:22:53, 17.12s/it]

 77%|███████▋  | 2397/3107 [12:19:48<3:39:26, 18.54s/it]

 77%|███████▋  | 2398/3107 [12:20:05<3:32:53, 18.02s/it]

 77%|███████▋  | 2399/3107 [12:20:18<3:12:37, 16.32s/it]

 77%|███████▋  | 2400/3107 [12:20:38<3:27:43, 17.63s/it]
 77%|███████▋  | 2400/3107 [12:20:38<3:27:43, 17.63s/it]/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/peft/utils/save_and_load.py:154: UserWarning: Could not find a config file in /mnt/petrelfs/liaoyusheng/oss/download_models/Qwen1.5-7B-Chat - will assume that the vocabulary was not modified.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/nn/modules/module.py:1879: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
 77%|███████▋  | 2401/3107 [12:21:15<4:33:27, 23.24s/it]

 77%|███████▋  | 2402/3107 [12:21:29<4:02:39, 20.65s/it]

 77%|███████▋  | 2403/3107 [12:21:46<3:49:51, 19.59s/it]

 77%|███████▋  | 2404/3107 [12:21:59<3:26:30, 17.63s/it]

 77%|███████▋  | 2405/3107 [12:22:30<4:13:09, 21.64s/it]
{'loss': 0.7398, 'grad_norm': 0.13870928792881362, 'learning_rate': 2.5613466110585127e-05, 'epoch': 0.77}


 77%|███████▋  | 2407/3107 [12:23:05<3:49:06, 19.64s/it]

 78%|███████▊  | 2408/3107 [12:23:27<3:56:32, 20.30s/it]
{'loss': 0.7177, 'grad_norm': 0.1529405699889377, 'learning_rate': 2.540477436912927e-05, 'epoch': 0.78}
[2024-05-29 01:44:50,654] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 78%|███████▊  | 2410/3107 [12:24:04<3:41:46, 19.09s/it]

 78%|███████▊  | 2411/3107 [12:24:21<3:36:11, 18.64s/it]
{'loss': 0.9578, 'grad_norm': 0.15702937099910827, 'learning_rate': 2.519681251306131e-05, 'epoch': 0.78}


 78%|███████▊  | 2413/3107 [12:25:02<3:48:39, 19.77s/it]

 78%|███████▊  | 2414/3107 [12:25:22<3:48:32, 19.79s/it]

 78%|███████▊  | 2415/3107 [12:25:45<4:01:48, 20.97s/it]

 78%|███████▊  | 2416/3107 [12:26:07<4:03:09, 21.11s/it]
{'loss': 0.8168, 'grad_norm': 0.1419702132038935, 'learning_rate': 2.4851836910590508e-05, 'epoch': 0.78}


 78%|███████▊  | 2418/3107 [12:26:44<3:44:25, 19.54s/it]
{'loss': 0.9035, 'grad_norm': 0.15690793960979763, 'learning_rate': 2.4714418042195774e-05, 'epoch': 0.78}


 78%|███████▊  | 2420/3107 [12:27:27<3:45:41, 19.71s/it]

 78%|███████▊  | 2421/3107 [12:27:50<3:57:19, 20.76s/it]
{'loss': 0.8626, 'grad_norm': 0.16304559172696612, 'learning_rate': 2.4508903793122173e-05, 'epoch': 0.78}


 78%|███████▊  | 2423/3107 [12:28:34<4:02:28, 21.27s/it]

 78%|███████▊  | 2424/3107 [12:28:53<3:56:34, 20.78s/it]
{'loss': 0.8445, 'grad_norm': 0.15253576316680278, 'learning_rate': 2.4304128195183086e-05, 'epoch': 0.78}


 78%|███████▊  | 2426/3107 [12:29:38<4:01:50, 21.31s/it]
{'loss': 0.8354, 'grad_norm': 0.15219577730203662, 'learning_rate': 2.4168022481386442e-05, 'epoch': 0.78}


 78%|███████▊  | 2428/3107 [12:30:09<3:30:03, 18.56s/it]

 78%|███████▊  | 2429/3107 [12:30:26<3:23:29, 18.01s/it]

 78%|███████▊  | 2430/3107 [12:30:46<3:28:41, 18.50s/it]

 78%|███████▊  | 2431/3107 [12:31:02<3:21:32, 17.89s/it]

 78%|███████▊  | 2432/3107 [12:31:27<3:45:33, 20.05s/it]

 78%|███████▊  | 2433/3107 [12:31:42<3:26:39, 18.40s/it]

 78%|███████▊  | 2434/3107 [12:31:56<3:10:27, 16.98s/it]

 78%|███████▊  | 2435/3107 [12:32:17<3:25:17, 18.33s/it]
[2024-05-29 01:53:19,301] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 78%|███████▊  | 2436/3107 [12:32:42<3:47:29, 20.34s/it]
{'loss': 0.8939, 'grad_norm': 0.15482915609414383, 'learning_rate': 2.3492452278946765e-05, 'epoch': 0.78}


 78%|███████▊  | 2438/3107 [12:33:19<3:38:31, 19.60s/it]

 79%|███████▊  | 2439/3107 [12:33:42<3:50:14, 20.68s/it]

 79%|███████▊  | 2440/3107 [12:34:02<3:44:43, 20.21s/it]

 79%|███████▊  | 2441/3107 [12:34:25<3:55:49, 21.24s/it]

 79%|███████▊  | 2442/3107 [12:34:42<3:40:43, 19.92s/it]

 79%|███████▊  | 2443/3107 [12:35:00<3:32:58, 19.25s/it]
{'loss': 0.7465, 'grad_norm': 0.1391278244700938, 'learning_rate': 2.3024497818721547e-05, 'epoch': 0.79}


 79%|███████▊  | 2445/3107 [12:35:46<3:56:49, 21.46s/it]

 79%|███████▊  | 2446/3107 [12:36:00<3:32:15, 19.27s/it]

 79%|███████▉  | 2447/3107 [12:36:23<3:42:03, 20.19s/it]

 79%|███████▉  | 2448/3107 [12:36:46<3:50:30, 20.99s/it]

 79%|███████▉  | 2449/3107 [12:37:05<3:44:13, 20.45s/it]

 79%|███████▉  | 2450/3107 [12:37:21<3:31:43, 19.34s/it]

 79%|███████▉  | 2451/3107 [12:37:39<3:26:38, 18.90s/it]

 79%|███████▉  | 2452/3107 [12:37:53<3:07:53, 17.21s/it]

 79%|███████▉  | 2453/3107 [12:38:18<3:35:34, 19.78s/it]

 79%|███████▉  | 2454/3107 [12:38:32<3:16:08, 18.02s/it]

 79%|███████▉  | 2455/3107 [12:38:45<3:00:07, 16.58s/it]

 79%|███████▉  | 2456/3107 [12:39:05<3:08:59, 17.42s/it]

 79%|███████▉  | 2457/3107 [12:39:17<2:53:01, 15.97s/it]
{'loss': 0.9243, 'grad_norm': 0.1579980560162736, 'learning_rate': 2.2100915429962254e-05, 'epoch': 0.79}

 79%|███████▉  | 2458/3107 [12:39:39<3:11:22, 17.69s/it]

 79%|███████▉  | 2459/3107 [12:39:51<2:51:51, 15.91s/it]


 79%|███████▉  | 2461/3107 [12:40:28<3:01:45, 16.88s/it]

 79%|███████▉  | 2462/3107 [12:40:55<3:33:08, 19.83s/it]

 79%|███████▉  | 2463/3107 [12:41:11<3:21:01, 18.73s/it]

 79%|███████▉  | 2464/3107 [12:41:33<3:31:11, 19.71s/it]

 79%|███████▉  | 2465/3107 [12:41:51<3:25:57, 19.25s/it]

 79%|███████▉  | 2466/3107 [12:42:19<3:53:27, 21.85s/it]

 79%|███████▉  | 2467/3107 [12:42:32<3:24:39, 19.19s/it]

 79%|███████▉  | 2468/3107 [12:42:56<3:40:21, 20.69s/it]

 79%|███████▉  | 2469/3107 [12:43:21<3:53:55, 22.00s/it]

 79%|███████▉  | 2470/3107 [12:43:33<3:20:11, 18.86s/it]
{'loss': 0.8052, 'grad_norm': 0.15154584632567597, 'learning_rate': 2.1258161960631994e-05, 'epoch': 0.79}


 80%|███████▉  | 2472/3107 [12:44:16<3:40:31, 20.84s/it]
{'loss': 0.6831, 'grad_norm': 0.1390685564109738, 'learning_rate': 2.112978781884224e-05, 'epoch': 0.8}


 80%|███████▉  | 2474/3107 [12:44:51<3:21:45, 19.12s/it]
{'loss': 0.9152, 'grad_norm': 0.15269806796553767, 'learning_rate': 2.1001756661419093e-05, 'epoch': 0.8}

 80%|███████▉  | 2475/3107 [12:45:06<3:09:54, 18.03s/it]

 80%|███████▉  | 2476/3107 [12:45:28<3:22:17, 19.24s/it]

 80%|███████▉  | 2477/3107 [12:45:50<3:30:07, 20.01s/it]


 80%|███████▉  | 2479/3107 [12:46:31<3:31:43, 20.23s/it]

 80%|███████▉  | 2480/3107 [12:46:49<3:21:58, 19.33s/it]
{'loss': 0.8784, 'grad_norm': 0.14151341537859244, 'learning_rate': 2.061972665559213e-05, 'epoch': 0.8}


 80%|███████▉  | 2482/3107 [12:47:33<3:33:57, 20.54s/it]
{'loss': 0.6831, 'grad_norm': 0.14645388713779953, 'learning_rate': 2.04930729883987e-05, 'epoch': 0.8}


 80%|███████▉  | 2484/3107 [12:48:11<3:26:04, 19.85s/it]
{'loss': 0.7845, 'grad_norm': 0.1579580181490303, 'learning_rate': 2.036676507446562e-05, 'epoch': 0.8}


 80%|████████  | 2486/3107 [12:48:43<3:00:32, 17.44s/it]

 80%|████████  | 2487/3107 [12:48:59<2:54:12, 16.86s/it]

 80%|████████  | 2488/3107 [12:49:13<2:46:03, 16.10s/it]

 80%|████████  | 2489/3107 [12:49:33<2:58:01, 17.28s/it]
{'loss': 0.733, 'grad_norm': 0.13254072495868852, 'learning_rate': 2.005251156107426e-05, 'epoch': 0.8}


 80%|████████  | 2491/3107 [12:50:04<2:44:40, 16.04s/it]
{'loss': 0.8051, 'grad_norm': 0.15264120355790106, 'learning_rate': 1.9927418099224517e-05, 'epoch': 0.8}

 80%|████████  | 2492/3107 [12:50:26<3:05:28, 18.09s/it]


 80%|████████  | 2494/3107 [12:51:08<3:16:12, 19.21s/it]
{'loss': 0.707, 'grad_norm': 0.1554833272579134, 'learning_rate': 1.9740430975661528e-05, 'epoch': 0.8}

 80%|████████  | 2495/3107 [12:51:28<3:20:47, 19.69s/it]

 80%|████████  | 2496/3107 [12:51:50<3:27:23, 20.37s/it]

 80%|████████  | 2497/3107 [12:52:12<3:31:13, 20.78s/it]


 80%|████████  | 2499/3107 [12:52:41<2:59:53, 17.75s/it]
{'loss': 0.8974, 'grad_norm': 0.1551166812265989, 'learning_rate': 1.943053180040302e-05, 'epoch': 0.8}


 80%|████████  | 2501/3107 [12:53:09<2:41:32, 15.99s/it]

 81%|████████  | 2502/3107 [12:53:31<2:58:41, 17.72s/it]

 81%|████████  | 2503/3107 [12:53:45<2:46:55, 16.58s/it]

 81%|████████  | 2504/3107 [12:54:01<2:45:56, 16.51s/it]
{'loss': 0.9603, 'grad_norm': 0.15446010101914748, 'learning_rate': 1.9122822458184807e-05, 'epoch': 0.81}

 81%|████████  | 2505/3107 [12:54:14<2:34:40, 15.42s/it]


 81%|████████  | 2507/3107 [12:54:41<2:24:55, 14.49s/it]

 81%|████████  | 2508/3107 [12:55:02<2:41:32, 16.18s/it]
{'loss': 0.9004, 'grad_norm': 0.17000989628449603, 'learning_rate': 1.8878237286387968e-05, 'epoch': 0.81}


 81%|████████  | 2510/3107 [12:55:38<2:51:38, 17.25s/it]
{'loss': 0.8916, 'grad_norm': 0.16082704084816368, 'learning_rate': 1.875647359855427e-05, 'epoch': 0.81}


 81%|████████  | 2512/3107 [12:56:07<2:36:09, 15.75s/it]

 81%|████████  | 2513/3107 [12:56:25<2:43:05, 16.47s/it]

 81%|████████  | 2514/3107 [12:56:39<2:36:06, 15.80s/it]

 81%|████████  | 2515/3107 [12:57:01<2:54:20, 17.67s/it]
{'loss': 0.8567, 'grad_norm': 0.15101803724393587, 'learning_rate': 1.845361124394097e-05, 'epoch': 0.81}


 81%|████████  | 2517/3107 [12:57:43<3:04:14, 18.74s/it]
{'loss': 0.9463, 'grad_norm': 0.16230049360095775, 'learning_rate': 1.8333086431000424e-05, 'epoch': 0.81}

 81%|████████  | 2518/3107 [12:57:57<2:49:07, 17.23s/it]


 81%|████████  | 2520/3107 [12:58:45<3:27:31, 21.21s/it]

 81%|████████  | 2521/3107 [12:59:06<3:24:15, 20.91s/it]

 81%|████████  | 2522/3107 [12:59:23<3:14:51, 19.99s/it]
{'loss': 0.8308, 'grad_norm': 0.13177164882150802, 'learning_rate': 1.80333293070288e-05, 'epoch': 0.81}


 81%|████████  | 2524/3107 [12:59:58<2:59:48, 18.50s/it]

 81%|████████▏ | 2525/3107 [13:00:14<2:52:08, 17.75s/it]

 81%|████████▏ | 2526/3107 [13:00:36<3:06:01, 19.21s/it]

 81%|████████▏ | 2527/3107 [13:00:54<3:00:14, 18.65s/it]
{'loss': 0.7847, 'grad_norm': 0.1591170279115613, 'learning_rate': 1.773579999127901e-05, 'epoch': 0.81}
[2024-05-29 02:22:20,976] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 81%|████████▏ | 2529/3107 [13:01:36<3:08:16, 19.54s/it]
{'loss': 0.8627, 'grad_norm': 0.1565655801707755, 'learning_rate': 1.7617413864737153e-05, 'epoch': 0.81}


 81%|████████▏ | 2531/3107 [13:02:12<3:02:27, 19.01s/it]

 81%|████████▏ | 2532/3107 [13:02:32<3:05:00, 19.31s/it]

 82%|████████▏ | 2533/3107 [13:02:48<2:56:18, 18.43s/it]
{'loss': 0.7051, 'grad_norm': 0.1457249687613963, 'learning_rate': 1.7381716901002177e-05, 'epoch': 0.82}

 82%|████████▏ | 2534/3107 [13:03:07<2:57:16, 18.56s/it]


 82%|████████▏ | 2536/3107 [13:03:42<2:51:56, 18.07s/it]
{'loss': 0.7898, 'grad_norm': 0.1662562235885915, 'learning_rate': 1.7205887073541672e-05, 'epoch': 0.82}

 82%|████████▏ | 2537/3107 [13:03:59<2:49:02, 17.79s/it]

 82%|████████▏ | 2538/3107 [13:04:19<2:55:05, 18.46s/it]


 82%|████████▏ | 2540/3107 [13:04:54<2:49:40, 17.95s/it]

 82%|████████▏ | 2541/3107 [13:05:10<2:44:06, 17.40s/it]
{'loss': 0.9777, 'grad_norm': 0.1509903919494595, 'learning_rate': 1.6914638447833698e-05, 'epoch': 0.82}

 82%|████████▏ | 2542/3107 [13:05:23<2:31:30, 16.09s/it]


 82%|████████▏ | 2544/3107 [13:06:04<2:51:55, 18.32s/it]
{'loss': 0.6716, 'grad_norm': 0.16131747256758056, 'learning_rate': 1.674097271087165e-05, 'epoch': 0.82}


 82%|████████▏ | 2546/3107 [13:06:36<2:38:51, 16.99s/it]

 82%|████████▏ | 2547/3107 [13:07:02<3:03:19, 19.64s/it]
{'loss': 0.7256, 'grad_norm': 0.13833024925906812, 'learning_rate': 1.656812163124072e-05, 'epoch': 0.82}

 82%|████████▏ | 2548/3107 [13:07:29<3:25:42, 22.08s/it]


 82%|████████▏ | 2550/3107 [13:08:07<3:08:52, 20.35s/it]
{'loss': 0.8561, 'grad_norm': 0.15481915721865902, 'learning_rate': 1.6396086900221818e-05, 'epoch': 0.82}


 82%|████████▏ | 2552/3107 [13:08:58<3:32:31, 22.98s/it]
{'loss': 0.7635, 'grad_norm': 0.13679853265636002, 'learning_rate': 1.628185143813433e-05, 'epoch': 0.82}
[2024-05-29 02:30:21,431] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 82%|████████▏ | 2553/3107 [13:09:19<3:27:18, 22.45s/it]


 82%|████████▏ | 2555/3107 [13:09:50<2:54:02, 18.92s/it]

 82%|████████▏ | 2556/3107 [13:10:04<2:38:33, 17.27s/it]

 82%|████████▏ | 2557/3107 [13:10:25<2:47:58, 18.33s/it]

 82%|████████▏ | 2558/3107 [13:10:44<2:51:12, 18.71s/it]

 82%|████████▏ | 2559/3107 [13:10:56<2:31:44, 16.61s/it]

 82%|████████▏ | 2560/3107 [13:11:11<2:26:13, 16.04s/it]
{'loss': 0.846, 'grad_norm': 0.16482709250675745, 'learning_rate': 1.5828555200584293e-05, 'epoch': 0.82}


 82%|████████▏ | 2562/3107 [13:11:51<2:48:03, 18.50s/it]
{'loss': 0.7842, 'grad_norm': 0.16632247692827415, 'learning_rate': 1.571614500797012e-05, 'epoch': 0.82}

 82%|████████▏ | 2563/3107 [13:12:13<2:58:26, 19.68s/it]

 83%|████████▎ | 2564/3107 [13:12:32<2:55:42, 19.42s/it]


 83%|████████▎ | 2566/3107 [13:13:07<2:50:36, 18.92s/it]

 83%|████████▎ | 2567/3107 [13:13:21<2:36:55, 17.44s/it]

 83%|████████▎ | 2568/3107 [13:13:39<2:38:04, 17.60s/it]
{'loss': 0.7613, 'grad_norm': 0.1468534904616027, 'learning_rate': 1.5381115538175317e-05, 'epoch': 0.83}
[2024-05-29 02:35:04,317] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 83%|████████▎ | 2569/3107 [13:14:02<2:53:15, 19.32s/it]


 83%|████████▎ | 2571/3107 [13:14:37<2:40:43, 17.99s/it]

 83%|████████▎ | 2572/3107 [13:15:01<2:56:54, 19.84s/it]

 83%|████████▎ | 2573/3107 [13:15:17<2:45:25, 18.59s/it]
{'loss': 0.8669, 'grad_norm': 0.1575721552592347, 'learning_rate': 1.510445364154406e-05, 'epoch': 0.83}


 83%|████████▎ | 2575/3107 [13:15:56<2:51:14, 19.31s/it]
{'loss': 0.7619, 'grad_norm': 0.14432883500761481, 'learning_rate': 1.4994434539662071e-05, 'epoch': 0.83}

 83%|████████▎ | 2576/3107 [13:16:08<2:30:36, 17.02s/it]

 83%|████████▎ | 2577/3107 [13:16:24<2:26:23, 16.57s/it]


 83%|████████▎ | 2579/3107 [13:17:05<2:43:05, 18.53s/it]
{'loss': 0.8045, 'grad_norm': 0.15507085755221198, 'learning_rate': 1.4775505808609191e-05, 'epoch': 0.83}

 83%|████████▎ | 2580/3107 [13:17:16<2:22:46, 16.25s/it]

 83%|████████▎ | 2581/3107 [13:17:32<2:22:12, 16.22s/it]

 83%|████████▎ | 2582/3107 [13:17:52<2:32:55, 17.48s/it]


 83%|████████▎ | 2584/3107 [13:18:37<2:51:35, 19.69s/it]

 83%|████████▎ | 2585/3107 [13:18:55<2:46:52, 19.18s/it]

 83%|████████▎ | 2586/3107 [13:19:29<3:26:50, 23.82s/it]
{'loss': 0.835, 'grad_norm': 0.14510572135187844, 'learning_rate': 1.4395949993747315e-05, 'epoch': 0.83}

 83%|████████▎ | 2587/3107 [13:19:46<3:07:03, 21.58s/it]


 83%|████████▎ | 2589/3107 [13:20:21<2:50:05, 19.70s/it]
{'loss': 0.7942, 'grad_norm': 0.15650602639594258, 'learning_rate': 1.423467804461357e-05, 'epoch': 0.83}

 83%|████████▎ | 2590/3107 [13:20:36<2:35:12, 18.01s/it]

 83%|████████▎ | 2591/3107 [13:20:58<2:45:30, 19.25s/it]


 83%|████████▎ | 2593/3107 [13:21:45<3:05:34, 21.66s/it]
{'loss': 0.8207, 'grad_norm': 0.1543574126553634, 'learning_rate': 1.4020954442474144e-05, 'epoch': 0.83}

 83%|████████▎ | 2594/3107 [13:22:02<2:53:20, 20.27s/it]


 84%|████████▎ | 2596/3107 [13:22:43<2:50:16, 19.99s/it]
{'loss': 0.8503, 'grad_norm': 0.14640586938967912, 'learning_rate': 1.3861643021512438e-05, 'epoch': 0.84}


 84%|████████▎ | 2598/3107 [13:23:21<2:39:47, 18.84s/it]

 84%|████████▎ | 2599/3107 [13:23:33<2:23:24, 16.94s/it]
{'loss': 0.8926, 'grad_norm': 0.16146625672821285, 'learning_rate': 1.3703174431007559e-05, 'epoch': 0.84}


 84%|████████▎ | 2601/3107 [13:24:03<2:13:58, 15.89s/it]

 84%|████████▎ | 2602/3107 [13:24:15<2:04:04, 14.74s/it]
{'loss': 0.863, 'grad_norm': 0.15098708750168466, 'learning_rate': 1.3545550221513281e-05, 'epoch': 0.84}

 84%|████████▍ | 2603/3107 [13:24:34<2:15:15, 16.10s/it]


 84%|████████▍ | 2605/3107 [13:25:05<2:07:48, 15.28s/it]

 84%|████████▍ | 2606/3107 [13:25:29<2:30:18, 18.00s/it]
{'loss': 0.6996, 'grad_norm': 0.14467642258858895, 'learning_rate': 1.3336700754923981e-05, 'epoch': 0.84}


 84%|████████▍ | 2608/3107 [13:25:59<2:15:31, 16.30s/it]
{'loss': 0.834, 'grad_norm': 0.14631082401456003, 'learning_rate': 1.3232841106446792e-05, 'epoch': 0.84}

 84%|████████▍ | 2609/3107 [13:26:23<2:32:25, 18.36s/it]


 84%|████████▍ | 2611/3107 [13:27:13<3:00:38, 21.85s/it]
{'loss': 0.8199, 'grad_norm': 0.14175666935628017, 'learning_rate': 1.3077759260612188e-05, 'epoch': 0.84}


 84%|████████▍ | 2613/3107 [13:27:52<2:46:46, 20.26s/it]

 84%|████████▍ | 2614/3107 [13:28:12<2:45:31, 20.15s/it]
{'loss': 0.7885, 'grad_norm': 0.14005585354160682, 'learning_rate': 1.2923527915233336e-05, 'epoch': 0.84}


 84%|████████▍ | 2616/3107 [13:28:46<2:28:11, 18.11s/it]

 84%|████████▍ | 2617/3107 [13:29:03<2:27:01, 18.00s/it]

 84%|████████▍ | 2618/3107 [13:29:27<2:40:58, 19.75s/it]
{'loss': 0.6671, 'grad_norm': 0.1356334003292419, 'learning_rate': 1.271921172921403e-05, 'epoch': 0.84}


 84%|████████▍ | 2620/3107 [13:29:58<2:20:31, 17.31s/it]

 84%|████████▍ | 2621/3107 [13:30:18<2:26:53, 18.14s/it]
{'loss': 0.7671, 'grad_norm': 0.1528288063423231, 'learning_rate': 1.2566970739186445e-05, 'epoch': 0.84}


 84%|████████▍ | 2623/3107 [13:31:08<2:54:32, 21.64s/it]
{'loss': 0.8583, 'grad_norm': 0.13928296122112135, 'learning_rate': 1.2465951931073694e-05, 'epoch': 0.84}

 84%|████████▍ | 2624/3107 [13:31:35<3:07:28, 23.29s/it]
[2024-05-29 02:53:00,691] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 84%|████████▍ | 2625/3107 [13:31:58<3:07:52, 23.39s/it]

 85%|████████▍ | 2626/3107 [13:32:13<2:46:11, 20.73s/it]


 85%|████████▍ | 2628/3107 [13:32:52<2:41:25, 20.22s/it]

 85%|████████▍ | 2629/3107 [13:33:16<2:51:20, 21.51s/it]
{'loss': 0.8516, 'grad_norm': 0.16060670124023976, 'learning_rate': 1.2165181221376787e-05, 'epoch': 0.85}

 85%|████████▍ | 2630/3107 [13:33:31<2:35:17, 19.53s/it]


 85%|████████▍ | 2632/3107 [13:34:03<2:23:51, 18.17s/it]
{'loss': 0.7555, 'grad_norm': 0.14369071372456724, 'learning_rate': 1.2016084277413442e-05, 'epoch': 0.85}

 85%|████████▍ | 2633/3107 [13:34:17<2:12:24, 16.76s/it]

 85%|████████▍ | 2634/3107 [13:34:43<2:34:56, 19.65s/it]

 85%|████████▍ | 2635/3107 [13:35:03<2:34:22, 19.62s/it]

 85%|████████▍ | 2636/3107 [13:35:21<2:30:21, 19.15s/it]

 85%|████████▍ | 2637/3107 [13:35:39<2:26:58, 18.76s/it]


 85%|████████▍ | 2639/3107 [13:36:16<2:22:18, 18.25s/it]
{'loss': 0.8289, 'grad_norm': 0.1476423038473992, 'learning_rate': 1.1671541813726194e-05, 'epoch': 0.85}


 85%|████████▌ | 2641/3107 [13:36:56<2:30:38, 19.40s/it]

 85%|████████▌ | 2642/3107 [13:37:16<2:31:53, 19.60s/it]

 85%|████████▌ | 2643/3107 [13:37:32<2:24:02, 18.63s/it]
{'loss': 0.9079, 'grad_norm': 0.15686784704656373, 'learning_rate': 1.1476771866269242e-05, 'epoch': 0.85}


 85%|████████▌ | 2645/3107 [13:37:57<1:59:12, 15.48s/it]

 85%|████████▌ | 2646/3107 [13:38:14<2:02:45, 15.98s/it]
{'loss': 0.886, 'grad_norm': 0.15937603901648334, 'learning_rate': 1.1331704747174732e-05, 'epoch': 0.85}

 85%|████████▌ | 2647/3107 [13:38:31<2:05:33, 16.38s/it]
[2024-05-29 02:59:55,371] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 85%|████████▌ | 2649/3107 [13:39:10<2:15:55, 17.81s/it]

 85%|████████▌ | 2650/3107 [13:39:22<2:01:22, 15.93s/it]
{'loss': 0.8703, 'grad_norm': 0.1559129291003284, 'learning_rate': 1.1139631742372425e-05, 'epoch': 0.85}

 85%|████████▌ | 2651/3107 [13:39:37<2:00:19, 15.83s/it]

 85%|████████▌ | 2652/3107 [13:39:55<2:05:08, 16.50s/it]

 85%|████████▌ | 2653/3107 [13:40:09<1:58:16, 15.63s/it]

 85%|████████▌ | 2654/3107 [13:40:33<2:17:45, 18.25s/it]


 85%|████████▌ | 2656/3107 [13:41:06<2:08:37, 17.11s/it]
{'loss': 0.7932, 'grad_norm': 0.15487835755620444, 'learning_rate': 1.085442148434469e-05, 'epoch': 0.85}
[2024-05-29 03:02:41,446] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 86%|████████▌ | 2658/3107 [13:41:54<2:27:48, 19.75s/it]

 86%|████████▌ | 2659/3107 [13:42:07<2:12:17, 17.72s/it]

 86%|████████▌ | 2660/3107 [13:42:26<2:15:36, 18.20s/it]
{'loss': 0.7787, 'grad_norm': 0.15080569133790872, 'learning_rate': 1.0666218968490149e-05, 'epoch': 0.86}


 86%|████████▌ | 2662/3107 [13:42:55<2:01:59, 16.45s/it]

 86%|████████▌ | 2663/3107 [13:43:22<2:25:59, 19.73s/it]

 86%|████████▌ | 2664/3107 [13:43:44<2:30:33, 20.39s/it]

 86%|████████▌ | 2665/3107 [13:43:57<2:13:38, 18.14s/it]
{'loss': 0.7619, 'grad_norm': 0.15003953671567344, 'learning_rate': 1.0433151444465018e-05, 'epoch': 0.86}


 86%|████████▌ | 2667/3107 [13:44:32<2:10:58, 17.86s/it]
{'loss': 0.902, 'grad_norm': 0.15634975221405267, 'learning_rate': 1.0340605707840534e-05, 'epoch': 0.86}


 86%|████████▌ | 2669/3107 [13:45:12<2:20:41, 19.27s/it]
{'loss': 0.7647, 'grad_norm': 0.14557082515522127, 'learning_rate': 1.0248449874700705e-05, 'epoch': 0.86}
[2024-05-29 03:06:39,809] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 86%|████████▌ | 2671/3107 [13:45:52<2:20:02, 19.27s/it]
{'loss': 0.9029, 'grad_norm': 0.15533093934858888, 'learning_rate': 1.01566843458053e-05, 'epoch': 0.86}

 86%|████████▌ | 2672/3107 [13:46:07<2:10:00, 17.93s/it]

 86%|████████▌ | 2673/3107 [13:46:26<2:10:54, 18.10s/it]


 86%|████████▌ | 2675/3107 [13:46:59<2:05:37, 17.45s/it]

 86%|████████▌ | 2676/3107 [13:47:17<2:06:16, 17.58s/it]

 86%|████████▌ | 2677/3107 [13:47:33<2:02:52, 17.14s/it]
{'loss': 0.8512, 'grad_norm': 0.14739416086175497, 'learning_rate': 9.883733566713416e-06, 'epoch': 0.86}


 86%|████████▌ | 2679/3107 [13:48:01<1:49:52, 15.40s/it]
{'loss': 0.7657, 'grad_norm': 0.13898050445214338, 'learning_rate': 9.79353322842127e-06, 'epoch': 0.86}


 86%|████████▋ | 2681/3107 [13:48:33<1:51:50, 15.75s/it]

 86%|████████▋ | 2682/3107 [13:48:51<1:56:29, 16.45s/it]

 86%|████████▋ | 2683/3107 [13:49:02<1:45:52, 14.98s/it]
{'loss': 0.8166, 'grad_norm': 0.16541506052542443, 'learning_rate': 9.614309790033859e-06, 'epoch': 0.86}


 86%|████████▋ | 2685/3107 [13:49:39<1:59:32, 17.00s/it]

 86%|████████▋ | 2686/3107 [13:49:55<1:55:45, 16.50s/it]
{'loss': 0.837, 'grad_norm': 0.16225967279795342, 'learning_rate': 9.480923828253274e-06, 'epoch': 0.86}


 87%|████████▋ | 2688/3107 [13:50:25<1:47:58, 15.46s/it]

 87%|████████▋ | 2689/3107 [13:50:37<1:41:18, 14.54s/it]
{'loss': 0.8226, 'grad_norm': 0.1584278636572556, 'learning_rate': 9.34842356056993e-06, 'epoch': 0.87}


 87%|████████▋ | 2691/3107 [13:51:17<1:57:44, 16.98s/it]

 87%|████████▋ | 2692/3107 [13:51:33<1:56:11, 16.80s/it]

 87%|████████▋ | 2693/3107 [13:51:55<2:05:07, 18.14s/it]
{'loss': 0.7594, 'grad_norm': 0.1667378655427739, 'learning_rate': 9.173136522917457e-06, 'epoch': 0.87}

 87%|████████▋ | 2694/3107 [13:52:12<2:03:07, 17.89s/it]

 87%|████████▋ | 2695/3107 [13:52:34<2:10:38, 19.03s/it]


 87%|████████▋ | 2697/3107 [13:53:27<2:40:35, 23.50s/it]

 87%|████████▋ | 2698/3107 [13:53:41<2:19:36, 20.48s/it]

 87%|████████▋ | 2699/3107 [13:53:53<2:03:44, 18.20s/it]

 87%|████████▋ | 2700/3107 [13:54:14<2:07:35, 18.81s/it]
 87%|████████▋ | 2700/3107 [13:54:14<2:07:35, 18.81s/it]/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/peft/utils/save_and_load.py:154: UserWarning: Could not find a config file in /mnt/petrelfs/liaoyusheng/oss/download_models/Qwen1.5-7B-Chat - will assume that the vocabulary was not modified.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/nn/modules/module.py:1879: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
 87%|████████▋ | 2701/3107 [13:54:58<2:58:26, 26.37s/it]

 87%|████████▋ | 2702/3107 [13:55:11<2:32:36, 22.61s/it]

 87%|████████▋ | 2703/3107 [13:55:32<2:27:20, 21.88s/it]
{'loss': 0.7552, 'grad_norm': 0.13799021326304967, 'learning_rate': 8.741837681911402e-06, 'epoch': 0.87}

 87%|████████▋ | 2704/3107 [13:56:02<2:43:46, 24.38s/it]


 87%|████████▋ | 2706/3107 [13:56:44<2:32:40, 22.84s/it]
{'loss': 0.838, 'grad_norm': 0.15992676036563272, 'learning_rate': 8.614380580859705e-06, 'epoch': 0.87}


 87%|████████▋ | 2708/3107 [13:57:12<2:01:24, 18.26s/it]
{'loss': 0.8537, 'grad_norm': 0.15665879672657324, 'learning_rate': 8.529905866250986e-06, 'epoch': 0.87}


 87%|████████▋ | 2710/3107 [13:57:49<2:01:03, 18.30s/it]

 87%|████████▋ | 2711/3107 [13:58:07<1:59:44, 18.14s/it]

 87%|████████▋ | 2712/3107 [13:58:21<1:51:37, 16.96s/it]
{'loss': 0.7691, 'grad_norm': 0.14609877444246727, 'learning_rate': 8.362150135787261e-06, 'epoch': 0.87}


 87%|████████▋ | 2714/3107 [13:58:57<1:57:03, 17.87s/it]
{'loss': 0.8612, 'grad_norm': 0.16000180776185421, 'learning_rate': 8.278869849454718e-06, 'epoch': 0.87}


 87%|████████▋ | 2716/3107 [13:59:27<1:47:26, 16.49s/it]

 87%|████████▋ | 2717/3107 [13:59:47<1:54:37, 17.64s/it]
{'loss': 0.7824, 'grad_norm': 0.16445950198137205, 'learning_rate': 8.154697412771029e-06, 'epoch': 0.87}


 88%|████████▊ | 2719/3107 [14:00:18<1:46:52, 16.53s/it]
{'loss': 0.7678, 'grad_norm': 0.15334678747989616, 'learning_rate': 8.07241497518324e-06, 'epoch': 0.88}

 88%|████████▊ | 2720/3107 [14:00:44<2:06:37, 19.63s/it]

 88%|████████▊ | 2721/3107 [14:01:07<2:11:27, 20.43s/it]

 88%|████████▊ | 2722/3107 [14:01:19<1:55:01, 17.93s/it]


 88%|████████▊ | 2724/3107 [14:01:58<1:57:33, 18.42s/it]

 88%|████████▊ | 2725/3107 [14:02:22<2:08:13, 20.14s/it]
{'loss': 0.6753, 'grad_norm': 0.14879995752708888, 'learning_rate': 7.827967688267279e-06, 'epoch': 0.88}


 88%|████████▊ | 2727/3107 [14:03:02<2:06:04, 19.91s/it]

 88%|████████▊ | 2728/3107 [14:03:24<2:08:54, 20.41s/it]

 88%|████████▊ | 2729/3107 [14:03:46<2:11:35, 20.89s/it]

 88%|████████▊ | 2730/3107 [14:04:08<2:14:22, 21.38s/it]
{'loss': 0.6294, 'grad_norm': 0.13513243900718283, 'learning_rate': 7.627016913975638e-06, 'epoch': 0.88}

 88%|████████▊ | 2731/3107 [14:04:27<2:08:14, 20.47s/it]

 88%|████████▊ | 2732/3107 [14:04:39<1:52:13, 17.95s/it]

 88%|████████▊ | 2733/3107 [14:05:01<1:59:19, 19.14s/it]

 88%|████████▊ | 2734/3107 [14:05:31<2:19:34, 22.45s/it]


 88%|████████▊ | 2736/3107 [14:06:06<2:02:57, 19.89s/it]

 88%|████████▊ | 2737/3107 [14:06:23<1:58:31, 19.22s/it]

 88%|████████▊ | 2738/3107 [14:06:44<2:01:17, 19.72s/it]
{'loss': 0.8027, 'grad_norm': 0.15231129693893733, 'learning_rate': 7.310720065255805e-06, 'epoch': 0.88}

 88%|████████▊ | 2739/3107 [14:06:57<1:48:19, 17.66s/it]


 88%|████████▊ | 2741/3107 [14:07:38<1:53:53, 18.67s/it]
{'loss': 0.868, 'grad_norm': 0.15692183070600407, 'learning_rate': 7.1937702735611175e-06, 'epoch': 0.88}

 88%|████████▊ | 2742/3107 [14:07:59<1:57:21, 19.29s/it]

 88%|████████▊ | 2743/3107 [14:08:20<1:59:32, 19.70s/it]


 88%|████████▊ | 2745/3107 [14:09:02<2:00:15, 19.93s/it]
{'loss': 0.8437, 'grad_norm': 0.15957687244677374, 'learning_rate': 7.039249972484119e-06, 'epoch': 0.88}

 88%|████████▊ | 2746/3107 [14:09:15<1:46:15, 17.66s/it]


 88%|████████▊ | 2748/3107 [14:09:58<1:57:57, 19.71s/it]
{'loss': 0.9571, 'grad_norm': 0.16437761267132492, 'learning_rate': 6.924420782486684e-06, 'epoch': 0.88}


 89%|████████▊ | 2750/3107 [14:10:44<2:02:40, 20.62s/it]

 89%|████████▊ | 2751/3107 [14:10:59<1:51:02, 18.71s/it]

 89%|████████▊ | 2752/3107 [14:11:14<1:45:39, 17.86s/it]
{'loss': 0.7091, 'grad_norm': 0.15560602667974457, 'learning_rate': 6.772732046385577e-06, 'epoch': 0.89}

 89%|████████▊ | 2753/3107 [14:11:37<1:54:11, 19.35s/it]

 89%|████████▊ | 2754/3107 [14:11:53<1:47:53, 18.34s/it]

 89%|████████▊ | 2755/3107 [14:12:06<1:37:48, 16.67s/it]

 89%|████████▊ | 2756/3107 [14:12:19<1:31:11, 15.59s/it]

 89%|████████▊ | 2757/3107 [14:12:42<1:43:03, 17.67s/it]

 89%|████████▉ | 2758/3107 [14:12:57<1:39:28, 17.10s/it]

 89%|████████▉ | 2759/3107 [14:13:13<1:37:16, 16.77s/it]


 89%|████████▉ | 2761/3107 [14:13:54<1:50:39, 19.19s/it]

 89%|████████▉ | 2762/3107 [14:14:07<1:38:36, 17.15s/it]
{'loss': 0.95, 'grad_norm': 0.15851077003505284, 'learning_rate': 6.4006107362960195e-06, 'epoch': 0.89}


 89%|████████▉ | 2764/3107 [14:14:42<1:42:34, 17.94s/it]
{'loss': 0.7773, 'grad_norm': 0.16085948390377655, 'learning_rate': 6.3274063007547125e-06, 'epoch': 0.89}

 89%|████████▉ | 2765/3107 [14:14:58<1:37:59, 17.19s/it]


 89%|████████▉ | 2767/3107 [14:15:40<1:48:37, 19.17s/it]

 89%|████████▉ | 2768/3107 [14:16:05<1:56:54, 20.69s/it]
{'loss': 0.7585, 'grad_norm': 0.14142868672026263, 'learning_rate': 6.182219813525958e-06, 'epoch': 0.89}

 89%|████████▉ | 2769/3107 [14:16:34<2:10:45, 23.21s/it]

 89%|████████▉ | 2770/3107 [14:16:50<1:58:22, 21.08s/it]

 89%|████████▉ | 2771/3107 [14:17:02<1:42:22, 18.28s/it]

 89%|████████▉ | 2772/3107 [14:17:26<1:53:01, 20.24s/it]

 89%|████████▉ | 2773/3107 [14:17:55<2:05:54, 22.62s/it]


 89%|████████▉ | 2775/3107 [14:18:39<2:04:00, 22.41s/it]
{'loss': 0.7941, 'grad_norm': 0.15602413224538939, 'learning_rate': 5.932071836018815e-06, 'epoch': 0.89}


 89%|████████▉ | 2777/3107 [14:19:21<1:57:47, 21.42s/it]
{'loss': 0.9116, 'grad_norm': 0.15052134208759166, 'learning_rate': 5.861520824111244e-06, 'epoch': 0.89}

 89%|████████▉ | 2778/3107 [14:19:38<1:50:54, 20.23s/it]

 89%|████████▉ | 2779/3107 [14:19:50<1:36:25, 17.64s/it]

 89%|████████▉ | 2780/3107 [14:20:16<1:49:22, 20.07s/it]


 90%|████████▉ | 2782/3107 [14:20:59<1:53:18, 20.92s/it]
{'loss': 0.7504, 'grad_norm': 0.16110770217136453, 'learning_rate': 5.68693500632117e-06, 'epoch': 0.9}


 90%|████████▉ | 2784/3107 [14:21:39<1:47:38, 20.00s/it]

 90%|████████▉ | 2785/3107 [14:22:01<1:50:58, 20.68s/it]
{'loss': 0.8051, 'grad_norm': 0.1566518491700586, 'learning_rate': 5.583413635482082e-06, 'epoch': 0.9}


 90%|████████▉ | 2787/3107 [14:22:37<1:43:29, 19.40s/it]
{'loss': 0.766, 'grad_norm': 0.16048259703662798, 'learning_rate': 5.51491256483817e-06, 'epoch': 0.9}

 90%|████████▉ | 2788/3107 [14:22:56<1:42:26, 19.27s/it]

 90%|████████▉ | 2789/3107 [14:23:15<1:40:40, 18.99s/it]


 90%|████████▉ | 2791/3107 [14:23:47<1:31:33, 17.39s/it]
{'loss': 0.7496, 'grad_norm': 0.14894561714333726, 'learning_rate': 5.379143386855345e-06, 'epoch': 0.9}

 90%|████████▉ | 2792/3107 [14:24:03<1:27:54, 16.75s/it]

 90%|████████▉ | 2793/3107 [14:24:22<1:31:59, 17.58s/it]


 90%|████████▉ | 2795/3107 [14:24:55<1:30:11, 17.35s/it]

 90%|████████▉ | 2796/3107 [14:25:17<1:37:33, 18.82s/it]
{'loss': 0.8062, 'grad_norm': 0.13823812788416656, 'learning_rate': 5.211746758018521e-06, 'epoch': 0.9}

 90%|█████████ | 2797/3107 [14:25:43<1:47:40, 20.84s/it]

 90%|█████████ | 2798/3107 [14:26:01<1:42:53, 19.98s/it]


 90%|█████████ | 2800/3107 [14:26:32<1:29:54, 17.57s/it]
{'loss': 0.8067, 'grad_norm': 0.1403067756102896, 'learning_rate': 5.0796841689064515e-06, 'epoch': 0.9}

 90%|█████████ | 2801/3107 [14:26:54<1:37:09, 19.05s/it]

 90%|█████████ | 2802/3107 [14:27:23<1:51:09, 21.87s/it]

 90%|█████████ | 2803/3107 [14:27:38<1:41:40, 20.07s/it]


 90%|█████████ | 2805/3107 [14:28:21<1:40:54, 20.05s/it]
{'loss': 0.8733, 'grad_norm': 0.15648203189878113, 'learning_rate': 4.91692809382015e-06, 'epoch': 0.9}

 90%|█████████ | 2806/3107 [14:28:45<1:46:00, 21.13s/it]


 90%|█████████ | 2808/3107 [14:29:16<1:29:54, 18.04s/it]

 90%|█████████ | 2809/3107 [14:29:38<1:35:37, 19.25s/it]
{'loss': 0.7346, 'grad_norm': 0.14428117420665046, 'learning_rate': 4.788583723134498e-06, 'epoch': 0.9}

 90%|█████████ | 2810/3107 [14:29:55<1:32:07, 18.61s/it]


 91%|█████████ | 2812/3107 [14:30:38<1:38:08, 19.96s/it]
{'loss': 0.7386, 'grad_norm': 0.15123028929585172, 'learning_rate': 4.6934121980543366e-06, 'epoch': 0.91}

 91%|█████████ | 2813/3107 [14:30:53<1:30:31, 18.48s/it]


 91%|█████████ | 2815/3107 [14:31:32<1:33:15, 19.16s/it]
{'loss': 0.8279, 'grad_norm': 0.14100713159368305, 'learning_rate': 4.599173211018237e-06, 'epoch': 0.91}

 91%|█████████ | 2816/3107 [14:31:45<1:24:16, 17.38s/it]

 91%|█████████ | 2817/3107 [14:31:58<1:18:02, 16.15s/it]

 91%|█████████ | 2818/3107 [14:32:12<1:14:52, 15.54s/it]


 91%|█████████ | 2820/3107 [14:32:48<1:21:29, 17.04s/it]

 91%|█████████ | 2821/3107 [14:33:08<1:24:56, 17.82s/it]
{'loss': 0.7734, 'grad_norm': 0.15284856339225966, 'learning_rate': 4.413496530312633e-06, 'epoch': 0.91}

 91%|█████████ | 2822/3107 [14:33:31<1:33:01, 19.58s/it]
[2024-05-29 03:54:52,628] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 91%|█████████ | 2823/3107 [14:33:50<1:31:48, 19.40s/it]

 91%|█████████ | 2824/3107 [14:34:02<1:19:53, 16.94s/it]


 91%|█████████ | 2826/3107 [14:34:32<1:14:35, 15.93s/it]
{'loss': 0.7646, 'grad_norm': 0.16484396408208735, 'learning_rate': 4.261623442624274e-06, 'epoch': 0.91}


 91%|█████████ | 2828/3107 [14:35:10<1:18:24, 16.86s/it]
{'loss': 0.8293, 'grad_norm': 0.15137833128017708, 'learning_rate': 4.201602571099506e-06, 'epoch': 0.91}

 91%|█████████ | 2829/3107 [14:35:27<1:18:06, 16.86s/it]

 91%|█████████ | 2830/3107 [14:35:44<1:17:32, 16.79s/it]


 91%|█████████ | 2832/3107 [14:36:12<1:10:58, 15.49s/it]
{'loss': 0.8573, 'grad_norm': 0.148637653697601, 'learning_rate': 4.082810888099353e-06, 'epoch': 0.91}

 91%|█████████ | 2833/3107 [14:36:26<1:07:47, 14.85s/it]

 91%|█████████ | 2834/3107 [14:36:41<1:08:08, 14.98s/it]

 91%|█████████ | 2835/3107 [14:36:56<1:07:21, 14.86s/it]

 91%|█████████▏| 2836/3107 [14:37:16<1:14:06, 16.41s/it]

 91%|█████████▏| 2837/3107 [14:37:31<1:12:03, 16.01s/it]


 91%|█████████▏| 2839/3107 [14:37:58<1:06:08, 14.81s/it]
{'loss': 0.8507, 'grad_norm': 0.15236946993029102, 'learning_rate': 3.87894141507702e-06, 'epoch': 0.91}

 91%|█████████▏| 2840/3107 [14:38:19<1:13:55, 16.61s/it]

 91%|█████████▏| 2841/3107 [14:38:35<1:12:43, 16.40s/it]

 91%|█████████▏| 2842/3107 [14:39:01<1:25:01, 19.25s/it]


 92%|█████████▏| 2844/3107 [14:39:50<1:35:57, 21.89s/it]

 92%|█████████▏| 2845/3107 [14:40:10<1:33:45, 21.47s/it]

 92%|█████████▏| 2846/3107 [14:40:26<1:26:20, 19.85s/it]

 92%|█████████▏| 2847/3107 [14:40:51<1:31:30, 21.12s/it]

 92%|█████████▏| 2848/3107 [14:41:18<1:39:21, 23.02s/it]
{'loss': 0.7977, 'grad_norm': 0.1537822058374984, 'learning_rate': 3.6243490410087012e-06, 'epoch': 0.92}

 92%|█████████▏| 2849/3107 [14:41:38<1:34:46, 22.04s/it]


 92%|█████████▏| 2851/3107 [14:42:15<1:25:37, 20.07s/it]

 92%|█████████▏| 2852/3107 [14:42:32<1:22:01, 19.30s/it]
{'loss': 0.8572, 'grad_norm': 0.1555981974922678, 'learning_rate': 3.5139197690780557e-06, 'epoch': 0.92}

 92%|█████████▏| 2853/3107 [14:43:00<1:32:12, 21.78s/it]

 92%|█████████▏| 2854/3107 [14:43:11<1:19:07, 18.76s/it]


 92%|█████████▏| 2856/3107 [14:43:47<1:17:34, 18.55s/it]
{'loss': 0.7952, 'grad_norm': 0.15561122810296332, 'learning_rate': 3.4051688586085427e-06, 'epoch': 0.92}


 92%|█████████▏| 2858/3107 [14:44:33<1:24:45, 20.43s/it]
{'loss': 0.9599, 'grad_norm': 0.16422225031777316, 'learning_rate': 3.351423381221286e-06, 'epoch': 0.92}

 92%|█████████▏| 2859/3107 [14:44:53<1:24:25, 20.42s/it]


 92%|█████████▏| 2861/3107 [14:45:39<1:29:20, 21.79s/it]
{'loss': 0.7438, 'grad_norm': 0.1611622377393807, 'learning_rate': 3.2715932954403784e-06, 'epoch': 0.92}

 92%|█████████▏| 2862/3107 [14:45:52<1:18:41, 19.27s/it]


 92%|█████████▏| 2864/3107 [14:46:25<1:11:48, 17.73s/it]
{'loss': 0.8247, 'grad_norm': 0.16135936690361585, 'learning_rate': 3.19270965965075e-06, 'epoch': 0.92}


 92%|█████████▏| 2866/3107 [14:47:05<1:17:38, 19.33s/it]
{'loss': 0.7289, 'grad_norm': 0.14619745193986666, 'learning_rate': 3.1406467562147934e-06, 'epoch': 0.92}

 92%|█████████▏| 2867/3107 [14:47:20<1:11:59, 18.00s/it]


 92%|█████████▏| 2869/3107 [14:47:57<1:14:05, 18.68s/it]
{'loss': 0.7406, 'grad_norm': 0.15344736691367147, 'learning_rate': 3.063342247713652e-06, 'epoch': 0.92}

 92%|█████████▏| 2870/3107 [14:48:20<1:19:54, 20.23s/it]

 92%|█████████▏| 2871/3107 [14:48:46<1:25:56, 21.85s/it]

 92%|█████████▏| 2872/3107 [14:49:04<1:21:10, 20.72s/it]


 93%|█████████▎| 2874/3107 [14:49:39<1:12:59, 18.80s/it]
{'loss': 0.8559, 'grad_norm': 0.15927762004395019, 'learning_rate': 2.9366095198660292e-06, 'epoch': 0.93}

 93%|█████████▎| 2875/3107 [14:50:02<1:17:42, 20.10s/it]

 93%|█████████▎| 2876/3107 [14:50:20<1:14:55, 19.46s/it]


 93%|█████████▎| 2878/3107 [14:50:49<1:04:28, 16.89s/it]
{'loss': 0.7933, 'grad_norm': 0.14866671706952714, 'learning_rate': 2.837122627261357e-06, 'epoch': 0.93}

 93%|█████████▎| 2879/3107 [14:51:05<1:02:52, 16.55s/it]

 93%|█████████▎| 2880/3107 [14:51:20<1:01:05, 16.15s/it]

 93%|█████████▎| 2881/3107 [14:51:42<1:07:19, 17.87s/it]


 93%|█████████▎| 2883/3107 [14:52:13<1:02:28, 16.74s/it]
{'loss': 0.8288, 'grad_norm': 0.15107370580408666, 'learning_rate': 2.7151409627955484e-06, 'epoch': 0.93}

 93%|█████████▎| 2884/3107 [14:52:28<1:00:31, 16.28s/it]


 93%|█████████▎| 2886/3107 [14:53:13<1:12:24, 19.66s/it]
{'loss': 0.8552, 'grad_norm': 0.14583194768190144, 'learning_rate': 2.6432209459621104e-06, 'epoch': 0.93}

 93%|█████████▎| 2887/3107 [14:53:34<1:13:48, 20.13s/it]


 93%|█████████▎| 2889/3107 [14:54:13<1:12:59, 20.09s/it]
{'loss': 0.6662, 'grad_norm': 0.15114876430436341, 'learning_rate': 2.5722535275000014e-06, 'epoch': 0.93}

 93%|█████████▎| 2890/3107 [14:54:29<1:08:17, 18.88s/it]


 93%|█████████▎| 2892/3107 [14:55:13<1:12:35, 20.26s/it]

 93%|█████████▎| 2893/3107 [14:55:31<1:09:48, 19.57s/it]
{'loss': 0.8079, 'grad_norm': 0.14832770565361786, 'learning_rate': 2.4791133214072116e-06, 'epoch': 0.93}

 93%|█████████▎| 2894/3107 [14:55:50<1:08:37, 19.33s/it]

 93%|█████████▎| 2895/3107 [14:56:11<1:09:51, 19.77s/it]

 93%|█████████▎| 2896/3107 [14:56:28<1:07:19, 19.14s/it]

 93%|█████████▎| 2897/3107 [14:56:42<1:01:36, 17.60s/it]


 93%|█████████▎| 2899/3107 [14:57:19<1:01:11, 17.65s/it]
{'loss': 0.812, 'grad_norm': 0.1592050037965831, 'learning_rate': 2.3425841888193744e-06, 'epoch': 0.93}

 93%|█████████▎| 2900/3107 [14:57:40<1:04:10, 18.60s/it]

 93%|█████████▎| 2901/3107 [14:57:58<1:02:56, 18.33s/it]

 93%|█████████▎| 2902/3107 [14:58:12<58:24, 17.09s/it]


 93%|█████████▎| 2904/3107 [14:58:45<57:13, 16.92s/it]

 93%|█████████▎| 2905/3107 [14:58:56<50:13, 14.92s/it]
{'loss': 0.754, 'grad_norm': 0.17316800199082583, 'learning_rate': 2.2098772068240516e-06, 'epoch': 0.93}


 94%|█████████▎| 2907/3107 [14:59:30<53:26, 16.03s/it]
{'loss': 0.9268, 'grad_norm': 0.14200174453364556, 'learning_rate': 2.166491814987293e-06, 'epoch': 0.94}

 94%|█████████▎| 2908/3107 [14:59:45<52:01, 15.68s/it]

 94%|█████████▎| 2909/3107 [15:00:03<54:08, 16.40s/it]

 94%|█████████▎| 2910/3107 [15:00:16<50:44, 15.45s/it]

 94%|█████████▎| 2911/3107 [15:00:40<59:01, 18.07s/it]

 94%|█████████▎| 2912/3107 [15:01:00<1:00:38, 18.66s/it]


 94%|█████████▍| 2914/3107 [15:01:40<1:01:39, 19.17s/it]
{'loss': 0.7882, 'grad_norm': 0.15878168457738495, 'learning_rate': 2.0179945869660098e-06, 'epoch': 0.94}

 94%|█████████▍| 2915/3107 [15:01:53<55:38, 17.39s/it]


 94%|█████████▍| 2917/3107 [15:02:24<51:35, 16.29s/it]
{'loss': 0.8534, 'grad_norm': 0.15421545234891545, 'learning_rate': 1.955950320546851e-06, 'epoch': 0.94}


 94%|█████████▍| 2919/3107 [15:03:00<55:07, 17.60s/it]

 94%|█████████▍| 2920/3107 [15:03:22<59:06, 18.96s/it]

 94%|█████████▍| 2921/3107 [15:03:42<59:50, 19.30s/it]

 94%|█████████▍| 2922/3107 [15:03:58<56:07, 18.20s/it]
{'loss': 0.8102, 'grad_norm': 0.14555423127191186, 'learning_rate': 1.8546753343874347e-06, 'epoch': 0.94}


 94%|█████████▍| 2924/3107 [15:04:26<49:20, 16.18s/it]

 94%|█████████▍| 2925/3107 [15:04:42<48:53, 16.12s/it]

 94%|█████████▍| 2926/3107 [15:05:04<53:53, 17.86s/it]

 94%|█████████▍| 2927/3107 [15:05:18<50:29, 16.83s/it]
{'loss': 0.676, 'grad_norm': 0.15732779137031538, 'learning_rate': 1.756067883207546e-06, 'epoch': 0.94}

 94%|█████████▍| 2928/3107 [15:05:37<51:47, 17.36s/it]

 94%|█████████▍| 2929/3107 [15:05:51<49:07, 16.56s/it]

 94%|█████████▍| 2930/3107 [15:06:13<53:00, 17.97s/it]

 94%|█████████▍| 2931/3107 [15:06:34<56:03, 19.11s/it]

 94%|█████████▍| 2932/3107 [15:06:52<53:54, 18.48s/it]

 94%|█████████▍| 2933/3107 [15:07:05<49:08, 16.95s/it]


 94%|█████████▍| 2935/3107 [15:07:40<49:43, 17.34s/it]
{'loss': 0.9068, 'grad_norm': 0.1640966074689475, 'learning_rate': 1.6038510964251352e-06, 'epoch': 0.94}


 95%|█████████▍| 2937/3107 [15:08:08<44:34, 15.73s/it]
{'loss': 0.8628, 'grad_norm': 0.15084433586648802, 'learning_rate': 1.5668662335926787e-06, 'epoch': 0.95}


 95%|█████████▍| 2939/3107 [15:08:58<57:17, 20.46s/it]
{'loss': 0.7959, 'grad_norm': 0.1449751832115703, 'learning_rate': 1.5303094287697938e-06, 'epoch': 0.95}

 95%|█████████▍| 2940/3107 [15:09:24<1:01:40, 22.16s/it]


 95%|█████████▍| 2942/3107 [15:09:58<53:35, 19.49s/it]
{'loss': 0.6932, 'grad_norm': 0.136487422077619, 'learning_rate': 1.4762771775526319e-06, 'epoch': 0.95}

 95%|█████████▍| 2943/3107 [15:10:15<51:02, 18.68s/it]

 95%|█████████▍| 2944/3107 [15:10:31<48:18, 17.78s/it]

 95%|█████████▍| 2945/3107 [15:10:46<45:35, 16.88s/it]

 95%|█████████▍| 2946/3107 [15:11:05<47:37, 17.75s/it]


 95%|█████████▍| 2948/3107 [15:11:44<48:59, 18.49s/it]

 95%|█████████▍| 2949/3107 [15:11:59<45:30, 17.28s/it]

 95%|█████████▍| 2950/3107 [15:12:13<42:39, 16.30s/it]
{'loss': 0.9511, 'grad_norm': 0.15116552138285522, 'learning_rate': 1.336905549729095e-06, 'epoch': 0.95}


 95%|█████████▌| 2952/3107 [15:12:44<40:53, 15.83s/it]
{'loss': 0.9866, 'grad_norm': 0.16283703120205026, 'learning_rate': 1.3031349137394788e-06, 'epoch': 0.95}

 95%|█████████▌| 2953/3107 [15:12:59<39:39, 15.45s/it]


 95%|█████████▌| 2955/3107 [15:13:31<39:32, 15.61s/it]
{'loss': 0.7721, 'grad_norm': 0.14708296385008643, 'learning_rate': 1.2532837643310814e-06, 'epoch': 0.95}

 95%|█████████▌| 2956/3107 [15:13:47<40:12, 15.98s/it]


 95%|█████████▌| 2958/3107 [15:14:23<41:18, 16.64s/it]
{'loss': 0.8457, 'grad_norm': 0.15726902316787836, 'learning_rate': 1.2043988132909078e-06, 'epoch': 0.95}

 95%|█████████▌| 2959/3107 [15:14:38<39:48, 16.14s/it]
[2024-05-29 04:36:08,052] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 95%|█████████▌| 2960/3107 [15:15:06<48:20, 19.73s/it]

 95%|█████████▌| 2961/3107 [15:15:19<43:33, 17.90s/it]

 95%|█████████▌| 2962/3107 [15:15:40<45:06, 18.66s/it]

 95%|█████████▌| 2963/3107 [15:16:07<51:09, 21.31s/it]

 95%|█████████▌| 2964/3107 [15:16:22<45:41, 19.17s/it]

 95%|█████████▌| 2965/3107 [15:16:43<47:06, 19.91s/it]

 95%|█████████▌| 2966/3107 [15:17:01<45:33, 19.39s/it]

 95%|█████████▌| 2967/3107 [15:17:28<50:33, 21.66s/it]

 96%|█████████▌| 2968/3107 [15:17:49<49:48, 21.50s/it]


 96%|█████████▌| 2970/3107 [15:18:37<53:26, 23.41s/it]

 96%|█████████▌| 2971/3107 [15:18:50<46:15, 20.41s/it]
{'loss': 0.8843, 'grad_norm': 0.15760599920350626, 'learning_rate': 1.0037404606971223e-06, 'epoch': 0.96}

 96%|█████████▌| 2972/3107 [15:19:16<49:08, 21.84s/it]


 96%|█████████▌| 2974/3107 [15:19:55<46:51, 21.14s/it]

 96%|█████████▌| 2975/3107 [15:20:15<45:38, 20.75s/it]
{'loss': 0.8207, 'grad_norm': 0.14244482607992134, 'learning_rate': 9.456570607771275e-07, 'epoch': 0.96}

 96%|█████████▌| 2976/3107 [15:20:38<46:56, 21.50s/it]

 96%|█████████▌| 2977/3107 [15:20:57<45:03, 20.79s/it]

 96%|█████████▌| 2978/3107 [15:21:16<43:06, 20.05s/it]

 96%|█████████▌| 2979/3107 [15:21:27<36:55, 17.31s/it]

 96%|█████████▌| 2980/3107 [15:21:40<34:00, 16.07s/it]

 96%|█████████▌| 2981/3107 [15:21:56<33:49, 16.11s/it]

 96%|█████████▌| 2982/3107 [15:22:15<35:07, 16.86s/it]

 96%|█████████▌| 2983/3107 [15:22:28<32:28, 15.72s/it]

 96%|█████████▌| 2984/3107 [15:22:40<30:28, 14.87s/it]

 96%|█████████▌| 2985/3107 [15:22:55<29:45, 14.64s/it]

 96%|█████████▌| 2986/3107 [15:23:12<31:07, 15.44s/it]

 96%|█████████▌| 2987/3107 [15:23:34<34:59, 17.50s/it]

 96%|█████████▌| 2988/3107 [15:23:52<34:56, 17.62s/it]


 96%|█████████▌| 2990/3107 [15:24:31<35:36, 18.26s/it]
{'loss': 0.8344, 'grad_norm': 0.15683562272926926, 'learning_rate': 7.431979974015347e-07, 'epoch': 0.96}

 96%|█████████▋| 2991/3107 [15:24:48<34:42, 17.95s/it]

 96%|█████████▋| 2992/3107 [15:25:04<33:11, 17.31s/it]

 96%|█████████▋| 2993/3107 [15:25:16<30:00, 15.79s/it]

 96%|█████████▋| 2994/3107 [15:25:31<29:04, 15.44s/it]

 96%|█████████▋| 2995/3107 [15:25:50<30:57, 16.58s/it]

 96%|█████████▋| 2996/3107 [15:26:13<34:05, 18.43s/it]

 96%|█████████▋| 2997/3107 [15:26:37<36:48, 20.08s/it]

 96%|█████████▋| 2998/3107 [15:26:54<34:48, 19.16s/it]


 97%|█████████▋| 3000/3107 [15:27:34<35:25, 19.86s/it]
 97%|█████████▋| 3000/3107 [15:27:34<35:25, 19.86s/it]/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/peft/utils/save_and_load.py:154: UserWarning: Could not find a config file in /mnt/petrelfs/liaoyusheng/oss/download_models/Qwen1.5-7B-Chat - will assume that the vocabulary was not modified.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/nn/modules/module.py:1879: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
 97%|█████████▋| 3001/3107 [15:28:16<46:49, 26.51s/it]
{'loss': 0.9013, 'grad_norm': 0.15132603449040596, 'learning_rate': 6.101562668289873e-07, 'epoch': 0.97}


 97%|█████████▋| 3003/3107 [15:28:50<36:39, 21.15s/it]
{'loss': 0.7462, 'grad_norm': 0.1513555904714196, 'learning_rate': 5.873710710805558e-07, 'epoch': 0.97}

 97%|█████████▋| 3004/3107 [15:29:15<38:25, 22.38s/it]


 97%|█████████▋| 3006/3107 [15:29:49<33:24, 19.85s/it]

 97%|█████████▋| 3007/3107 [15:30:07<32:16, 19.36s/it]

 97%|█████████▋| 3008/3107 [15:30:29<33:04, 20.04s/it]
{'loss': 0.8097, 'grad_norm': 0.13932860803700675, 'learning_rate': 5.322996831527038e-07, 'epoch': 0.97}


 97%|█████████▋| 3010/3107 [15:30:54<26:11, 16.20s/it]

 97%|█████████▋| 3011/3107 [15:31:12<26:47, 16.74s/it]
{'loss': 0.7364, 'grad_norm': 0.1493491948081998, 'learning_rate': 5.005544263329664e-07, 'epoch': 0.97}

 97%|█████████▋| 3012/3107 [15:31:26<25:28, 16.09s/it]

 97%|█████████▋| 3013/3107 [15:31:38<23:10, 14.79s/it]

 97%|█████████▋| 3014/3107 [15:31:58<25:36, 16.53s/it]

 97%|█████████▋| 3015/3107 [15:32:10<23:14, 15.16s/it]

 97%|█████████▋| 3016/3107 [15:32:35<27:20, 18.03s/it]

 97%|█████████▋| 3017/3107 [15:32:57<28:41, 19.12s/it]

 97%|█████████▋| 3018/3107 [15:33:13<26:52, 18.11s/it]

 97%|█████████▋| 3019/3107 [15:33:31<26:40, 18.19s/it]

 97%|█████████▋| 3020/3107 [15:33:57<29:52, 20.60s/it]

 97%|█████████▋| 3021/3107 [15:34:21<30:59, 21.62s/it]

 97%|█████████▋| 3022/3107 [15:34:37<28:00, 19.78s/it]


 97%|█████████▋| 3024/3107 [15:35:13<26:29, 19.15s/it]

 97%|█████████▋| 3025/3107 [15:35:36<27:22, 20.04s/it]
{'loss': 0.7262, 'grad_norm': 0.144295550490505, 'learning_rate': 3.652873309687332e-07, 'epoch': 0.97}

 97%|█████████▋| 3026/3107 [15:35:51<24:58, 18.50s/it]

 97%|█████████▋| 3027/3107 [15:36:01<21:25, 16.06s/it]

 97%|█████████▋| 3028/3107 [15:36:26<24:47, 18.83s/it]

 97%|█████████▋| 3029/3107 [15:36:48<25:45, 19.81s/it]


 98%|█████████▊| 3031/3107 [15:37:24<23:16, 18.38s/it]
{'loss': 0.8192, 'grad_norm': 0.15530222980695932, 'learning_rate': 3.138133351292982e-07, 'epoch': 0.98}

 98%|█████████▊| 3032/3107 [15:37:39<21:41, 17.35s/it]

 98%|█████████▊| 3033/3107 [15:37:53<20:14, 16.42s/it]

 98%|█████████▊| 3034/3107 [15:38:05<18:28, 15.18s/it]

 98%|█████████▊| 3035/3107 [15:38:28<20:43, 17.28s/it]

 98%|█████████▊| 3036/3107 [15:38:42<19:36, 16.58s/it]


 98%|█████████▊| 3038/3107 [15:39:22<20:43, 18.02s/it]

 98%|█████████▊| 3039/3107 [15:39:38<19:46, 17.44s/it]
{'loss': 0.8177, 'grad_norm': 0.15546196985557326, 'learning_rate': 2.51250749870835e-07, 'epoch': 0.98}

 98%|█████████▊| 3040/3107 [15:40:05<22:40, 20.31s/it]

 98%|█████████▊| 3041/3107 [15:40:22<21:18, 19.37s/it]

 98%|█████████▊| 3042/3107 [15:40:47<22:30, 20.78s/it]

 98%|█████████▊| 3043/3107 [15:40:59<19:27, 18.24s/it]

 98%|█████████▊| 3044/3107 [15:41:16<18:41, 17.81s/it]

 98%|█████████▊| 3045/3107 [15:41:32<17:50, 17.26s/it]
[2024-05-29 05:02:55,493] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 98%|█████████▊| 3046/3107 [15:41:53<18:51, 18.55s/it]

 98%|█████████▊| 3047/3107 [15:42:15<19:37, 19.62s/it]

 98%|█████████▊| 3048/3107 [15:42:27<16:57, 17.25s/it]


 98%|█████████▊| 3050/3107 [15:43:02<16:37, 17.50s/it]
{'loss': 0.9089, 'grad_norm': 0.1578398503314707, 'learning_rate': 1.7656042178476605e-07, 'epoch': 0.98}


 98%|█████████▊| 3052/3107 [15:43:42<17:28, 19.07s/it]
{'loss': 0.7819, 'grad_norm': 0.14417104043491788, 'learning_rate': 1.6439092507526398e-07, 'epoch': 0.98}


 98%|█████████▊| 3054/3107 [15:44:18<16:26, 18.62s/it]
{'loss': 0.818, 'grad_norm': 0.16217041375685254, 'learning_rate': 1.5265558534592883e-07, 'epoch': 0.98}

 98%|█████████▊| 3055/3107 [15:44:48<18:58, 21.89s/it]

 98%|█████████▊| 3056/3107 [15:45:05<17:28, 20.56s/it]

 98%|█████████▊| 3057/3107 [15:45:31<18:32, 22.25s/it]

 98%|█████████▊| 3058/3107 [15:45:45<16:07, 19.75s/it]


 98%|█████████▊| 3060/3107 [15:46:10<12:35, 16.07s/it]

 99%|█████████▊| 3061/3107 [15:46:34<14:13, 18.54s/it]
{'loss': 0.8904, 'grad_norm': 0.1444515852308983, 'learning_rate': 1.150016022719691e-07, 'epoch': 0.99}

 99%|█████████▊| 3062/3107 [15:46:51<13:30, 18.00s/it]

 99%|█████████▊| 3063/3107 [15:47:04<12:02, 16.42s/it]


 99%|█████████▊| 3065/3107 [15:47:31<10:35, 15.14s/it]
{'loss': 0.9253, 'grad_norm': 0.15242554519971344, 'learning_rate': 9.587395848710268e-08, 'epoch': 0.99}

 99%|█████████▊| 3066/3107 [15:47:48<10:47, 15.80s/it]


 99%|█████████▊| 3068/3107 [15:48:18<10:19, 15.88s/it]
{'loss': 0.7877, 'grad_norm': 0.15170439540671893, 'learning_rate': 8.26686515699171e-08, 'epoch': 0.99}

 99%|█████████▉| 3069/3107 [15:48:35<10:12, 16.11s/it]


 99%|█████████▉| 3071/3107 [15:49:17<11:23, 18.98s/it]
[2024-05-29 05:10:18,797] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 0.812, 'grad_norm': 0.14359476519719325, 'learning_rate': 7.044099703641394e-08, 'epoch': 0.99}

 99%|█████████▉| 3072/3107 [15:49:32<10:27, 17.93s/it]

 99%|█████████▉| 3073/3107 [15:50:07<13:07, 23.17s/it]

 99%|█████████▉| 3074/3107 [15:50:22<11:23, 20.70s/it]

 99%|█████████▉| 3075/3107 [15:50:34<09:39, 18.10s/it]
[2024-05-29 05:12:06,237] [WARNING] [stage3.py:2069:step] 2 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time

 99%|█████████▉| 3076/3107 [15:51:04<11:08, 21.55s/it]

 99%|█████████▉| 3077/3107 [15:51:19<09:50, 19.70s/it]

 99%|█████████▉| 3078/3107 [15:51:34<08:46, 18.14s/it]

 99%|█████████▉| 3079/3107 [15:51:56<08:57, 19.20s/it]

 99%|█████████▉| 3080/3107 [15:52:16<08:45, 19.46s/it]
[2024-05-29 05:13:35,626] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


 99%|█████████▉| 3082/3107 [15:52:53<07:59, 19.19s/it]

 99%|█████████▉| 3083/3107 [15:53:15<08:01, 20.06s/it]

 99%|█████████▉| 3084/3107 [15:53:29<06:57, 18.13s/it]
{'loss': 0.7867, 'grad_norm': 0.14808510866074848, 'learning_rate': 2.8754534684316547e-08, 'epoch': 0.99}

 99%|█████████▉| 3085/3107 [15:53:48<06:45, 18.42s/it]


 99%|█████████▉| 3087/3107 [15:54:23<06:01, 18.08s/it]
{'loss': 0.7829, 'grad_norm': 0.14890645244029474, 'learning_rate': 2.174281342056661e-08, 'epoch': 0.99}

 99%|█████████▉| 3088/3107 [15:54:54<06:56, 21.92s/it]

 99%|█████████▉| 3089/3107 [15:55:12<06:15, 20.84s/it]

 99%|█████████▉| 3090/3107 [15:55:30<05:40, 20.01s/it]

 99%|█████████▉| 3091/3107 [15:55:49<05:12, 19.55s/it]


100%|█████████▉| 3093/3107 [15:56:23<04:19, 18.57s/it]
{'loss': 0.779, 'grad_norm': 0.1395484373774174, 'learning_rate': 1.0654175486446428e-08, 'epoch': 1.0}


100%|█████████▉| 3095/3107 [15:56:59<03:36, 18.08s/it]
{'loss': 0.8346, 'grad_norm': 0.14749034869629138, 'learning_rate': 7.827594376952351e-09, 'epoch': 1.0}


100%|█████████▉| 3097/3107 [15:57:35<02:57, 17.77s/it]
{'loss': 0.703, 'grad_norm': 0.1507104499244045, 'learning_rate': 5.43585109752387e-09, 'epoch': 1.0}

100%|█████████▉| 3098/3107 [15:57:58<02:52, 19.14s/it]

100%|█████████▉| 3099/3107 [15:58:16<02:30, 18.87s/it]


100%|█████████▉| 3101/3107 [15:58:49<01:45, 17.55s/it]
{'loss': 0.8978, 'grad_norm': 0.1499355639498156, 'learning_rate': 1.9569177418743422e-09, 'epoch': 1.0}

100%|█████████▉| 3102/3107 [15:59:00<01:17, 15.59s/it]

100%|█████████▉| 3103/3107 [15:59:21<01:08, 17.03s/it]

100%|█████████▉| 3104/3107 [15:59:34<00:47, 15.87s/it]

100%|█████████▉| 3105/3107 [15:59:54<00:34, 17.09s/it]

100%|█████████▉| 3106/3107 [16:00:10<00:16, 16.81s/it]
{'loss': 0.802, 'grad_norm': 0.15868939426893422, 'learning_rate': 0.0, 'epoch': 1.0}

100%|██████████| 3107/3107 [16:00:27<00:00, 18.55s/it]
/mnt/petrelfs/liaoyusheng/miniconda3/envs/ming/lib/python3.10/site-packages/peft/utils/save_and_load.py:154: UserWarning: Could not find a config file in /mnt/petrelfs/liaoyusheng/oss/download_models/Qwen1.5-7B-Chat - will assume that the vocabulary was not modified.
  warnings.warn(